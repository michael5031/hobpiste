{"mappings":"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","sources":["./node_modules/three/build/three.js"],"sourcesContent":["/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.THREE = {}));\n}(this, (function (exports) { 'use strict';\n\n\tconst REVISION = '130';\n\tconst MOUSE = {\n\t\tLEFT: 0,\n\t\tMIDDLE: 1,\n\t\tRIGHT: 2,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2\n\t};\n\tconst TOUCH = {\n\t\tROTATE: 0,\n\t\tPAN: 1,\n\t\tDOLLY_PAN: 2,\n\t\tDOLLY_ROTATE: 3\n\t};\n\tconst CullFaceNone = 0;\n\tconst CullFaceBack = 1;\n\tconst CullFaceFront = 2;\n\tconst CullFaceFrontBack = 3;\n\tconst BasicShadowMap = 0;\n\tconst PCFShadowMap = 1;\n\tconst PCFSoftShadowMap = 2;\n\tconst VSMShadowMap = 3;\n\tconst FrontSide = 0;\n\tconst BackSide = 1;\n\tconst DoubleSide = 2;\n\tconst FlatShading = 1;\n\tconst SmoothShading = 2;\n\tconst NoBlending = 0;\n\tconst NormalBlending = 1;\n\tconst AdditiveBlending = 2;\n\tconst SubtractiveBlending = 3;\n\tconst MultiplyBlending = 4;\n\tconst CustomBlending = 5;\n\tconst AddEquation = 100;\n\tconst SubtractEquation = 101;\n\tconst ReverseSubtractEquation = 102;\n\tconst MinEquation = 103;\n\tconst MaxEquation = 104;\n\tconst ZeroFactor = 200;\n\tconst OneFactor = 201;\n\tconst SrcColorFactor = 202;\n\tconst OneMinusSrcColorFactor = 203;\n\tconst SrcAlphaFactor = 204;\n\tconst OneMinusSrcAlphaFactor = 205;\n\tconst DstAlphaFactor = 206;\n\tconst OneMinusDstAlphaFactor = 207;\n\tconst DstColorFactor = 208;\n\tconst OneMinusDstColorFactor = 209;\n\tconst SrcAlphaSaturateFactor = 210;\n\tconst NeverDepth = 0;\n\tconst AlwaysDepth = 1;\n\tconst LessDepth = 2;\n\tconst LessEqualDepth = 3;\n\tconst EqualDepth = 4;\n\tconst GreaterEqualDepth = 5;\n\tconst GreaterDepth = 6;\n\tconst NotEqualDepth = 7;\n\tconst MultiplyOperation = 0;\n\tconst MixOperation = 1;\n\tconst AddOperation = 2;\n\tconst NoToneMapping = 0;\n\tconst LinearToneMapping = 1;\n\tconst ReinhardToneMapping = 2;\n\tconst CineonToneMapping = 3;\n\tconst ACESFilmicToneMapping = 4;\n\tconst CustomToneMapping = 5;\n\tconst UVMapping = 300;\n\tconst CubeReflectionMapping = 301;\n\tconst CubeRefractionMapping = 302;\n\tconst EquirectangularReflectionMapping = 303;\n\tconst EquirectangularRefractionMapping = 304;\n\tconst CubeUVReflectionMapping = 306;\n\tconst CubeUVRefractionMapping = 307;\n\tconst RepeatWrapping = 1000;\n\tconst ClampToEdgeWrapping = 1001;\n\tconst MirroredRepeatWrapping = 1002;\n\tconst NearestFilter = 1003;\n\tconst NearestMipmapNearestFilter = 1004;\n\tconst NearestMipMapNearestFilter = 1004;\n\tconst NearestMipmapLinearFilter = 1005;\n\tconst NearestMipMapLinearFilter = 1005;\n\tconst LinearFilter = 1006;\n\tconst LinearMipmapNearestFilter = 1007;\n\tconst LinearMipMapNearestFilter = 1007;\n\tconst LinearMipmapLinearFilter = 1008;\n\tconst LinearMipMapLinearFilter = 1008;\n\tconst UnsignedByteType = 1009;\n\tconst ByteType = 1010;\n\tconst ShortType = 1011;\n\tconst UnsignedShortType = 1012;\n\tconst IntType = 1013;\n\tconst UnsignedIntType = 1014;\n\tconst FloatType = 1015;\n\tconst HalfFloatType = 1016;\n\tconst UnsignedShort4444Type = 1017;\n\tconst UnsignedShort5551Type = 1018;\n\tconst UnsignedShort565Type = 1019;\n\tconst UnsignedInt248Type = 1020;\n\tconst AlphaFormat = 1021;\n\tconst RGBFormat = 1022;\n\tconst RGBAFormat = 1023;\n\tconst LuminanceFormat = 1024;\n\tconst LuminanceAlphaFormat = 1025;\n\tconst RGBEFormat = RGBAFormat;\n\tconst DepthFormat = 1026;\n\tconst DepthStencilFormat = 1027;\n\tconst RedFormat = 1028;\n\tconst RedIntegerFormat = 1029;\n\tconst RGFormat = 1030;\n\tconst RGIntegerFormat = 1031;\n\tconst RGBIntegerFormat = 1032;\n\tconst RGBAIntegerFormat = 1033;\n\tconst RGB_S3TC_DXT1_Format = 33776;\n\tconst RGBA_S3TC_DXT1_Format = 33777;\n\tconst RGBA_S3TC_DXT3_Format = 33778;\n\tconst RGBA_S3TC_DXT5_Format = 33779;\n\tconst RGB_PVRTC_4BPPV1_Format = 35840;\n\tconst RGB_PVRTC_2BPPV1_Format = 35841;\n\tconst RGBA_PVRTC_4BPPV1_Format = 35842;\n\tconst RGBA_PVRTC_2BPPV1_Format = 35843;\n\tconst RGB_ETC1_Format = 36196;\n\tconst RGB_ETC2_Format = 37492;\n\tconst RGBA_ETC2_EAC_Format = 37496;\n\tconst RGBA_ASTC_4x4_Format = 37808;\n\tconst RGBA_ASTC_5x4_Format = 37809;\n\tconst RGBA_ASTC_5x5_Format = 37810;\n\tconst RGBA_ASTC_6x5_Format = 37811;\n\tconst RGBA_ASTC_6x6_Format = 37812;\n\tconst RGBA_ASTC_8x5_Format = 37813;\n\tconst RGBA_ASTC_8x6_Format = 37814;\n\tconst RGBA_ASTC_8x8_Format = 37815;\n\tconst RGBA_ASTC_10x5_Format = 37816;\n\tconst RGBA_ASTC_10x6_Format = 37817;\n\tconst RGBA_ASTC_10x8_Format = 37818;\n\tconst RGBA_ASTC_10x10_Format = 37819;\n\tconst RGBA_ASTC_12x10_Format = 37820;\n\tconst RGBA_ASTC_12x12_Format = 37821;\n\tconst RGBA_BPTC_Format = 36492;\n\tconst SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\n\tconst SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\n\tconst SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\n\tconst SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\n\tconst SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\n\tconst SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\n\tconst SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\n\tconst SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\n\tconst SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\n\tconst SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\n\tconst SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\n\tconst SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\n\tconst SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\n\tconst SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\n\tconst LoopOnce = 2200;\n\tconst LoopRepeat = 2201;\n\tconst LoopPingPong = 2202;\n\tconst InterpolateDiscrete = 2300;\n\tconst InterpolateLinear = 2301;\n\tconst InterpolateSmooth = 2302;\n\tconst ZeroCurvatureEnding = 2400;\n\tconst ZeroSlopeEnding = 2401;\n\tconst WrapAroundEnding = 2402;\n\tconst NormalAnimationBlendMode = 2500;\n\tconst AdditiveAnimationBlendMode = 2501;\n\tconst TrianglesDrawMode = 0;\n\tconst TriangleStripDrawMode = 1;\n\tconst TriangleFanDrawMode = 2;\n\tconst LinearEncoding = 3000;\n\tconst sRGBEncoding = 3001;\n\tconst GammaEncoding = 3007;\n\tconst RGBEEncoding = 3002;\n\tconst LogLuvEncoding = 3003;\n\tconst RGBM7Encoding = 3004;\n\tconst RGBM16Encoding = 3005;\n\tconst RGBDEncoding = 3006;\n\tconst BasicDepthPacking = 3200;\n\tconst RGBADepthPacking = 3201;\n\tconst TangentSpaceNormalMap = 0;\n\tconst ObjectSpaceNormalMap = 1;\n\tconst ZeroStencilOp = 0;\n\tconst KeepStencilOp = 7680;\n\tconst ReplaceStencilOp = 7681;\n\tconst IncrementStencilOp = 7682;\n\tconst DecrementStencilOp = 7683;\n\tconst IncrementWrapStencilOp = 34055;\n\tconst DecrementWrapStencilOp = 34056;\n\tconst InvertStencilOp = 5386;\n\tconst NeverStencilFunc = 512;\n\tconst LessStencilFunc = 513;\n\tconst EqualStencilFunc = 514;\n\tconst LessEqualStencilFunc = 515;\n\tconst GreaterStencilFunc = 516;\n\tconst NotEqualStencilFunc = 517;\n\tconst GreaterEqualStencilFunc = 518;\n\tconst AlwaysStencilFunc = 519;\n\tconst StaticDrawUsage = 35044;\n\tconst DynamicDrawUsage = 35048;\n\tconst StreamDrawUsage = 35040;\n\tconst StaticReadUsage = 35045;\n\tconst DynamicReadUsage = 35049;\n\tconst StreamReadUsage = 35041;\n\tconst StaticCopyUsage = 35046;\n\tconst DynamicCopyUsage = 35050;\n\tconst StreamCopyUsage = 35042;\n\tconst GLSL1 = '100';\n\tconst GLSL3 = '300 es';\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\tclass EventDispatcher {\n\t\taddEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) this._listeners = {};\n\t\t\tconst listeners = this._listeners;\n\n\t\t\tif (listeners[type] === undefined) {\n\t\t\t\tlisteners[type] = [];\n\t\t\t}\n\n\t\t\tif (listeners[type].indexOf(listener) === -1) {\n\t\t\t\tlisteners[type].push(listener);\n\t\t\t}\n\t\t}\n\n\t\thasEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return false;\n\t\t\tconst listeners = this._listeners;\n\t\t\treturn listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n\t\t}\n\n\t\tremoveEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tconst index = listenerArray.indexOf(listener);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tlistenerArray.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdispatchEvent(event) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[event.type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tevent.target = this; // Make a copy, in case listeners are removed while iterating.\n\n\t\t\t\tconst array = listenerArray.slice(0);\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tarray[i].call(this, event);\n\t\t\t\t}\n\n\t\t\t\tevent.target = null;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst _lut = [];\n\n\tfor (let i = 0; i < 256; i++) {\n\t\t_lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n\t}\n\n\tlet _seed = 1234567;\n\tconst DEG2RAD = Math.PI / 180;\n\tconst RAD2DEG = 180 / Math.PI; // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\tfunction generateUUID() {\n\t\tconst d0 = Math.random() * 0xffffffff | 0;\n\t\tconst d1 = Math.random() * 0xffffffff | 0;\n\t\tconst d2 = Math.random() * 0xffffffff | 0;\n\t\tconst d3 = Math.random() * 0xffffffff | 0;\n\t\tconst uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\n\t\treturn uuid.toUpperCase();\n\t}\n\n\tfunction clamp(value, min, max) {\n\t\treturn Math.max(min, Math.min(max, value));\n\t} // compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\n\tfunction euclideanModulo(n, m) {\n\t\treturn (n % m + m) % m;\n\t} // Linear mapping from range <a1, a2> to range <b1, b2>\n\n\n\tfunction mapLinear(x, a1, a2, b1, b2) {\n\t\treturn b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n\t} // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\n\n\n\tfunction inverseLerp(x, y, value) {\n\t\tif (x !== y) {\n\t\t\treturn (value - x) / (y - x);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} // https://en.wikipedia.org/wiki/Linear_interpolation\n\n\n\tfunction lerp(x, y, t) {\n\t\treturn (1 - t) * x + t * y;\n\t} // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n\n\n\tfunction damp(x, y, lambda, dt) {\n\t\treturn lerp(x, y, 1 - Math.exp(-lambda * dt));\n\t} // https://www.desmos.com/calculator/vcsjnyz7x4\n\n\n\tfunction pingpong(x, length = 1) {\n\t\treturn length - Math.abs(euclideanModulo(x, length * 2) - length);\n\t} // http://en.wikipedia.org/wiki/Smoothstep\n\n\n\tfunction smoothstep(x, min, max) {\n\t\tif (x <= min) return 0;\n\t\tif (x >= max) return 1;\n\t\tx = (x - min) / (max - min);\n\t\treturn x * x * (3 - 2 * x);\n\t}\n\n\tfunction smootherstep(x, min, max) {\n\t\tif (x <= min) return 0;\n\t\tif (x >= max) return 1;\n\t\tx = (x - min) / (max - min);\n\t\treturn x * x * x * (x * (x * 6 - 15) + 10);\n\t} // Random integer from <low, high> interval\n\n\n\tfunction randInt(low, high) {\n\t\treturn low + Math.floor(Math.random() * (high - low + 1));\n\t} // Random float from <low, high> interval\n\n\n\tfunction randFloat(low, high) {\n\t\treturn low + Math.random() * (high - low);\n\t} // Random float from <-range/2, range/2> interval\n\n\n\tfunction randFloatSpread(range) {\n\t\treturn range * (0.5 - Math.random());\n\t} // Deterministic pseudo-random float in the interval [ 0, 1 ]\n\n\n\tfunction seededRandom(s) {\n\t\tif (s !== undefined) _seed = s % 2147483647; // Park-Miller algorithm\n\n\t\t_seed = _seed * 16807 % 2147483647;\n\t\treturn (_seed - 1) / 2147483646;\n\t}\n\n\tfunction degToRad(degrees) {\n\t\treturn degrees * DEG2RAD;\n\t}\n\n\tfunction radToDeg(radians) {\n\t\treturn radians * RAD2DEG;\n\t}\n\n\tfunction isPowerOfTwo(value) {\n\t\treturn (value & value - 1) === 0 && value !== 0;\n\t}\n\n\tfunction ceilPowerOfTwo(value) {\n\t\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n\t}\n\n\tfunction floorPowerOfTwo(value) {\n\t\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n\t}\n\n\tfunction setQuaternionFromProperEuler(q, a, b, c, order) {\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t// angles are in radians\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\t\tconst c2 = cos(b / 2);\n\t\tconst s2 = sin(b / 2);\n\t\tconst c13 = cos((a + c) / 2);\n\t\tconst s13 = sin((a + c) / 2);\n\t\tconst c1_3 = cos((a - c) / 2);\n\t\tconst s1_3 = sin((a - c) / 2);\n\t\tconst c3_1 = cos((c - a) / 2);\n\t\tconst s3_1 = sin((c - a) / 2);\n\n\t\tswitch (order) {\n\t\t\tcase 'XYX':\n\t\t\t\tq.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZY':\n\t\t\t\tq.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXZ':\n\t\t\t\tq.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZX':\n\t\t\t\tq.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXY':\n\t\t\t\tq.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYZ':\n\t\t\t\tq.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\n\t\t}\n\t}\n\n\tvar MathUtils = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tDEG2RAD: DEG2RAD,\n\t\tRAD2DEG: RAD2DEG,\n\t\tgenerateUUID: generateUUID,\n\t\tclamp: clamp,\n\t\teuclideanModulo: euclideanModulo,\n\t\tmapLinear: mapLinear,\n\t\tinverseLerp: inverseLerp,\n\t\tlerp: lerp,\n\t\tdamp: damp,\n\t\tpingpong: pingpong,\n\t\tsmoothstep: smoothstep,\n\t\tsmootherstep: smootherstep,\n\t\trandInt: randInt,\n\t\trandFloat: randFloat,\n\t\trandFloatSpread: randFloatSpread,\n\t\tseededRandom: seededRandom,\n\t\tdegToRad: degToRad,\n\t\tradToDeg: radToDeg,\n\t\tisPowerOfTwo: isPowerOfTwo,\n\t\tceilPowerOfTwo: ceilPowerOfTwo,\n\t\tfloorPowerOfTwo: floorPowerOfTwo,\n\t\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler\n\t});\n\n\tclass Vector2 {\n\t\tconstructor(x = 0, y = 0) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tset width(value) {\n\t\t\tthis.x = value;\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tset height(value) {\n\t\t\tthis.y = value;\n\t\t}\n\n\t\tset(x, y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6];\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7];\n\t\t\treturn this;\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y;\n\t\t}\n\n\t\tcross(v) {\n\t\t\treturn this.x * v.y - this.y * v.x;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tangle() {\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\t\t\tconst angle = Math.atan2(-this.y, -this.x) + Math.PI;\n\t\t\treturn angle;\n\t\t}\n\n\t\tdistanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t}\n\n\t\tdistanceToSquared(v) {\n\t\t\tconst dx = this.x - v.x,\n\t\t\t\t\t\tdy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tmanhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateAround(center, angle) {\n\t\t\tconst c = Math.cos(angle),\n\t\t\t\t\t\ts = Math.sin(angle);\n\t\t\tconst x = this.x - center.x;\n\t\t\tconst y = this.y - center.y;\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tVector2.prototype.isVector2 = true;\n\n\tclass Matrix3 {\n\t\tconstructor() {\n\t\t\tthis.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tset(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[1] = n21;\n\t\t\tte[2] = n31;\n\t\t\tte[3] = n12;\n\t\t\tte[4] = n22;\n\t\t\tte[5] = n32;\n\t\t\tte[6] = n13;\n\t\t\tte[7] = n23;\n\t\t\tte[8] = n33;\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\tthis.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(m) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\treturn this;\n\t\t}\n\n\t\textractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrix3Column(this, 0);\n\t\t\tyAxis.setFromMatrix3Column(this, 1);\n\t\t\tzAxis.setFromMatrix3Column(this, 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrix4(m) {\n\t\t\tconst me = m.elements;\n\t\t\tthis.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(m) {\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t}\n\n\t\tpremultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t}\n\n\t\tmultiplyMatrices(a, b) {\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = ae[0],\n\t\t\t\t\t\ta12 = ae[3],\n\t\t\t\t\t\ta13 = ae[6];\n\t\t\tconst a21 = ae[1],\n\t\t\t\t\t\ta22 = ae[4],\n\t\t\t\t\t\ta23 = ae[7];\n\t\t\tconst a31 = ae[2],\n\t\t\t\t\t\ta32 = ae[5],\n\t\t\t\t\t\ta33 = ae[8];\n\t\t\tconst b11 = be[0],\n\t\t\t\t\t\tb12 = be[3],\n\t\t\t\t\t\tb13 = be[6];\n\t\t\tconst b21 = be[1],\n\t\t\t\t\t\tb22 = be[4],\n\t\t\t\t\t\tb23 = be[7];\n\t\t\tconst b31 = be[2],\n\t\t\t\t\t\tb32 = be[5],\n\t\t\t\t\t\tb33 = be[8];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[3] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[6] = a11 * b13 + a12 * b23 + a13 * b33;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[4] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[7] = a21 * b13 + a22 * b23 + a23 * b33;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[5] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[8] = a31 * b13 + a32 * b23 + a33 * b33;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[8] *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeterminant() {\n\t\t\tconst te = this.elements;\n\t\t\tconst a = te[0],\n\t\t\t\t\t\tb = te[1],\n\t\t\t\t\t\tc = te[2],\n\t\t\t\t\t\td = te[3],\n\t\t\t\t\t\te = te[4],\n\t\t\t\t\t\tf = te[5],\n\t\t\t\t\t\tg = te[6],\n\t\t\t\t\t\th = te[7],\n\t\t\t\t\t\ti = te[8];\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\t\t}\n\n\t\tinvert() {\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tn11 = te[0],\n\t\t\t\t\t\tn21 = te[1],\n\t\t\t\t\t\tn31 = te[2],\n\t\t\t\t\t\tn12 = te[3],\n\t\t\t\t\t\tn22 = te[4],\n\t\t\t\t\t\tn32 = te[5],\n\t\t\t\t\t\tn13 = te[6],\n\t\t\t\t\t\tn23 = te[7],\n\t\t\t\t\t\tn33 = te[8],\n\t\t\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\t\t\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tconst detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n31 * n23 - n33 * n21) * detInv;\n\t\t\tte[2] = (n32 * n21 - n31 * n22) * detInv;\n\t\t\tte[3] = t12 * detInv;\n\t\t\tte[4] = (n33 * n11 - n31 * n13) * detInv;\n\t\t\tte[5] = (n31 * n12 - n32 * n11) * detInv;\n\t\t\tte[6] = t13 * detInv;\n\t\t\tte[7] = (n21 * n13 - n23 * n11) * detInv;\n\t\t\tte[8] = (n22 * n11 - n21 * n12) * detInv;\n\t\t\treturn this;\n\t\t}\n\n\t\ttranspose() {\n\t\t\tlet tmp;\n\t\t\tconst m = this.elements;\n\t\t\ttmp = m[1];\n\t\t\tm[1] = m[3];\n\t\t\tm[3] = tmp;\n\t\t\ttmp = m[2];\n\t\t\tm[2] = m[6];\n\t\t\tm[6] = tmp;\n\t\t\ttmp = m[5];\n\t\t\tm[5] = m[7];\n\t\t\tm[7] = tmp;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetNormalMatrix(matrix4) {\n\t\t\treturn this.setFromMatrix4(matrix4).invert().transpose();\n\t\t}\n\n\t\ttransposeIntoArray(r) {\n\t\t\tconst m = this.elements;\n\t\t\tr[0] = m[0];\n\t\t\tr[1] = m[3];\n\t\t\tr[2] = m[6];\n\t\t\tr[3] = m[1];\n\t\t\tr[4] = m[4];\n\t\t\tr[5] = m[7];\n\t\t\tr[6] = m[2];\n\t\t\tr[7] = m[5];\n\t\t\tr[8] = m[8];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n\t\t\tconst c = Math.cos(rotation);\n\t\t\tconst s = Math.sin(rotation);\n\t\t\tthis.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(sx, sy) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= sx;\n\t\t\tte[3] *= sx;\n\t\t\tte[6] *= sx;\n\t\t\tte[1] *= sy;\n\t\t\tte[4] *= sy;\n\t\t\tte[7] *= sy;\n\t\t\treturn this;\n\t\t}\n\n\t\trotate(theta) {\n\t\t\tconst c = Math.cos(theta);\n\t\t\tconst s = Math.sin(theta);\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = te[0],\n\t\t\t\t\t\ta12 = te[3],\n\t\t\t\t\t\ta13 = te[6];\n\t\t\tconst a21 = te[1],\n\t\t\t\t\t\ta22 = te[4],\n\t\t\t\t\t\ta23 = te[7];\n\t\t\tte[0] = c * a11 + s * a21;\n\t\t\tte[3] = c * a12 + s * a22;\n\t\t\tte[6] = c * a13 + s * a23;\n\t\t\tte[1] = -s * a11 + c * a21;\n\t\t\tte[4] = -s * a12 + c * a22;\n\t\t\tte[7] = -s * a13 + c * a23;\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(tx, ty) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] += tx * te[2];\n\t\t\tte[3] += tx * te[5];\n\t\t\tte[6] += tx * te[8];\n\t\t\tte[1] += ty * te[2];\n\t\t\tte[4] += ty * te[5];\n\t\t\tte[7] += ty * te[8];\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(matrix) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\treturn array;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().fromArray(this.elements);\n\t\t}\n\n\t}\n\n\tMatrix3.prototype.isMatrix3 = true;\n\n\tlet _canvas;\n\n\tclass ImageUtils {\n\t\tstatic getDataURL(image) {\n\t\t\tif (/^data:/i.test(image.src)) {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tif (typeof HTMLCanvasElement == 'undefined') {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tlet canvas;\n\n\t\t\tif (image instanceof HTMLCanvasElement) {\n\t\t\t\tcanvas = image;\n\t\t\t} else {\n\t\t\t\tif (_canvas === undefined) _canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\t\t\t\t_canvas.width = image.width;\n\t\t\t\t_canvas.height = image.height;\n\n\t\t\t\tconst context = _canvas.getContext('2d');\n\n\t\t\t\tif (image instanceof ImageData) {\n\t\t\t\t\tcontext.putImageData(image, 0, 0);\n\t\t\t\t} else {\n\t\t\t\t\tcontext.drawImage(image, 0, 0, image.width, image.height);\n\t\t\t\t}\n\n\t\t\t\tcanvas = _canvas;\n\t\t\t}\n\n\t\t\tif (canvas.width > 2048 || canvas.height > 2048) {\n\t\t\t\tconsole.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image);\n\t\t\t\treturn canvas.toDataURL('image/jpeg', 0.6);\n\t\t\t} else {\n\t\t\t\treturn canvas.toDataURL('image/png');\n\t\t\t}\n\t\t}\n\n\t}\n\n\tlet textureId = 0;\n\n\tclass Texture extends EventDispatcher {\n\t\tconstructor(image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding) {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: textureId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.image = image;\n\t\t\tthis.mipmaps = [];\n\t\t\tthis.mapping = mapping;\n\t\t\tthis.wrapS = wrapS;\n\t\t\tthis.wrapT = wrapT;\n\t\t\tthis.magFilter = magFilter;\n\t\t\tthis.minFilter = minFilter;\n\t\t\tthis.anisotropy = anisotropy;\n\t\t\tthis.format = format;\n\t\t\tthis.internalFormat = null;\n\t\t\tthis.type = type;\n\t\t\tthis.offset = new Vector2(0, 0);\n\t\t\tthis.repeat = new Vector2(1, 1);\n\t\t\tthis.center = new Vector2(0, 0);\n\t\t\tthis.rotation = 0;\n\t\t\tthis.matrixAutoUpdate = true;\n\t\t\tthis.matrix = new Matrix3();\n\t\t\tthis.generateMipmaps = true;\n\t\t\tthis.premultiplyAlpha = false;\n\t\t\tthis.flipY = true;\n\t\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\t\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t\t//\n\t\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n\t\t\tthis.encoding = encoding;\n\t\t\tthis.version = 0;\n\t\t\tthis.onUpdate = null;\n\t\t}\n\n\t\tupdateMatrix() {\n\t\t\tthis.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice(0);\n\t\t\tthis.mapping = source.mapping;\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\t\t\tthis.anisotropy = source.anisotropy;\n\t\t\tthis.format = source.format;\n\t\t\tthis.internalFormat = source.internalFormat;\n\t\t\tthis.type = source.type;\n\t\t\tthis.offset.copy(source.offset);\n\t\t\tthis.repeat.copy(source.repeat);\n\t\t\tthis.center.copy(source.center);\n\t\t\tthis.rotation = source.rotation;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (!isRootObject && meta.textures[this.uuid] !== undefined) {\n\t\t\t\treturn meta.textures[this.uuid];\n\t\t\t}\n\n\t\t\tconst output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\t\t\t\tmapping: this.mapping,\n\t\t\t\trepeat: [this.repeat.x, this.repeat.y],\n\t\t\t\toffset: [this.offset.x, this.offset.y],\n\t\t\t\tcenter: [this.center.x, this.center.y],\n\t\t\t\trotation: this.rotation,\n\t\t\t\twrap: [this.wrapS, this.wrapT],\n\t\t\t\tformat: this.format,\n\t\t\t\ttype: this.type,\n\t\t\t\tencoding: this.encoding,\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\t\t\t\tflipY: this.flipY,\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\t\tunpackAlignment: this.unpackAlignment\n\t\t\t};\n\n\t\t\tif (this.image !== undefined) {\n\t\t\t\t// TODO: Move to THREE.Image\n\t\t\t\tconst image = this.image;\n\n\t\t\t\tif (image.uuid === undefined) {\n\t\t\t\t\timage.uuid = generateUUID(); // UGH\n\t\t\t\t}\n\n\t\t\t\tif (!isRootObject && meta.images[image.uuid] === undefined) {\n\t\t\t\t\tlet url;\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\n\t\t\t\t\t\turl = [];\n\n\t\t\t\t\t\tfor (let i = 0, l = image.length; i < l; i++) {\n\t\t\t\t\t\t\t// check cube texture with data textures\n\t\t\t\t\t\t\tif (image[i].isDataTexture) {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i].image));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// process single image\n\t\t\t\t\t\turl = serializeImage(image);\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.images[image.uuid] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: url\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\t\t\t}\n\n\t\t\tif (!isRootObject) {\n\t\t\t\tmeta.textures[this.uuid] = output;\n\t\t\t}\n\n\t\t\treturn output;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t\ttransformUv(uv) {\n\t\t\tif (this.mapping !== UVMapping) return uv;\n\t\t\tuv.applyMatrix3(this.matrix);\n\n\t\t\tif (uv.x < 0 || uv.x > 1) {\n\t\t\t\tswitch (this.wrapS) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.x) % 2) === 1) {\n\t\t\t\t\t\t\tuv.x = Math.ceil(uv.x) - uv.x;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (uv.y < 0 || uv.y > 1) {\n\t\t\t\tswitch (this.wrapT) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.y) % 2) === 1) {\n\t\t\t\t\t\t\tuv.y = Math.ceil(uv.y) - uv.y;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.flipY) {\n\t\t\t\tuv.y = 1 - uv.y;\n\t\t\t}\n\n\t\t\treturn uv;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\tTexture.prototype.isTexture = true;\n\n\tfunction serializeImage(image) {\n\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t// default images\n\t\t\treturn ImageUtils.getDataURL(image);\n\t\t} else {\n\t\t\tif (image.data) {\n\t\t\t\t// images of DataTexture\n\t\t\t\treturn {\n\t\t\t\t\tdata: Array.prototype.slice.call(image.data),\n\t\t\t\t\twidth: image.width,\n\t\t\t\t\theight: image.height,\n\t\t\t\t\ttype: image.data.constructor.name\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.Texture: Unable to serialize Texture.');\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\t}\n\n\tclass Vector4 {\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.z;\n\t\t}\n\n\t\tset width(value) {\n\t\t\tthis.z = value;\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.w;\n\t\t}\n\n\t\tset height(value) {\n\t\t\tthis.w = value;\n\t\t}\n\n\t\tset(x, y, z, w) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetW(w) {\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.w = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tcase 3:\n\t\t\t\t\treturn this.w;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z, this.w);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = v.w !== undefined ? v.w : 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\tthis.w *= v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z,\n\t\t\t\t\t\tw = this.w;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n\t\t\tthis.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tsetAxisAngleFromQuaternion(q) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\t\t\t// q is assumed to be normalized\n\t\t\tthis.w = 2 * Math.acos(q.w);\n\t\t\tconst s = Math.sqrt(1 - q.w * q.w);\n\n\t\t\tif (s < 0.0001) {\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t} else {\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetAxisAngleFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tlet angle, x, y, z; // variables for result\n\n\t\t\tconst epsilon = 0.01,\n\t\t\t\t\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\n\t\t\t\t\t\t// margin to distinguish between 0 and 180 degrees\n\t\t\tte = m.elements,\n\t\t\t\t\t\tm11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8],\n\t\t\t\t\t\tm21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9],\n\t\t\t\t\t\tm31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10];\n\n\t\t\tif (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\t\t\t\tif (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\t\t\t\t\tthis.set(1, 0, 0, 0);\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\t\t\t\t} // otherwise this singularity is angle = 180\n\n\n\t\t\t\tangle = Math.PI;\n\t\t\t\tconst xx = (m11 + 1) / 2;\n\t\t\t\tconst yy = (m22 + 1) / 2;\n\t\t\t\tconst zz = (m33 + 1) / 2;\n\t\t\t\tconst xy = (m12 + m21) / 4;\n\t\t\t\tconst xz = (m13 + m31) / 4;\n\t\t\t\tconst yz = (m23 + m32) / 4;\n\n\t\t\t\tif (xx > yy && xx > zz) {\n\t\t\t\t\t// m11 is the largest diagonal term\n\t\t\t\t\tif (xx < epsilon) {\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = Math.sqrt(xx);\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\t\t\t\t\t}\n\t\t\t\t} else if (yy > zz) {\n\t\t\t\t\t// m22 is the largest diagonal term\n\t\t\t\t\tif (yy < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty = Math.sqrt(yy);\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\t\t\t\t\tif (zz < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tz = Math.sqrt(zz);\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.set(x, y, z, angle);\n\t\t\t\treturn this; // return 180 deg rotation\n\t\t\t} // as we have reached here there are no singularities so we can handle normally\n\n\n\t\t\tlet s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n\t\t\tif (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = (m32 - m23) / s;\n\t\t\tthis.y = (m13 - m31) / s;\n\t\t\tthis.z = (m21 - m12) / s;\n\t\t\tthis.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\tthis.w = Math.min(this.w, v.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\tthis.w = Math.max(this.w, v.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\tthis.w = Math.max(min.w, Math.min(max.w, this.w));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\tthis.w = Math.max(minVal, Math.min(maxVal, this.w));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\tthis.w = Math.floor(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\tthis.w = Math.ceil(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\tthis.w = Math.round(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\tthis.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\tthis.w = -this.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\tthis.w += (v.w - this.w) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\tthis.w = v1.w + (v2.w - v1.w) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\tthis.w = array[offset + 3];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\tarray[offset + 3] = this.w;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\tthis.w = attribute.getW(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\tthis.w = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tVector4.prototype.isVector4 = true;\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\n\tclass WebGLRenderTarget extends EventDispatcher {\n\t\tconstructor(width, height, options = {}) {\n\t\t\tsuper();\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = 1;\n\t\t\tthis.scissor = new Vector4(0, 0, width, height);\n\t\t\tthis.scissorTest = false;\n\t\t\tthis.viewport = new Vector4(0, 0, width, height);\n\t\t\tthis.texture = new Texture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\tthis.texture.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: 1\n\t\t\t};\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\t\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\t\t}\n\n\t\tsetTexture(texture) {\n\t\t\ttexture.image = {\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tdepth: this.depth\n\t\t\t};\n\t\t\tthis.texture = texture;\n\t\t}\n\n\t\tsetSize(width, height, depth = 1) {\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\t\t\t\tthis.texture.image.width = width;\n\t\t\t\tthis.texture.image.height = height;\n\t\t\t\tthis.texture.image.depth = depth;\n\t\t\t\tthis.dispose();\n\t\t\t}\n\n\t\t\tthis.viewport.set(0, 0, width, height);\n\t\t\tthis.scissor.set(0, 0, width, height);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\t\t\tthis.viewport.copy(source.viewport);\n\t\t\tthis.texture = source.texture.clone();\n\t\t\tthis.texture.image = { ...this.texture.image\n\t\t\t}; // See #20328.\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\n\tclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\t\tconstructor(width, height, count) {\n\t\t\tsuper(width, height);\n\t\t\tconst texture = this.texture;\n\t\t\tthis.texture = [];\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tthis.texture[i] = texture.clone();\n\t\t\t}\n\t\t}\n\n\t\tsetSize(width, height, depth = 1) {\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\n\t\t\t\tfor (let i = 0, il = this.texture.length; i < il; i++) {\n\t\t\t\t\tthis.texture[i].image.width = width;\n\t\t\t\t\tthis.texture[i].image.height = height;\n\t\t\t\t\tthis.texture[i].image.depth = depth;\n\t\t\t\t}\n\n\t\t\t\tthis.dispose();\n\t\t\t}\n\n\t\t\tthis.viewport.set(0, 0, width, height);\n\t\t\tthis.scissor.set(0, 0, width, height);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.dispose();\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\t\t\tthis.viewport.set(0, 0, this.width, this.height);\n\t\t\tthis.scissor.set(0, 0, this.width, this.height);\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\t\t\tthis.texture.length = 0;\n\n\t\t\tfor (let i = 0, il = source.texture.length; i < il; i++) {\n\t\t\t\tthis.texture[i] = source.texture[i].clone();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n\n\tclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\t\tconstructor(width, height, options) {\n\t\t\tsuper(width, height, options);\n\t\t\tthis.samples = 4;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy.call(this, source);\n\t\t\tthis.samples = source.samples;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n\n\tclass Quaternion {\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\t\t}\n\n\t\tstatic slerp(qa, qb, qm, t) {\n\t\t\tconsole.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');\n\t\t\treturn qm.slerpQuaternions(qa, qb, t);\n\t\t}\n\n\t\tstatic slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\t\t\tlet x0 = src0[srcOffset0 + 0],\n\t\t\t\t\ty0 = src0[srcOffset0 + 1],\n\t\t\t\t\tz0 = src0[srcOffset0 + 2],\n\t\t\t\t\tw0 = src0[srcOffset0 + 3];\n\t\t\tconst x1 = src1[srcOffset1 + 0],\n\t\t\t\t\t\ty1 = src1[srcOffset1 + 1],\n\t\t\t\t\t\tz1 = src1[srcOffset1 + 2],\n\t\t\t\t\t\tw1 = src1[srcOffset1 + 3];\n\n\t\t\tif (t === 0) {\n\t\t\t\tdst[dstOffset + 0] = x0;\n\t\t\t\tdst[dstOffset + 1] = y0;\n\t\t\t\tdst[dstOffset + 2] = z0;\n\t\t\t\tdst[dstOffset + 3] = w0;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (t === 1) {\n\t\t\t\tdst[dstOffset + 0] = x1;\n\t\t\t\tdst[dstOffset + 1] = y1;\n\t\t\t\tdst[dstOffset + 2] = z1;\n\t\t\t\tdst[dstOffset + 3] = w1;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n\t\t\t\tlet s = 1 - t;\n\t\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\t\t\t\tdir = cos >= 0 ? 1 : -1,\n\t\t\t\t\t\t\tsqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n\t\t\t\tif (sqrSin > Number.EPSILON) {\n\t\t\t\t\tconst sin = Math.sqrt(sqrSin),\n\t\t\t\t\t\t\t\tlen = Math.atan2(sin, cos * dir);\n\t\t\t\t\ts = Math.sin(s * len) / sin;\n\t\t\t\t\tt = Math.sin(t * len) / sin;\n\t\t\t\t}\n\n\t\t\t\tconst tDir = t * dir;\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n\t\t\t\tif (s === 1 - t) {\n\t\t\t\t\tconst f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdst[dstOffset] = x0;\n\t\t\tdst[dstOffset + 1] = y0;\n\t\t\tdst[dstOffset + 2] = z0;\n\t\t\tdst[dstOffset + 3] = w0;\n\t\t}\n\n\t\tstatic multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n\t\t\tconst x0 = src0[srcOffset0];\n\t\t\tconst y0 = src0[srcOffset0 + 1];\n\t\t\tconst z0 = src0[srcOffset0 + 2];\n\t\t\tconst w0 = src0[srcOffset0 + 3];\n\t\t\tconst x1 = src1[srcOffset1];\n\t\t\tconst y1 = src1[srcOffset1 + 1];\n\t\t\tconst z1 = src1[srcOffset1 + 2];\n\t\t\tconst w1 = src1[srcOffset1 + 3];\n\t\t\tdst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\t\tdst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\t\tdst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\t\tdst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\t\t\treturn dst;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._x;\n\t\t}\n\n\t\tset x(value) {\n\t\t\tthis._x = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._y;\n\t\t}\n\n\t\tset y(value) {\n\t\t\tthis._y = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget z() {\n\t\t\treturn this._z;\n\t\t}\n\n\t\tset z(value) {\n\t\t\tthis._z = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget w() {\n\t\t\treturn this._w;\n\t\t}\n\n\t\tset w(value) {\n\t\t\tthis._w = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tset(x, y, z, w) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._w);\n\t\t}\n\n\t\tcopy(quaternion) {\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromEuler(euler, update) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tthrow new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tconst x = euler._x,\n\t\t\t\t\t\ty = euler._y,\n\t\t\t\t\t\tz = euler._z,\n\t\t\t\t\t\torder = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tconst cos = Math.cos;\n\t\t\tconst sin = Math.sin;\n\t\t\tconst c1 = cos(x / 2);\n\t\t\tconst c2 = cos(y / 2);\n\t\t\tconst c3 = cos(z / 2);\n\t\t\tconst s1 = sin(x / 2);\n\t\t\tconst s2 = sin(y / 2);\n\t\t\tconst s3 = sin(z / 2);\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tif (update !== false) this._onChangeCallback();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromAxisAngle(axis, angle) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\t\t\t// assumes axis is normalized\n\t\t\tconst halfAngle = angle / 2,\n\t\t\t\t\t\ts = Math.sin(halfAngle);\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos(halfAngle);\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tconst te = m.elements,\n\t\t\t\t\t\tm11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8],\n\t\t\t\t\t\tm21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9],\n\t\t\t\t\t\tm31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10],\n\t\t\t\t\t\ttrace = m11 + m22 + m33;\n\n\t\t\tif (trace > 0) {\n\t\t\t\tconst s = 0.5 / Math.sqrt(trace + 1.0);\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = (m32 - m23) * s;\n\t\t\t\tthis._y = (m13 - m31) * s;\n\t\t\t\tthis._z = (m21 - m12) * s;\n\t\t\t} else if (m11 > m22 && m11 > m33) {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\t\t\t\tthis._w = (m32 - m23) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = (m12 + m21) / s;\n\t\t\t\tthis._z = (m13 + m31) / s;\n\t\t\t} else if (m22 > m33) {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\t\t\t\tthis._w = (m13 - m31) / s;\n\t\t\t\tthis._x = (m12 + m21) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = (m23 + m32) / s;\n\t\t\t} else {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\t\t\t\tthis._w = (m21 - m12) / s;\n\t\t\t\tthis._x = (m13 + m31) / s;\n\t\t\t\tthis._y = (m23 + m32) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromUnitVectors(vFrom, vTo) {\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\t\t\tlet r = vFrom.dot(vTo) + 1;\n\n\t\t\tif (r < Number.EPSILON) {\n\t\t\t\t// vFrom and vTo point in opposite directions\n\t\t\t\tr = 0;\n\n\t\t\t\tif (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n\t\t\t\t\tthis._x = -vFrom.y;\n\t\t\t\t\tthis._y = vFrom.x;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t} else {\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = -vFrom.z;\n\t\t\t\t\tthis._z = vFrom.y;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t\tthis._w = r;\n\t\t\t}\n\n\t\t\treturn this.normalize();\n\t\t}\n\n\t\tangleTo(q) {\n\t\t\treturn 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\n\t\t}\n\n\t\trotateTowards(q, step) {\n\t\t\tconst angle = this.angleTo(q);\n\t\t\tif (angle === 0) return this;\n\t\t\tconst t = Math.min(1, step / angle);\n\t\t\tthis.slerp(q, t);\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\treturn this.set(0, 0, 0, 1);\n\t\t}\n\n\t\tinvert() {\n\t\t\t// quaternion is assumed to have unit length\n\t\t\treturn this.conjugate();\n\t\t}\n\n\t\tconjugate() {\n\t\t\tthis._x *= -1;\n\t\t\tthis._y *= -1;\n\t\t\tthis._z *= -1;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n\t\t}\n\n\t\tnormalize() {\n\t\t\tlet l = this.length();\n\n\t\t\tif (l === 0) {\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\t\t\t} else {\n\t\t\t\tl = 1 / l;\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(q, p) {\n\t\t\tif (p !== undefined) {\n\t\t\t\tconsole.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n\t\t\t\treturn this.multiplyQuaternions(q, p);\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions(this, q);\n\t\t}\n\n\t\tpremultiply(q) {\n\t\t\treturn this.multiplyQuaternions(q, this);\n\t\t}\n\n\t\tmultiplyQuaternions(a, b) {\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\t\t\tconst qax = a._x,\n\t\t\t\t\t\tqay = a._y,\n\t\t\t\t\t\tqaz = a._z,\n\t\t\t\t\t\tqaw = a._w;\n\t\t\tconst qbx = b._x,\n\t\t\t\t\t\tqby = b._y,\n\t\t\t\t\t\tqbz = b._z,\n\t\t\t\t\t\tqbw = b._w;\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tslerp(qb, t) {\n\t\t\tif (t === 0) return this;\n\t\t\tif (t === 1) return this.copy(qb);\n\t\t\tconst x = this._x,\n\t\t\t\t\t\ty = this._y,\n\t\t\t\t\t\tz = this._z,\n\t\t\t\t\t\tw = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif (cosHalfTheta < 0) {\n\t\t\t\tthis._w = -qb._w;\n\t\t\t\tthis._x = -qb._x;\n\t\t\t\tthis._y = -qb._y;\n\t\t\t\tthis._z = -qb._z;\n\t\t\t\tcosHalfTheta = -cosHalfTheta;\n\t\t\t} else {\n\t\t\t\tthis.copy(qb);\n\t\t\t}\n\n\t\t\tif (cosHalfTheta >= 1.0) {\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif (sqrSinHalfTheta <= Number.EPSILON) {\n\t\t\t\tconst s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\t\t\t\tthis.normalize();\n\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n\t\t\tconst halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n\t\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n\t\t\t\t\t\tratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n\t\t\tthis._w = w * ratioA + this._w * ratioB;\n\t\t\tthis._x = x * ratioA + this._x * ratioB;\n\t\t\tthis._y = y * ratioA + this._y * ratioB;\n\t\t\tthis._z = z * ratioA + this._z * ratioB;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tslerpQuaternions(qa, qb, t) {\n\t\t\tthis.copy(qa).slerp(qb, t);\n\t\t}\n\n\t\tequals(quaternion) {\n\t\t\treturn quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis._x = array[offset];\n\t\t\tthis._y = array[offset + 1];\n\t\t\tthis._z = array[offset + 2];\n\t\t\tthis._w = array[offset + 3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._w;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index) {\n\t\t\tthis._x = attribute.getX(index);\n\t\t\tthis._y = attribute.getY(index);\n\t\t\tthis._z = attribute.getZ(index);\n\t\t\tthis._w = attribute.getW(index);\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t}\n\n\tQuaternion.prototype.isQuaternion = true;\n\n\tclass Vector3 {\n\t\tconstructor(x = 0, y = 0, z = 0) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tset(x, y, z) {\n\t\t\tif (z === undefined) z = this.z; // sprite.scale.set(x,y)\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n\t\t\t\treturn this.multiplyVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyVectors(a, b) {\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromEuler(euler));\n\t\t}\n\n\t\tapplyAxisAngle(axis, angle) {\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\n\t\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\treturn this.applyMatrix3(m).normalize();\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tconst w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n\t\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n\t\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n\t\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst qx = q.x,\n\t\t\t\t\t\tqy = q.y,\n\t\t\t\t\t\tqz = q.z,\n\t\t\t\t\t\tqw = q.w; // calculate quat * vector\n\n\t\t\tconst ix = qw * x + qy * z - qz * y;\n\t\t\tconst iy = qw * y + qz * x - qx * z;\n\t\t\tconst iz = qw * z + qx * y - qy * x;\n\t\t\tconst iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t\t\tthis.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t\t\tthis.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t\t\treturn this;\n\t\t}\n\n\t\tproject(camera) {\n\t\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n\t\t}\n\n\t\tunproject(camera) {\n\t\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\n\t\t\treturn this.normalize();\n\t\t}\n\n\t\tdivide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\t\t} // TODO lengthSquared?\n\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tcross(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n\t\t\t\treturn this.crossVectors(v, w);\n\t\t\t}\n\n\t\t\treturn this.crossVectors(this, v);\n\t\t}\n\n\t\tcrossVectors(a, b) {\n\t\t\tconst ax = a.x,\n\t\t\t\t\t\tay = a.y,\n\t\t\t\t\t\taz = a.z;\n\t\t\tconst bx = b.x,\n\t\t\t\t\t\tby = b.y,\n\t\t\t\t\t\tbz = b.z;\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\t\t\treturn this;\n\t\t}\n\n\t\tprojectOnVector(v) {\n\t\t\tconst denominator = v.lengthSq();\n\t\t\tif (denominator === 0) return this.set(0, 0, 0);\n\t\t\tconst scalar = v.dot(this) / denominator;\n\t\t\treturn this.copy(v).multiplyScalar(scalar);\n\t\t}\n\n\t\tprojectOnPlane(planeNormal) {\n\t\t\t_vector$c.copy(this).projectOnVector(planeNormal);\n\n\t\t\treturn this.sub(_vector$c);\n\t\t}\n\n\t\treflect(normal) {\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\t\t\treturn this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\t\t}\n\n\t\tangleTo(v) {\n\t\t\tconst denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n\t\t\tif (denominator === 0) return Math.PI / 2;\n\t\t\tconst theta = this.dot(v) / denominator; // clamp, to handle numerical problems\n\n\t\t\treturn Math.acos(clamp(theta, -1, 1));\n\t\t}\n\n\t\tdistanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t}\n\n\t\tdistanceToSquared(v) {\n\t\t\tconst dx = this.x - v.x,\n\t\t\t\t\t\tdy = this.y - v.y,\n\t\t\t\t\t\tdz = this.z - v.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tmanhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n\t\t}\n\n\t\tsetFromSpherical(s) {\n\t\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n\t\t}\n\n\t\tsetFromSphericalCoords(radius, phi, theta) {\n\t\t\tconst sinPhiRadius = Math.sin(phi) * radius;\n\t\t\tthis.x = sinPhiRadius * Math.sin(theta);\n\t\t\tthis.y = Math.cos(phi) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos(theta);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCylindrical(c) {\n\t\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n\t\t}\n\n\t\tsetFromCylindricalCoords(radius, theta, y) {\n\t\t\tthis.x = radius * Math.sin(theta);\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos(theta);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixPosition(m) {\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[12];\n\t\t\tthis.y = e[13];\n\t\t\tthis.z = e[14];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixScale(m) {\n\t\t\tconst sx = this.setFromMatrixColumn(m, 0).length();\n\t\t\tconst sy = this.setFromMatrixColumn(m, 1).length();\n\t\t\tconst sz = this.setFromMatrixColumn(m, 2).length();\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixColumn(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 4);\n\t\t}\n\n\t\tsetFromMatrix3Column(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 3);\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tVector3.prototype.isVector3 = true;\n\n\tconst _vector$c = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$4 = /*@__PURE__*/new Quaternion();\n\n\tclass Box3 {\n\t\tconstructor(min = new Vector3(+Infinity, +Infinity, +Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity)) {\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\t\t}\n\n\t\tset(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromArray(array) {\n\t\t\tlet minX = +Infinity;\n\t\t\tlet minY = +Infinity;\n\t\t\tlet minZ = +Infinity;\n\t\t\tlet maxX = -Infinity;\n\t\t\tlet maxY = -Infinity;\n\t\t\tlet maxZ = -Infinity;\n\n\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\tconst x = array[i];\n\t\t\t\tconst y = array[i + 1];\n\t\t\t\tconst z = array[i + 2];\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromBufferAttribute(attribute) {\n\t\t\tlet minX = +Infinity;\n\t\t\tlet minY = +Infinity;\n\t\t\tlet minZ = +Infinity;\n\t\t\tlet maxX = -Infinity;\n\t\t\tlet maxY = -Infinity;\n\t\t\tlet maxZ = -Infinity;\n\n\t\t\tfor (let i = 0, l = attribute.count; i < l; i++) {\n\t\t\t\tconst x = attribute.getX(i);\n\t\t\t\tconst y = attribute.getY(i);\n\t\t\t\tconst z = attribute.getZ(i);\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCenterAndSize(center, size) {\n\t\t\tconst halfSize = _vector$b.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromObject(object) {\n\t\t\tthis.makeEmpty();\n\t\t\treturn this.expandByObject(object);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.min.x = this.min.y = this.min.z = +Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = -Infinity;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t}\n\n\t\tgetSize(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByObject(object) {\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\t\t\tobject.updateWorldMatrix(false, false);\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif (geometry !== undefined) {\n\t\t\t\tif (geometry.boundingBox === null) {\n\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy(geometry.boundingBox);\n\n\t\t\t\t_box$3.applyMatrix4(object.matrixWorld);\n\n\t\t\t\tthis.union(_box$3);\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tthis.expandByObject(children[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n\t\t}\n\n\t\tcontainsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n\t\t}\n\n\t\tgetParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint(sphere.center, _vector$b); // If that point is inside the sphere, the AABB and sphere intersect.\n\n\t\t\treturn _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\t\t\tlet min, max;\n\n\t\t\tif (plane.normal.x > 0) {\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\t\t\t} else {\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\t\t\t}\n\n\t\t\tif (plane.normal.y > 0) {\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\t\t\t}\n\n\t\t\tif (plane.normal.z > 0) {\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\t\t\t}\n\n\t\t\treturn min <= -plane.constant && max >= -plane.constant;\n\t\t}\n\n\t\tintersectsTriangle(triangle) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t} // compute box center and extents\n\n\n\t\t\tthis.getCenter(_center);\n\n\t\t\t_extents.subVectors(this.max, _center); // translate triangle to aabb origin\n\n\n\t\t\t_v0$2.subVectors(triangle.a, _center);\n\n\t\t\t_v1$7.subVectors(triangle.b, _center);\n\n\t\t\t_v2$3.subVectors(triangle.c, _center); // compute edge vectors for triangle\n\n\n\t\t\t_f0.subVectors(_v1$7, _v0$2);\n\n\t\t\t_f1.subVectors(_v2$3, _v1$7);\n\n\t\t\t_f2.subVectors(_v0$2, _v2$3); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n\n\t\t\tlet axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\n\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // test 3 face normals from the aabb\n\n\n\t\t\taxes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\n\n\t\t\t_triangleNormal.crossVectors(_f0, _f1);\n\n\t\t\taxes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n\t\t\treturn satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents);\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\tconst clampedPoint = _vector$b.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t}\n\n\t\tgetBoundingSphere(target) {\n\t\t\tthis.getCenter(target.center);\n\t\t\ttarget.radius = this.getSize(_vector$b).length() * 0.5;\n\t\t\treturn target;\n\t\t}\n\n\t\tintersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n\t\t\tif (this.isEmpty()) this.makeEmpty();\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n\t\t\t_points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n\n\t\t\t_points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n\n\t\t\t_points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n\n\t\t\t_points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n\n\t\t\t_points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n\n\t\t\t_points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n\n\t\t\t_points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n\n\t\t\t_points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n\n\t\t\tthis.setFromPoints(_points);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t}\n\n\t}\n\n\tBox3.prototype.isBox3 = true;\n\tconst _points = [/*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3()];\n\n\tconst _vector$b = /*@__PURE__*/new Vector3();\n\n\tconst _box$3 = /*@__PURE__*/new Box3(); // triangle centered vertices\n\n\n\tconst _v0$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v1$7 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$3 = /*@__PURE__*/new Vector3(); // triangle edge vectors\n\n\n\tconst _f0 = /*@__PURE__*/new Vector3();\n\n\tconst _f1 = /*@__PURE__*/new Vector3();\n\n\tconst _f2 = /*@__PURE__*/new Vector3();\n\n\tconst _center = /*@__PURE__*/new Vector3();\n\n\tconst _extents = /*@__PURE__*/new Vector3();\n\n\tconst _triangleNormal = /*@__PURE__*/new Vector3();\n\n\tconst _testAxis = /*@__PURE__*/new Vector3();\n\n\tfunction satForAxes(axes, v0, v1, v2, extents) {\n\t\tfor (let i = 0, j = axes.length - 3; i <= j; i += 3) {\n\t\t\t_testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\n\n\n\t\t\tconst r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\n\n\t\t\tconst p0 = v0.dot(_testAxis);\n\t\t\tconst p1 = v1.dot(_testAxis);\n\t\t\tconst p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n\t\t\tif (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tconst _box$2 = /*@__PURE__*/new Box3();\n\n\tconst _v1$6 = /*@__PURE__*/new Vector3();\n\n\tconst _toFarthestPoint = /*@__PURE__*/new Vector3();\n\n\tconst _toPoint = /*@__PURE__*/new Vector3();\n\n\tclass Sphere {\n\t\tconstructor(center = new Vector3(), radius = -1) {\n\t\t\tthis.center = center;\n\t\t\tthis.radius = radius;\n\t\t}\n\n\t\tset(center, radius) {\n\t\t\tthis.center.copy(center);\n\t\t\tthis.radius = radius;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points, optionalCenter) {\n\t\t\tconst center = this.center;\n\n\t\t\tif (optionalCenter !== undefined) {\n\t\t\t\tcenter.copy(optionalCenter);\n\t\t\t} else {\n\t\t\t\t_box$2.setFromPoints(points).getCenter(center);\n\t\t\t}\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt(maxRadiusSq);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(sphere) {\n\t\t\tthis.center.copy(sphere.center);\n\t\t\tthis.radius = sphere.radius;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\treturn this.radius < 0;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.center.set(0, 0, 0);\n\t\t\tthis.radius = -1;\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.distanceToSquared(this.center) <= this.radius * this.radius;\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn point.distanceTo(this.center) - this.radius;\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\tconst radiusSum = this.radius + sphere.radius;\n\t\t\treturn sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsSphere(this);\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\treturn Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\tconst deltaLengthSq = this.center.distanceToSquared(point);\n\t\t\ttarget.copy(point);\n\n\t\t\tif (deltaLengthSq > this.radius * this.radius) {\n\t\t\t\ttarget.sub(this.center).normalize();\n\t\t\t\ttarget.multiplyScalar(this.radius).add(this.center);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\tgetBoundingBox(target) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\t// Empty sphere produces empty bounding box\n\t\t\t\ttarget.makeEmpty();\n\t\t\t\treturn target;\n\t\t\t}\n\n\t\t\ttarget.set(this.center, this.center);\n\t\t\ttarget.expandByScalar(this.radius);\n\t\t\treturn target;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tthis.center.applyMatrix4(matrix);\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.center.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\t\t\t_toPoint.subVectors(point, this.center);\n\n\t\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\t\tif (lengthSq > this.radius * this.radius) {\n\t\t\t\tconst length = Math.sqrt(lengthSq);\n\t\t\t\tconst missingRadiusHalf = (length - this.radius) * 0.5; // Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\t\tthis.center.add(_toPoint.multiplyScalar(missingRadiusHalf / length));\n\t\t\t\tthis.radius += missingRadiusHalf;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(sphere) {\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\t\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\t\t\t_toFarthestPoint.subVectors(sphere.center, this.center).normalize().multiplyScalar(sphere.radius);\n\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(sphere) {\n\t\t\treturn sphere.center.equals(this.center) && sphere.radius === this.radius;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$a = /*@__PURE__*/new Vector3();\n\n\tconst _segCenter = /*@__PURE__*/new Vector3();\n\n\tconst _segDir = /*@__PURE__*/new Vector3();\n\n\tconst _diff = /*@__PURE__*/new Vector3();\n\n\tconst _edge1 = /*@__PURE__*/new Vector3();\n\n\tconst _edge2 = /*@__PURE__*/new Vector3();\n\n\tconst _normal$1 = /*@__PURE__*/new Vector3();\n\n\tclass Ray {\n\t\tconstructor(origin = new Vector3(), direction = new Vector3(0, 0, -1)) {\n\t\t\tthis.origin = origin;\n\t\t\tthis.direction = direction;\n\t\t}\n\n\t\tset(origin, direction) {\n\t\t\tthis.origin.copy(origin);\n\t\t\tthis.direction.copy(direction);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(ray) {\n\t\t\tthis.origin.copy(ray.origin);\n\t\t\tthis.direction.copy(ray.direction);\n\t\t\treturn this;\n\t\t}\n\n\t\tat(t, target) {\n\t\t\treturn target.copy(this.direction).multiplyScalar(t).add(this.origin);\n\t\t}\n\n\t\tlookAt(v) {\n\t\t\tthis.direction.copy(v).sub(this.origin).normalize();\n\t\t\treturn this;\n\t\t}\n\n\t\trecast(t) {\n\t\t\tthis.origin.copy(this.at(t, _vector$a));\n\t\t\treturn this;\n\t\t}\n\n\t\tclosestPointToPoint(point, target) {\n\t\t\ttarget.subVectors(point, this.origin);\n\t\t\tconst directionDistance = target.dot(this.direction);\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn target.copy(this.origin);\n\t\t\t}\n\n\t\t\treturn target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn Math.sqrt(this.distanceSqToPoint(point));\n\t\t}\n\n\t\tdistanceSqToPoint(point) {\n\t\t\tconst directionDistance = _vector$a.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn this.origin.distanceToSquared(point);\n\t\t\t}\n\n\t\t\t_vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\n\t\t\treturn _vector$a.distanceToSquared(point);\n\t\t}\n\n\t\tdistanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\t\t\t_segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n\n\t\t\t_segDir.copy(v1).sub(v0).normalize();\n\n\t\t\t_diff.copy(this.origin).sub(_segCenter);\n\n\t\t\tconst segExtent = v0.distanceTo(v1) * 0.5;\n\t\t\tconst a01 = -this.direction.dot(_segDir);\n\n\t\t\tconst b0 = _diff.dot(this.direction);\n\n\t\t\tconst b1 = -_diff.dot(_segDir);\n\n\t\t\tconst c = _diff.lengthSq();\n\n\t\t\tconst det = Math.abs(1 - a01 * a01);\n\t\t\tlet s0, s1, sqrDist, extDet;\n\n\t\t\tif (det > 0) {\n\t\t\t\t// The ray and segment are not parallel.\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif (s0 >= 0) {\n\t\t\t\t\tif (s1 >= -extDet) {\n\t\t\t\t\t\tif (s1 <= extDet) {\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\t\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// region 1\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 5\n\t\t\t\t\t\ts1 = -segExtent;\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (s1 <= -extDet) {\n\t\t\t\t\t\t// region 4\n\t\t\t\t\t\ts0 = Math.max(0, -(-a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else if (s1 <= extDet) {\n\t\t\t\t\t\t// region 3\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 2\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Ray and segment are parallel.\n\t\t\t\ts1 = a01 > 0 ? -segExtent : segExtent;\n\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t}\n\n\t\t\tif (optionalPointOnRay) {\n\t\t\t\toptionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n\t\t\t}\n\n\t\t\tif (optionalPointOnSegment) {\n\t\t\t\toptionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\t\t}\n\n\t\tintersectSphere(sphere, target) {\n\t\t\t_vector$a.subVectors(sphere.center, this.origin);\n\n\t\t\tconst tca = _vector$a.dot(this.direction);\n\n\t\t\tconst d2 = _vector$a.dot(_vector$a) - tca * tca;\n\t\t\tconst radius2 = sphere.radius * sphere.radius;\n\t\t\tif (d2 > radius2) return null;\n\t\t\tconst thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n\t\t\tconst t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n\t\t\tconst t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n\t\t\tif (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\n\t\t\tif (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n\t\t\treturn this.at(t0, target);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\treturn this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n\t\t}\n\n\t\tdistanceToPlane(plane) {\n\t\t\tconst denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (plane.distanceToPoint(this.origin) === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} // Null is preferable to undefined since undefined means.... it is undefined\n\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\t\t}\n\n\t\tintersectPlane(plane, target) {\n\t\t\tconst t = this.distanceToPlane(plane);\n\n\t\t\tif (t === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.at(t, target);\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\t// check if the ray lies on the plane first\n\t\t\tconst distToPoint = plane.distanceToPoint(this.origin);\n\n\t\t\tif (distToPoint === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator * distToPoint < 0) {\n\t\t\t\treturn true;\n\t\t\t} // ray origin is behind the plane (and is pointing behind it)\n\n\n\t\t\treturn false;\n\t\t}\n\n\t\tintersectBox(box, target) {\n\t\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\t\t\tconst invdirx = 1 / this.direction.x,\n\t\t\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\t\t\tinvdirz = 1 / this.direction.z;\n\t\t\tconst origin = this.origin;\n\n\t\t\tif (invdirx >= 0) {\n\t\t\t\ttmin = (box.min.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.max.x - origin.x) * invdirx;\n\t\t\t} else {\n\t\t\t\ttmin = (box.max.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.min.x - origin.x) * invdirx;\n\t\t\t}\n\n\t\t\tif (invdiry >= 0) {\n\t\t\t\ttymin = (box.min.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.max.y - origin.y) * invdiry;\n\t\t\t} else {\n\t\t\t\ttymin = (box.max.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.min.y - origin.y) * invdiry;\n\t\t\t}\n\n\t\t\tif (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif (tymin > tmin || tmin !== tmin) tmin = tymin;\n\t\t\tif (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n\t\t\tif (invdirz >= 0) {\n\t\t\t\ttzmin = (box.min.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.max.z - origin.z) * invdirz;\n\t\t\t} else {\n\t\t\t\ttzmin = (box.max.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.min.z - origin.z) * invdirz;\n\t\t\t}\n\n\t\t\tif (tmin > tzmax || tzmin > tmax) return null;\n\t\t\tif (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n\t\t\tif (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n\t\t\tif (tmax < 0) return null;\n\t\t\treturn this.at(tmin >= 0 ? tmin : tmax, target);\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn this.intersectBox(box, _vector$a) !== null;\n\t\t}\n\n\t\tintersectTriangle(a, b, c, backfaceCulling, target) {\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\t\t\t_edge1.subVectors(b, a);\n\n\t\t\t_edge2.subVectors(c, a);\n\n\t\t\t_normal$1.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//\t |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//\t |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//\t |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n\n\t\t\tlet DdN = this.direction.dot(_normal$1);\n\t\t\tlet sign;\n\n\t\t\tif (DdN > 0) {\n\t\t\t\tif (backfaceCulling) return null;\n\t\t\t\tsign = 1;\n\t\t\t} else if (DdN < 0) {\n\t\t\t\tsign = -1;\n\t\t\t\tDdN = -DdN;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t_diff.subVectors(this.origin, a);\n\n\t\t\tconst DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\n\n\t\t\tif (DdQxE2 < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\n\n\t\t\tif (DdE1xQ < 0) {\n\t\t\t\treturn null;\n\t\t\t} // b1+b2 > 1, no intersection\n\n\n\t\t\tif (DdQxE2 + DdE1xQ > DdN) {\n\t\t\t\treturn null;\n\t\t\t} // Line intersects triangle, check if ray does.\n\n\n\t\t\tconst QdN = -sign * _diff.dot(_normal$1); // t < 0, no intersection\n\n\n\t\t\tif (QdN < 0) {\n\t\t\t\treturn null;\n\t\t\t} // Ray intersects triangle.\n\n\n\t\t\treturn this.at(QdN / DdN, target);\n\t\t}\n\n\t\tapplyMatrix4(matrix4) {\n\t\t\tthis.origin.applyMatrix4(matrix4);\n\t\t\tthis.direction.transformDirection(matrix4);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(ray) {\n\t\t\treturn ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tclass Matrix4 {\n\t\tconstructor() {\n\t\t\tthis.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tset(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[4] = n12;\n\t\t\tte[8] = n13;\n\t\t\tte[12] = n14;\n\t\t\tte[1] = n21;\n\t\t\tte[5] = n22;\n\t\t\tte[9] = n23;\n\t\t\tte[13] = n24;\n\t\t\tte[2] = n31;\n\t\t\tte[6] = n32;\n\t\t\tte[10] = n33;\n\t\t\tte[14] = n34;\n\t\t\tte[3] = n41;\n\t\t\tte[7] = n42;\n\t\t\tte[11] = n43;\n\t\t\tte[15] = n44;\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\tthis.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Matrix4().fromArray(this.elements);\n\t\t}\n\n\t\tcopy(m) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\tte[9] = me[9];\n\t\t\tte[10] = me[10];\n\t\t\tte[11] = me[11];\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\tte[15] = me[15];\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyPosition(m) {\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tme = m.elements;\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrix3(m) {\n\t\t\tconst me = m.elements;\n\t\t\tthis.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\textractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrixColumn(this, 0);\n\t\t\tyAxis.setFromMatrixColumn(this, 1);\n\t\t\tzAxis.setFromMatrixColumn(this, 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeBasis(xAxis, yAxis, zAxis) {\n\t\t\tthis.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\textractRotation(m) {\n\t\t\t// this method does not support reflection matrices\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\n\t\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn(m, 0).length();\n\n\t\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn(m, 1).length();\n\n\t\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn(m, 2).length();\n\n\t\t\tte[0] = me[0] * scaleX;\n\t\t\tte[1] = me[1] * scaleX;\n\t\t\tte[2] = me[2] * scaleX;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = me[4] * scaleY;\n\t\t\tte[5] = me[5] * scaleY;\n\t\t\tte[6] = me[6] * scaleY;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = me[8] * scaleZ;\n\t\t\tte[9] = me[9] * scaleZ;\n\t\t\tte[10] = me[10] * scaleZ;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationFromEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = euler.x,\n\t\t\t\t\t\ty = euler.y,\n\t\t\t\t\t\tz = euler.z;\n\t\t\tconst a = Math.cos(x),\n\t\t\t\t\t\tb = Math.sin(x);\n\t\t\tconst c = Math.cos(y),\n\t\t\t\t\t\td = Math.sin(y);\n\t\t\tconst e = Math.cos(z),\n\t\t\t\t\t\tf = Math.sin(z);\n\n\t\t\tif (euler.order === 'XYZ') {\n\t\t\t\tconst ae = a * e,\n\t\t\t\t\t\t\taf = a * f,\n\t\t\t\t\t\t\tbe = b * e,\n\t\t\t\t\t\t\tbf = b * f;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -c * f;\n\t\t\t\tte[8] = d;\n\t\t\t\tte[1] = af + be * d;\n\t\t\t\tte[5] = ae - bf * d;\n\t\t\t\tte[9] = -b * c;\n\t\t\t\tte[2] = bf - ae * d;\n\t\t\t\tte[6] = be + af * d;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YXZ') {\n\t\t\t\tconst ce = c * e,\n\t\t\t\t\t\t\tcf = c * f,\n\t\t\t\t\t\t\tde = d * e,\n\t\t\t\t\t\t\tdf = d * f;\n\t\t\t\tte[0] = ce + df * b;\n\t\t\t\tte[4] = de * b - cf;\n\t\t\t\tte[8] = a * d;\n\t\t\t\tte[1] = a * f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b;\n\t\t\t\tte[2] = cf * b - de;\n\t\t\t\tte[6] = df + ce * b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZXY') {\n\t\t\t\tconst ce = c * e,\n\t\t\t\t\t\t\tcf = c * f,\n\t\t\t\t\t\t\tde = d * e,\n\t\t\t\t\t\t\tdf = d * f;\n\t\t\t\tte[0] = ce - df * b;\n\t\t\t\tte[4] = -a * f;\n\t\t\t\tte[8] = de + cf * b;\n\t\t\t\tte[1] = cf + de * b;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = df - ce * b;\n\t\t\t\tte[2] = -a * d;\n\t\t\t\tte[6] = b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZYX') {\n\t\t\t\tconst ae = a * e,\n\t\t\t\t\t\t\taf = a * f,\n\t\t\t\t\t\t\tbe = b * e,\n\t\t\t\t\t\t\tbf = b * f;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = be * d - af;\n\t\t\t\tte[8] = ae * d + bf;\n\t\t\t\tte[1] = c * f;\n\t\t\t\tte[5] = bf * d + ae;\n\t\t\t\tte[9] = af * d - be;\n\t\t\t\tte[2] = -d;\n\t\t\t\tte[6] = b * c;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YZX') {\n\t\t\t\tconst ac = a * c,\n\t\t\t\t\t\t\tad = a * d,\n\t\t\t\t\t\t\tbc = b * c,\n\t\t\t\t\t\t\tbd = b * d;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = bd - ac * f;\n\t\t\t\tte[8] = bc * f + ad;\n\t\t\t\tte[1] = f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b * e;\n\t\t\t\tte[2] = -d * e;\n\t\t\t\tte[6] = ad * f + bc;\n\t\t\t\tte[10] = ac - bd * f;\n\t\t\t} else if (euler.order === 'XZY') {\n\t\t\t\tconst ac = a * c,\n\t\t\t\t\t\t\tad = a * d,\n\t\t\t\t\t\t\tbc = b * c,\n\t\t\t\t\t\t\tbd = b * d;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -f;\n\t\t\t\tte[8] = d * e;\n\t\t\t\tte[1] = ac * f + bd;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = ad * f - bc;\n\t\t\t\tte[2] = bc * f - ad;\n\t\t\t\tte[6] = b * e;\n\t\t\t\tte[10] = bd * f + ac;\n\t\t\t} // bottom row\n\n\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0; // last column\n\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationFromQuaternion(q) {\n\t\t\treturn this.compose(_zero, q, _one);\n\t\t}\n\n\t\tlookAt(eye, target, up) {\n\t\t\tconst te = this.elements;\n\n\t\t\t_z.subVectors(eye, target);\n\n\t\t\tif (_z.lengthSq() === 0) {\n\t\t\t\t// eye and target are in the same position\n\t\t\t\t_z.z = 1;\n\t\t\t}\n\n\t\t\t_z.normalize();\n\n\t\t\t_x.crossVectors(up, _z);\n\n\t\t\tif (_x.lengthSq() === 0) {\n\t\t\t\t// up and z are parallel\n\t\t\t\tif (Math.abs(up.z) === 1) {\n\t\t\t\t\t_z.x += 0.0001;\n\t\t\t\t} else {\n\t\t\t\t\t_z.z += 0.0001;\n\t\t\t\t}\n\n\t\t\t\t_z.normalize();\n\n\t\t\t\t_x.crossVectors(up, _z);\n\t\t\t}\n\n\t\t\t_x.normalize();\n\n\t\t\t_y.crossVectors(_z, _x);\n\n\t\t\tte[0] = _x.x;\n\t\t\tte[4] = _y.x;\n\t\t\tte[8] = _z.x;\n\t\t\tte[1] = _x.y;\n\t\t\tte[5] = _y.y;\n\t\t\tte[9] = _z.y;\n\t\t\tte[2] = _x.z;\n\t\t\tte[6] = _y.z;\n\t\t\tte[10] = _z.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(m, n) {\n\t\t\tif (n !== undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n\t\t\t\treturn this.multiplyMatrices(m, n);\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t}\n\n\t\tpremultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t}\n\n\t\tmultiplyMatrices(a, b) {\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = ae[0],\n\t\t\t\t\t\ta12 = ae[4],\n\t\t\t\t\t\ta13 = ae[8],\n\t\t\t\t\t\ta14 = ae[12];\n\t\t\tconst a21 = ae[1],\n\t\t\t\t\t\ta22 = ae[5],\n\t\t\t\t\t\ta23 = ae[9],\n\t\t\t\t\t\ta24 = ae[13];\n\t\t\tconst a31 = ae[2],\n\t\t\t\t\t\ta32 = ae[6],\n\t\t\t\t\t\ta33 = ae[10],\n\t\t\t\t\t\ta34 = ae[14];\n\t\t\tconst a41 = ae[3],\n\t\t\t\t\t\ta42 = ae[7],\n\t\t\t\t\t\ta43 = ae[11],\n\t\t\t\t\t\ta44 = ae[15];\n\t\t\tconst b11 = be[0],\n\t\t\t\t\t\tb12 = be[4],\n\t\t\t\t\t\tb13 = be[8],\n\t\t\t\t\t\tb14 = be[12];\n\t\t\tconst b21 = be[1],\n\t\t\t\t\t\tb22 = be[5],\n\t\t\t\t\t\tb23 = be[9],\n\t\t\t\t\t\tb24 = be[13];\n\t\t\tconst b31 = be[2],\n\t\t\t\t\t\tb32 = be[6],\n\t\t\t\t\t\tb33 = be[10],\n\t\t\t\t\t\tb34 = be[14];\n\t\t\tconst b41 = be[3],\n\t\t\t\t\t\tb42 = be[7],\n\t\t\t\t\t\tb43 = be[11],\n\t\t\t\t\t\tb44 = be[15];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\t\t\tte[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[8] *= s;\n\t\t\tte[12] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[9] *= s;\n\t\t\tte[13] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[10] *= s;\n\t\t\tte[14] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[11] *= s;\n\t\t\tte[15] *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeterminant() {\n\t\t\tconst te = this.elements;\n\t\t\tconst n11 = te[0],\n\t\t\t\t\t\tn12 = te[4],\n\t\t\t\t\t\tn13 = te[8],\n\t\t\t\t\t\tn14 = te[12];\n\t\t\tconst n21 = te[1],\n\t\t\t\t\t\tn22 = te[5],\n\t\t\t\t\t\tn23 = te[9],\n\t\t\t\t\t\tn24 = te[13];\n\t\t\tconst n31 = te[2],\n\t\t\t\t\t\tn32 = te[6],\n\t\t\t\t\t\tn33 = te[10],\n\t\t\t\t\t\tn34 = te[14];\n\t\t\tconst n41 = te[3],\n\t\t\t\t\t\tn42 = te[7],\n\t\t\t\t\t\tn43 = te[11],\n\t\t\t\t\t\tn44 = te[15]; //TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n\t\t}\n\n\t\ttranspose() {\n\t\t\tconst te = this.elements;\n\t\t\tlet tmp;\n\t\t\ttmp = te[1];\n\t\t\tte[1] = te[4];\n\t\t\tte[4] = tmp;\n\t\t\ttmp = te[2];\n\t\t\tte[2] = te[8];\n\t\t\tte[8] = tmp;\n\t\t\ttmp = te[6];\n\t\t\tte[6] = te[9];\n\t\t\tte[9] = tmp;\n\t\t\ttmp = te[3];\n\t\t\tte[3] = te[12];\n\t\t\tte[12] = tmp;\n\t\t\ttmp = te[7];\n\t\t\tte[7] = te[13];\n\t\t\tte[13] = tmp;\n\t\t\ttmp = te[11];\n\t\t\tte[11] = te[14];\n\t\t\tte[14] = tmp;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetPosition(x, y, z) {\n\t\t\tconst te = this.elements;\n\n\t\t\tif (x.isVector3) {\n\t\t\t\tte[12] = x.x;\n\t\t\t\tte[13] = x.y;\n\t\t\t\tte[14] = x.z;\n\t\t\t} else {\n\t\t\t\tte[12] = x;\n\t\t\t\tte[13] = y;\n\t\t\t\tte[14] = z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tinvert() {\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tn11 = te[0],\n\t\t\t\t\t\tn21 = te[1],\n\t\t\t\t\t\tn31 = te[2],\n\t\t\t\t\t\tn41 = te[3],\n\t\t\t\t\t\tn12 = te[4],\n\t\t\t\t\t\tn22 = te[5],\n\t\t\t\t\t\tn32 = te[6],\n\t\t\t\t\t\tn42 = te[7],\n\t\t\t\t\t\tn13 = te[8],\n\t\t\t\t\t\tn23 = te[9],\n\t\t\t\t\t\tn33 = te[10],\n\t\t\t\t\t\tn43 = te[11],\n\t\t\t\t\t\tn14 = te[12],\n\t\t\t\t\t\tn24 = te[13],\n\t\t\t\t\t\tn34 = te[14],\n\t\t\t\t\t\tn44 = te[15],\n\t\t\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\t\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tconst detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n\t\t\tte[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n\t\t\tte[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n\t\t\tte[4] = t12 * detInv;\n\t\t\tte[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n\t\t\tte[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n\t\t\tte[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n\t\t\tte[8] = t13 * detInv;\n\t\t\tte[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n\t\t\tte[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n\t\t\tte[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n\t\t\tte[12] = t14 * detInv;\n\t\t\tte[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n\t\t\tte[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n\t\t\tte[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(v) {\n\t\t\tconst te = this.elements;\n\t\t\tconst x = v.x,\n\t\t\t\t\t\ty = v.y,\n\t\t\t\t\t\tz = v.z;\n\t\t\tte[0] *= x;\n\t\t\tte[4] *= y;\n\t\t\tte[8] *= z;\n\t\t\tte[1] *= x;\n\t\t\tte[5] *= y;\n\t\t\tte[9] *= z;\n\t\t\tte[2] *= x;\n\t\t\tte[6] *= y;\n\t\t\tte[10] *= z;\n\t\t\tte[3] *= x;\n\t\t\tte[7] *= y;\n\t\t\tte[11] *= z;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMaxScaleOnAxis() {\n\t\t\tconst te = this.elements;\n\t\t\tconst scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n\t\t\tconst scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n\t\t\tconst scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n\t\t\treturn Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n\t\t}\n\n\t\tmakeTranslation(x, y, z) {\n\t\t\tthis.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationX(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationY(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationZ(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationAxis(axis, angle) {\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\t\t\tconst c = Math.cos(angle);\n\t\t\tconst s = Math.sin(angle);\n\t\t\tconst t = 1 - c;\n\t\t\tconst x = axis.x,\n\t\t\t\t\t\ty = axis.y,\n\t\t\t\t\t\tz = axis.z;\n\t\t\tconst tx = t * x,\n\t\t\t\t\t\tty = t * y;\n\t\t\tthis.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeScale(x, y, z) {\n\t\t\tthis.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeShear(xy, xz, yx, yz, zx, zy) {\n\t\t\tthis.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tcompose(position, quaternion, scale) {\n\t\t\tconst te = this.elements;\n\t\t\tconst x = quaternion._x,\n\t\t\t\t\t\ty = quaternion._y,\n\t\t\t\t\t\tz = quaternion._z,\n\t\t\t\t\t\tw = quaternion._w;\n\t\t\tconst x2 = x + x,\n\t\t\t\t\t\ty2 = y + y,\n\t\t\t\t\t\tz2 = z + z;\n\t\t\tconst xx = x * x2,\n\t\t\t\t\t\txy = x * y2,\n\t\t\t\t\t\txz = x * z2;\n\t\t\tconst yy = y * y2,\n\t\t\t\t\t\tyz = y * z2,\n\t\t\t\t\t\tzz = z * z2;\n\t\t\tconst wx = w * x2,\n\t\t\t\t\t\twy = w * y2,\n\t\t\t\t\t\twz = w * z2;\n\t\t\tconst sx = scale.x,\n\t\t\t\t\t\tsy = scale.y,\n\t\t\t\t\t\tsz = scale.z;\n\t\t\tte[0] = (1 - (yy + zz)) * sx;\n\t\t\tte[1] = (xy + wz) * sx;\n\t\t\tte[2] = (xz - wy) * sx;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = (xy - wz) * sy;\n\t\t\tte[5] = (1 - (xx + zz)) * sy;\n\t\t\tte[6] = (yz + wx) * sy;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = (xz + wy) * sz;\n\t\t\tte[9] = (yz - wx) * sz;\n\t\t\tte[10] = (1 - (xx + yy)) * sz;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = position.x;\n\t\t\tte[13] = position.y;\n\t\t\tte[14] = position.z;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tdecompose(position, quaternion, scale) {\n\t\t\tconst te = this.elements;\n\n\t\t\tlet sx = _v1$5.set(te[0], te[1], te[2]).length();\n\n\t\t\tconst sy = _v1$5.set(te[4], te[5], te[6]).length();\n\n\t\t\tconst sz = _v1$5.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n\n\t\t\tconst det = this.determinant();\n\t\t\tif (det < 0) sx = -sx;\n\t\t\tposition.x = te[12];\n\t\t\tposition.y = te[13];\n\t\t\tposition.z = te[14]; // scale the rotation part\n\n\t\t\t_m1$2.copy(this);\n\n\t\t\tconst invSX = 1 / sx;\n\t\t\tconst invSY = 1 / sy;\n\t\t\tconst invSZ = 1 / sz;\n\t\t\t_m1$2.elements[0] *= invSX;\n\t\t\t_m1$2.elements[1] *= invSX;\n\t\t\t_m1$2.elements[2] *= invSX;\n\t\t\t_m1$2.elements[4] *= invSY;\n\t\t\t_m1$2.elements[5] *= invSY;\n\t\t\t_m1$2.elements[6] *= invSY;\n\t\t\t_m1$2.elements[8] *= invSZ;\n\t\t\t_m1$2.elements[9] *= invSZ;\n\t\t\t_m1$2.elements[10] *= invSZ;\n\t\t\tquaternion.setFromRotationMatrix(_m1$2);\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakePerspective(left, right, top, bottom, near, far) {\n\t\t\tif (far === undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n\t\t\t}\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = 2 * near / (right - left);\n\t\t\tconst y = 2 * near / (top - bottom);\n\t\t\tconst a = (right + left) / (right - left);\n\t\t\tconst b = (top + bottom) / (top - bottom);\n\t\t\tconst c = -(far + near) / (far - near);\n\t\t\tconst d = -2 * far * near / (far - near);\n\t\t\tte[0] = x;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = a;\n\t\t\tte[12] = 0;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = y;\n\t\t\tte[9] = b;\n\t\t\tte[13] = 0;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = c;\n\t\t\tte[14] = d;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = -1;\n\t\t\tte[15] = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeOrthographic(left, right, top, bottom, near, far) {\n\t\t\tconst te = this.elements;\n\t\t\tconst w = 1.0 / (right - left);\n\t\t\tconst h = 1.0 / (top - bottom);\n\t\t\tconst p = 1.0 / (far - near);\n\t\t\tconst x = (right + left) * w;\n\t\t\tconst y = (top + bottom) * h;\n\t\t\tconst z = (far + near) * p;\n\t\t\tte[0] = 2 * w;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = 0;\n\t\t\tte[12] = -x;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = 2 * h;\n\t\t\tte[9] = 0;\n\t\t\tte[13] = -y;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = -2 * p;\n\t\t\tte[14] = -z;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(matrix) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\tarray[offset + 9] = te[9];\n\t\t\tarray[offset + 10] = te[10];\n\t\t\tarray[offset + 11] = te[11];\n\t\t\tarray[offset + 12] = te[12];\n\t\t\tarray[offset + 13] = te[13];\n\t\t\tarray[offset + 14] = te[14];\n\t\t\tarray[offset + 15] = te[15];\n\t\t\treturn array;\n\t\t}\n\n\t}\n\n\tMatrix4.prototype.isMatrix4 = true;\n\n\tconst _v1$5 = /*@__PURE__*/new Vector3();\n\n\tconst _m1$2 = /*@__PURE__*/new Matrix4();\n\n\tconst _zero = /*@__PURE__*/new Vector3(0, 0, 0);\n\n\tconst _one = /*@__PURE__*/new Vector3(1, 1, 1);\n\n\tconst _x = /*@__PURE__*/new Vector3();\n\n\tconst _y = /*@__PURE__*/new Vector3();\n\n\tconst _z = /*@__PURE__*/new Vector3();\n\n\tconst _matrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _quaternion$3 = /*@__PURE__*/new Quaternion();\n\n\tclass Euler {\n\t\tconstructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._x;\n\t\t}\n\n\t\tset x(value) {\n\t\t\tthis._x = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._y;\n\t\t}\n\n\t\tset y(value) {\n\t\t\tthis._y = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget z() {\n\t\t\treturn this._z;\n\t\t}\n\n\t\tset z(value) {\n\t\t\tthis._z = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget order() {\n\t\t\treturn this._order;\n\t\t}\n\n\t\tset order(value) {\n\t\t\tthis._order = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tset(x, y, z, order = this._order) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._order);\n\t\t}\n\n\t\tcopy(euler) {\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromRotationMatrix(m, order = this._order, update = true) {\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tconst te = m.elements;\n\t\t\tconst m11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8];\n\t\t\tconst m21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9];\n\t\t\tconst m31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10];\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._y = Math.asin(clamp(m13, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m13) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = Math.asin(-clamp(m23, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m23) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = Math.asin(clamp(m32, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m32) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._y = Math.asin(-clamp(m31, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m31) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._z = Math.asin(clamp(m21, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m21) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._z = Math.asin(-clamp(m12, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m12) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tthis._order = order;\n\t\t\tif (update === true) this._onChangeCallback();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromQuaternion(q, order, update) {\n\t\t\t_matrix$1.makeRotationFromQuaternion(q);\n\n\t\t\treturn this.setFromRotationMatrix(_matrix$1, order, update);\n\t\t}\n\n\t\tsetFromVector3(v, order = this._order) {\n\t\t\treturn this.set(v.x, v.y, v.z, order);\n\t\t}\n\n\t\treorder(newOrder) {\n\t\t\t// WARNING: this discards revolution information -bhouston\n\t\t\t_quaternion$3.setFromEuler(this);\n\n\t\t\treturn this.setFromQuaternion(_quaternion$3, newOrder);\n\t\t}\n\n\t\tequals(euler) {\n\t\t\treturn euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n\t\t}\n\n\t\tfromArray(array) {\n\t\t\tthis._x = array[0];\n\t\t\tthis._y = array[1];\n\t\t\tthis._z = array[2];\n\t\t\tif (array[3] !== undefined) this._order = array[3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._order;\n\t\t\treturn array;\n\t\t}\n\n\t\ttoVector3(optionalResult) {\n\t\t\tif (optionalResult) {\n\t\t\t\treturn optionalResult.set(this._x, this._y, this._z);\n\t\t\t} else {\n\t\t\t\treturn new Vector3(this._x, this._y, this._z);\n\t\t\t}\n\t\t}\n\n\t\t_onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t}\n\n\tEuler.prototype.isEuler = true;\n\tEuler.DefaultOrder = 'XYZ';\n\tEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n\n\tclass Layers {\n\t\tconstructor() {\n\t\t\tthis.mask = 1 | 0;\n\t\t}\n\n\t\tset(channel) {\n\t\t\tthis.mask = 1 << channel | 0;\n\t\t}\n\n\t\tenable(channel) {\n\t\t\tthis.mask |= 1 << channel | 0;\n\t\t}\n\n\t\tenableAll() {\n\t\t\tthis.mask = 0xffffffff | 0;\n\t\t}\n\n\t\ttoggle(channel) {\n\t\t\tthis.mask ^= 1 << channel | 0;\n\t\t}\n\n\t\tdisable(channel) {\n\t\t\tthis.mask &= ~(1 << channel | 0);\n\t\t}\n\n\t\tdisableAll() {\n\t\t\tthis.mask = 0;\n\t\t}\n\n\t\ttest(layers) {\n\t\t\treturn (this.mask & layers.mask) !== 0;\n\t\t}\n\n\t}\n\n\tlet _object3DId = 0;\n\n\tconst _v1$4 = /*@__PURE__*/new Vector3();\n\n\tconst _q1 = /*@__PURE__*/new Quaternion();\n\n\tconst _m1$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _target = /*@__PURE__*/new Vector3();\n\n\tconst _position$3 = /*@__PURE__*/new Vector3();\n\n\tconst _scale$2 = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$2 = /*@__PURE__*/new Quaternion();\n\n\tconst _xAxis = /*@__PURE__*/new Vector3(1, 0, 0);\n\n\tconst _yAxis = /*@__PURE__*/new Vector3(0, 1, 0);\n\n\tconst _zAxis = /*@__PURE__*/new Vector3(0, 0, 1);\n\n\tconst _addedEvent = {\n\t\ttype: 'added'\n\t};\n\tconst _removedEvent = {\n\t\ttype: 'removed'\n\t};\n\n\tclass Object3D extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: _object3DId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Object3D';\n\t\t\tthis.parent = null;\n\t\t\tthis.children = [];\n\t\t\tthis.up = Object3D.DefaultUp.clone();\n\t\t\tconst position = new Vector3();\n\t\t\tconst rotation = new Euler();\n\t\t\tconst quaternion = new Quaternion();\n\t\t\tconst scale = new Vector3(1, 1, 1);\n\n\t\t\tfunction onRotationChange() {\n\t\t\t\tquaternion.setFromEuler(rotation, false);\n\t\t\t}\n\n\t\t\tfunction onQuaternionChange() {\n\t\t\t\trotation.setFromQuaternion(quaternion, undefined, false);\n\t\t\t}\n\n\t\t\trotation._onChange(onRotationChange);\n\n\t\t\tquaternion._onChange(onQuaternionChange);\n\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tposition: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: position\n\t\t\t\t},\n\t\t\t\trotation: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: rotation\n\t\t\t\t},\n\t\t\t\tquaternion: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: quaternion\n\t\t\t\t},\n\t\t\t\tscale: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: scale\n\t\t\t\t},\n\t\t\t\tmodelViewMatrix: {\n\t\t\t\t\tvalue: new Matrix4()\n\t\t\t\t},\n\t\t\t\tnormalMatrix: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.matrixWorld = new Matrix4();\n\t\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.visible = true;\n\t\t\tthis.castShadow = false;\n\t\t\tthis.receiveShadow = false;\n\t\t\tthis.frustumCulled = true;\n\t\t\tthis.renderOrder = 0;\n\t\t\tthis.animations = [];\n\t\t\tthis.userData = {};\n\t\t}\n\n\t\tonBeforeRender() {}\n\n\t\tonAfterRender() {}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\t\t\tthis.matrix.premultiply(matrix);\n\t\t\tthis.matrix.decompose(this.position, this.quaternion, this.scale);\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\tthis.quaternion.premultiply(q);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRotationFromAxisAngle(axis, angle) {\n\t\t\t// assumes axis is normalized\n\t\t\tthis.quaternion.setFromAxisAngle(axis, angle);\n\t\t}\n\n\t\tsetRotationFromEuler(euler) {\n\t\t\tthis.quaternion.setFromEuler(euler, true);\n\t\t}\n\n\t\tsetRotationFromMatrix(m) {\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tthis.quaternion.setFromRotationMatrix(m);\n\t\t}\n\n\t\tsetRotationFromQuaternion(q) {\n\t\t\t// assumes q is normalized\n\t\t\tthis.quaternion.copy(q);\n\t\t}\n\n\t\trotateOnAxis(axis, angle) {\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.multiply(_q1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateOnWorldAxis(axis, angle) {\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.premultiply(_q1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateX(angle) {\n\t\t\treturn this.rotateOnAxis(_xAxis, angle);\n\t\t}\n\n\t\trotateY(angle) {\n\t\t\treturn this.rotateOnAxis(_yAxis, angle);\n\t\t}\n\n\t\trotateZ(angle) {\n\t\t\treturn this.rotateOnAxis(_zAxis, angle);\n\t\t}\n\n\t\ttranslateOnAxis(axis, distance) {\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_v1$4.copy(axis).applyQuaternion(this.quaternion);\n\n\t\t\tthis.position.add(_v1$4.multiplyScalar(distance));\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslateX(distance) {\n\t\t\treturn this.translateOnAxis(_xAxis, distance);\n\t\t}\n\n\t\ttranslateY(distance) {\n\t\t\treturn this.translateOnAxis(_yAxis, distance);\n\t\t}\n\n\t\ttranslateZ(distance) {\n\t\t\treturn this.translateOnAxis(_zAxis, distance);\n\t\t}\n\n\t\tlocalToWorld(vector) {\n\t\t\treturn vector.applyMatrix4(this.matrixWorld);\n\t\t}\n\n\t\tworldToLocal(vector) {\n\t\t\treturn vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\n\t\t}\n\n\t\tlookAt(x, y, z) {\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\t\t\tif (x.isVector3) {\n\t\t\t\t_target.copy(x);\n\t\t\t} else {\n\t\t\t\t_target.set(x, y, z);\n\t\t\t}\n\n\t\t\tconst parent = this.parent;\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_position$3.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\tif (this.isCamera || this.isLight) {\n\t\t\t\t_m1$1.lookAt(_position$3, _target, this.up);\n\t\t\t} else {\n\t\t\t\t_m1$1.lookAt(_target, _position$3, this.up);\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix(_m1$1);\n\n\t\t\tif (parent) {\n\t\t\t\t_m1$1.extractRotation(parent.matrixWorld);\n\n\t\t\t\t_q1.setFromRotationMatrix(_m1$1);\n\n\t\t\t\tthis.quaternion.premultiply(_q1.invert());\n\t\t\t}\n\t\t}\n\n\t\tadd(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.add(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object === this) {\n\t\t\t\tconsole.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object && object.isObject3D) {\n\t\t\t\tif (object.parent !== null) {\n\t\t\t\t\tobject.parent.remove(object);\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tthis.children.push(object);\n\t\t\t\tobject.dispatchEvent(_addedEvent);\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tremove(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.remove(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst index = this.children.indexOf(object);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tobject.parent = null;\n\t\t\t\tthis.children.splice(index, 1);\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tremoveFromParent() {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent !== null) {\n\t\t\t\tparent.remove(this);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclear() {\n\t\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\t\tconst object = this.children[i];\n\t\t\t\tobject.parent = null;\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\tthis.children.length = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tattach(object) {\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_m1$1.copy(this.matrixWorld).invert();\n\n\t\t\tif (object.parent !== null) {\n\t\t\t\tobject.parent.updateWorldMatrix(true, false);\n\n\t\t\t\t_m1$1.multiply(object.parent.matrixWorld);\n\t\t\t}\n\n\t\t\tobject.applyMatrix4(_m1$1);\n\t\t\tthis.add(object);\n\t\t\tobject.updateWorldMatrix(false, true);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetObjectById(id) {\n\t\t\treturn this.getObjectByProperty('id', id);\n\t\t}\n\n\t\tgetObjectByName(name) {\n\t\t\treturn this.getObjectByProperty('name', name);\n\t\t}\n\n\t\tgetObjectByProperty(name, value) {\n\t\t\tif (this[name] === value) return this;\n\n\t\t\tfor (let i = 0, l = this.children.length; i < l; i++) {\n\t\t\t\tconst child = this.children[i];\n\t\t\t\tconst object = child.getObjectByProperty(name, value);\n\n\t\t\t\tif (object !== undefined) {\n\t\t\t\t\treturn object;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tgetWorldPosition(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\treturn target.setFromMatrixPosition(this.matrixWorld);\n\t\t}\n\n\t\tgetWorldQuaternion(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position$3, target, _scale$2);\n\t\t\treturn target;\n\t\t}\n\n\t\tgetWorldScale(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position$3, _quaternion$2, target);\n\t\t\treturn target;\n\t\t}\n\n\t\tgetWorldDirection(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tconst e = this.matrixWorld.elements;\n\t\t\treturn target.set(e[8], e[9], e[10]).normalize();\n\t\t}\n\n\t\traycast() {}\n\n\t\ttraverse(callback) {\n\t\t\tcallback(this);\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverse(callback);\n\t\t\t}\n\t\t}\n\n\t\ttraverseVisible(callback) {\n\t\t\tif (this.visible === false) return;\n\t\t\tcallback(this);\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverseVisible(callback);\n\t\t\t}\n\t\t}\n\n\t\ttraverseAncestors(callback) {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent !== null) {\n\t\t\t\tcallback(parent);\n\t\t\t\tparent.traverseAncestors(callback);\n\t\t\t}\n\t\t}\n\n\t\tupdateMatrix() {\n\t\t\tthis.matrix.compose(this.position, this.quaternion, this.scale);\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.matrixWorldNeedsUpdate || force) {\n\t\t\t\tif (this.parent === null) {\n\t\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\t\t\tforce = true;\n\t\t\t} // update children\n\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].updateMatrixWorld(force);\n\t\t\t}\n\t\t}\n\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (updateParents === true && parent !== null) {\n\t\t\t\tparent.updateWorldMatrix(true, false);\n\t\t\t}\n\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.parent === null) {\n\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t} else {\n\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t} // update children\n\n\n\t\t\tif (updateChildren === true) {\n\t\t\t\tconst children = this.children;\n\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchildren[i].updateWorldMatrix(false, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\n\t\t\tconst output = {}; // meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\n\t\t\tif (isRootObject) {\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {},\n\t\t\t\t\tskeletons: {},\n\t\t\t\t\tanimations: {}\n\t\t\t\t};\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\t\t\t} // standard Object3D serialization\n\n\n\t\t\tconst object = {};\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\t\t\tif (this.name !== '') object.name = this.name;\n\t\t\tif (this.castShadow === true) object.castShadow = true;\n\t\t\tif (this.receiveShadow === true) object.receiveShadow = true;\n\t\t\tif (this.visible === false) object.visible = false;\n\t\t\tif (this.frustumCulled === false) object.frustumCulled = false;\n\t\t\tif (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\t\t\tif (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n\t\t\tif (this.isInstancedMesh) {\n\t\t\t\tobject.type = 'InstancedMesh';\n\t\t\t\tobject.count = this.count;\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\t\tif (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\n\t\t\t} //\n\n\n\t\t\tfunction serialize(library, element) {\n\t\t\t\tif (library[element.uuid] === undefined) {\n\t\t\t\t\tlibrary[element.uuid] = element.toJSON(meta);\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\t\t\t}\n\n\t\t\tif (this.isScene) {\n\t\t\t\tif (this.background) {\n\t\t\t\t\tif (this.background.isColor) {\n\t\t\t\t\t\tobject.background = this.background.toJSON();\n\t\t\t\t\t} else if (this.background.isTexture) {\n\t\t\t\t\t\tobject.background = this.background.toJSON(meta).uuid;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.environment && this.environment.isTexture) {\n\t\t\t\t\tobject.environment = this.environment.toJSON(meta).uuid;\n\t\t\t\t}\n\t\t\t} else if (this.isMesh || this.isLine || this.isPoints) {\n\t\t\t\tobject.geometry = serialize(meta.geometries, this.geometry);\n\t\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\t\tif (parameters !== undefined && parameters.shapes !== undefined) {\n\t\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\t\tif (Array.isArray(shapes)) {\n\t\t\t\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\t\t\t\tconst shape = shapes[i];\n\t\t\t\t\t\t\tserialize(meta.shapes, shape);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tserialize(meta.shapes, shapes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isSkinnedMesh) {\n\t\t\t\tobject.bindMode = this.bindMode;\n\t\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\t\tif (this.skeleton !== undefined) {\n\t\t\t\t\tserialize(meta.skeletons, this.skeleton);\n\t\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.material !== undefined) {\n\t\t\t\tif (Array.isArray(this.material)) {\n\t\t\t\t\tconst uuids = [];\n\n\t\t\t\t\tfor (let i = 0, l = this.material.length; i < l; i++) {\n\t\t\t\t\t\tuuids.push(serialize(meta.materials, this.material[i]));\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\t\t\t\t} else {\n\t\t\t\t\tobject.material = serialize(meta.materials, this.material);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.children.length > 0) {\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\t\t\tobject.children.push(this.children[i].toJSON(meta).object);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.animations.length > 0) {\n\t\t\t\tobject.animations = [];\n\n\t\t\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\t\t\tconst animation = this.animations[i];\n\t\t\t\t\tobject.animations.push(serialize(meta.animations, animation));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRootObject) {\n\t\t\t\tconst geometries = extractFromCache(meta.geometries);\n\t\t\t\tconst materials = extractFromCache(meta.materials);\n\t\t\t\tconst textures = extractFromCache(meta.textures);\n\t\t\t\tconst images = extractFromCache(meta.images);\n\t\t\t\tconst shapes = extractFromCache(meta.shapes);\n\t\t\t\tconst skeletons = extractFromCache(meta.skeletons);\n\t\t\t\tconst animations = extractFromCache(meta.animations);\n\t\t\t\tif (geometries.length > 0) output.geometries = geometries;\n\t\t\t\tif (materials.length > 0) output.materials = materials;\n\t\t\t\tif (textures.length > 0) output.textures = textures;\n\t\t\t\tif (images.length > 0) output.images = images;\n\t\t\t\tif (shapes.length > 0) output.shapes = shapes;\n\t\t\t\tif (skeletons.length > 0) output.skeletons = skeletons;\n\t\t\t\tif (animations.length > 0) output.animations = animations;\n\t\t\t}\n\n\t\t\toutput.object = object;\n\t\t\treturn output; // extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (const key in cache) {\n\t\t\t\t\tconst data = cache[key];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push(data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\n\t\tclone(recursive) {\n\t\t\treturn new this.constructor().copy(this, recursive);\n\t\t}\n\n\t\tcopy(source, recursive = true) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.up.copy(source.up);\n\t\t\tthis.position.copy(source.position);\n\t\t\tthis.rotation.order = source.rotation.order;\n\t\t\tthis.quaternion.copy(source.quaternion);\n\t\t\tthis.scale.copy(source.scale);\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.matrixWorld.copy(source.matrixWorld);\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\n\t\t\tif (recursive === true) {\n\t\t\t\tfor (let i = 0; i < source.children.length; i++) {\n\t\t\t\t\tconst child = source.children[i];\n\t\t\t\t\tthis.add(child.clone());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3(0, 1, 0);\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\tObject3D.prototype.isObject3D = true;\n\n\tconst _v0$1 = /*@__PURE__*/new Vector3();\n\n\tconst _v1$3 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v3$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vab = /*@__PURE__*/new Vector3();\n\n\tconst _vac = /*@__PURE__*/new Vector3();\n\n\tconst _vbc = /*@__PURE__*/new Vector3();\n\n\tconst _vap = /*@__PURE__*/new Vector3();\n\n\tconst _vbp = /*@__PURE__*/new Vector3();\n\n\tconst _vcp = /*@__PURE__*/new Vector3();\n\n\tclass Triangle {\n\t\tconstructor(a = new Vector3(), b = new Vector3(), c = new Vector3()) {\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t\tthis.c = c;\n\t\t}\n\n\t\tstatic getNormal(a, b, c, target) {\n\t\t\ttarget.subVectors(c, b);\n\n\t\t\t_v0$1.subVectors(a, b);\n\n\t\t\ttarget.cross(_v0$1);\n\t\t\tconst targetLengthSq = target.lengthSq();\n\n\t\t\tif (targetLengthSq > 0) {\n\t\t\t\treturn target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n\t\t\t}\n\n\t\t\treturn target.set(0, 0, 0);\n\t\t} // static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\n\t\tstatic getBarycoord(point, a, b, c, target) {\n\t\t\t_v0$1.subVectors(c, a);\n\n\t\t\t_v1$3.subVectors(b, a);\n\n\t\t\t_v2$2.subVectors(point, a);\n\n\t\t\tconst dot00 = _v0$1.dot(_v0$1);\n\n\t\t\tconst dot01 = _v0$1.dot(_v1$3);\n\n\t\t\tconst dot02 = _v0$1.dot(_v2$2);\n\n\t\t\tconst dot11 = _v1$3.dot(_v1$3);\n\n\t\t\tconst dot12 = _v1$3.dot(_v2$2);\n\n\t\t\tconst denom = dot00 * dot11 - dot01 * dot01; // collinear or singular triangle\n\n\t\t\tif (denom === 0) {\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set(-2, -1, -1);\n\t\t\t}\n\n\t\t\tconst invDenom = 1 / denom;\n\t\t\tconst u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n\t\t\tconst v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n\t\t\treturn target.set(1 - u - v, v, u);\n\t\t}\n\n\t\tstatic containsPoint(point, a, b, c) {\n\t\t\tthis.getBarycoord(point, a, b, c, _v3$1);\n\t\t\treturn _v3$1.x >= 0 && _v3$1.y >= 0 && _v3$1.x + _v3$1.y <= 1;\n\t\t}\n\n\t\tstatic getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n\t\t\tthis.getBarycoord(point, p1, p2, p3, _v3$1);\n\t\t\ttarget.set(0, 0);\n\t\t\ttarget.addScaledVector(uv1, _v3$1.x);\n\t\t\ttarget.addScaledVector(uv2, _v3$1.y);\n\t\t\ttarget.addScaledVector(uv3, _v3$1.z);\n\t\t\treturn target;\n\t\t}\n\n\t\tstatic isFrontFacing(a, b, c, direction) {\n\t\t\t_v0$1.subVectors(c, b);\n\n\t\t\t_v1$3.subVectors(a, b); // strictly front facing\n\n\n\t\t\treturn _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\n\t\t}\n\n\t\tset(a, b, c) {\n\t\t\tthis.a.copy(a);\n\t\t\tthis.b.copy(b);\n\t\t\tthis.c.copy(c);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPointsAndIndices(points, i0, i1, i2) {\n\t\t\tthis.a.copy(points[i0]);\n\t\t\tthis.b.copy(points[i1]);\n\t\t\tthis.c.copy(points[i2]);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(triangle) {\n\t\t\tthis.a.copy(triangle.a);\n\t\t\tthis.b.copy(triangle.b);\n\t\t\tthis.c.copy(triangle.c);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetArea() {\n\t\t\t_v0$1.subVectors(this.c, this.b);\n\n\t\t\t_v1$3.subVectors(this.a, this.b);\n\n\t\t\treturn _v0$1.cross(_v1$3).length() * 0.5;\n\t\t}\n\n\t\tgetMidpoint(target) {\n\t\t\treturn target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n\t\t}\n\n\t\tgetNormal(target) {\n\t\t\treturn Triangle.getNormal(this.a, this.b, this.c, target);\n\t\t}\n\n\t\tgetPlane(target) {\n\t\t\treturn target.setFromCoplanarPoints(this.a, this.b, this.c);\n\t\t}\n\n\t\tgetBarycoord(point, target) {\n\t\t\treturn Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n\t\t}\n\n\t\tgetUV(point, uv1, uv2, uv3, target) {\n\t\t\treturn Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn Triangle.containsPoint(point, this.a, this.b, this.c);\n\t\t}\n\n\t\tisFrontFacing(direction) {\n\t\t\treturn Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsTriangle(this);\n\t\t}\n\n\t\tclosestPointToPoint(p, target) {\n\t\t\tconst a = this.a,\n\t\t\t\t\t\tb = this.b,\n\t\t\t\t\t\tc = this.c;\n\t\t\tlet v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t_vab.subVectors(b, a);\n\n\t\t\t_vac.subVectors(c, a);\n\n\t\t\t_vap.subVectors(p, a);\n\n\t\t\tconst d1 = _vab.dot(_vap);\n\n\t\t\tconst d2 = _vac.dot(_vap);\n\n\t\t\tif (d1 <= 0 && d2 <= 0) {\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy(a);\n\t\t\t}\n\n\t\t\t_vbp.subVectors(p, b);\n\n\t\t\tconst d3 = _vab.dot(_vbp);\n\n\t\t\tconst d4 = _vac.dot(_vbp);\n\n\t\t\tif (d3 >= 0 && d4 <= d3) {\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy(b);\n\t\t\t}\n\n\t\t\tconst vc = d1 * d4 - d3 * d2;\n\n\t\t\tif (vc <= 0 && d1 >= 0 && d3 <= 0) {\n\t\t\t\tv = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vab, v);\n\t\t\t}\n\n\t\t\t_vcp.subVectors(p, c);\n\n\t\t\tconst d5 = _vab.dot(_vcp);\n\n\t\t\tconst d6 = _vac.dot(_vcp);\n\n\t\t\tif (d6 >= 0 && d5 <= d6) {\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy(c);\n\t\t\t}\n\n\t\t\tconst vb = d5 * d2 - d1 * d6;\n\n\t\t\tif (vb <= 0 && d2 >= 0 && d6 <= 0) {\n\t\t\t\tw = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vac, w);\n\t\t\t}\n\n\t\t\tconst va = d3 * d6 - d5 * d4;\n\n\t\t\tif (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n\t\t\t\t_vbc.subVectors(c, b);\n\n\t\t\t\tw = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n\t\t\t\treturn target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n\t\t\t} // face region\n\n\n\t\t\tconst denom = 1 / (va + vb + vc); // u = va * denom\n\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n\t\t}\n\n\t\tequals(triangle) {\n\t\t\treturn triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n\t\t}\n\n\t}\n\n\tlet materialId = 0;\n\n\tclass Material extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: materialId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Material';\n\t\t\tthis.fog = true;\n\t\t\tthis.blending = NormalBlending;\n\t\t\tthis.side = FrontSide;\n\t\t\tthis.vertexColors = false;\n\t\t\tthis.opacity = 1;\n\t\t\tthis.transparent = false;\n\t\t\tthis.blendSrc = SrcAlphaFactor;\n\t\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\t\tthis.blendEquation = AddEquation;\n\t\t\tthis.blendSrcAlpha = null;\n\t\t\tthis.blendDstAlpha = null;\n\t\t\tthis.blendEquationAlpha = null;\n\t\t\tthis.depthFunc = LessEqualDepth;\n\t\t\tthis.depthTest = true;\n\t\t\tthis.depthWrite = true;\n\t\t\tthis.stencilWriteMask = 0xff;\n\t\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\t\tthis.stencilRef = 0;\n\t\t\tthis.stencilFuncMask = 0xff;\n\t\t\tthis.stencilFail = KeepStencilOp;\n\t\t\tthis.stencilZFail = KeepStencilOp;\n\t\t\tthis.stencilZPass = KeepStencilOp;\n\t\t\tthis.stencilWrite = false;\n\t\t\tthis.clippingPlanes = null;\n\t\t\tthis.clipIntersection = false;\n\t\t\tthis.clipShadows = false;\n\t\t\tthis.shadowSide = null;\n\t\t\tthis.colorWrite = true;\n\t\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\t\tthis.polygonOffset = false;\n\t\t\tthis.polygonOffsetFactor = 0;\n\t\t\tthis.polygonOffsetUnits = 0;\n\t\t\tthis.dithering = false;\n\t\t\tthis.alphaTest = 0;\n\t\t\tthis.alphaToCoverage = false;\n\t\t\tthis.premultipliedAlpha = false;\n\t\t\tthis.visible = true;\n\t\t\tthis.toneMapped = true;\n\t\t\tthis.userData = {};\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tonBuild()\n\t\t/* shaderobject, renderer */\n\t\t{}\n\n\t\tonBeforeCompile()\n\t\t/* shaderobject, renderer */\n\t\t{}\n\n\t\tcustomProgramCacheKey() {\n\t\t\treturn this.onBeforeCompile.toString();\n\t\t}\n\n\t\tsetValues(values) {\n\t\t\tif (values === undefined) return;\n\n\t\t\tfor (const key in values) {\n\t\t\t\tconst newValue = values[key];\n\n\t\t\t\tif (newValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\n\t\t\t\t\tcontinue;\n\t\t\t\t} // for backward compatability if shading is set in the constructor\n\n\n\t\t\t\tif (key === 'shading') {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\t\tthis.flatShading = newValue === FlatShading ? true : false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst currentValue = this[key];\n\n\t\t\t\tif (currentValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (currentValue && currentValue.isColor) {\n\t\t\t\t\tcurrentValue.set(newValue);\n\t\t\t\t} else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n\t\t\t\t\tcurrentValue.copy(newValue);\n\t\t\t\t} else {\n\t\t\t\t\tthis[key] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst isRoot = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (isRoot) {\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard Material serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (this.color && this.color.isColor) data.color = this.color.getHex();\n\t\t\tif (this.roughness !== undefined) data.roughness = this.roughness;\n\t\t\tif (this.metalness !== undefined) data.metalness = this.metalness;\n\t\t\tif (this.sheen && this.sheen.isColor) data.sheen = this.sheen.getHex();\n\t\t\tif (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n\t\t\tif (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n\t\t\tif (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n\t\t\tif (this.shininess !== undefined) data.shininess = this.shininess;\n\t\t\tif (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n\t\t\tif (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\t\tif (this.clearcoatMap && this.clearcoatMap.isTexture) {\n\t\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n\t\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n\t\t\tif (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n\t\t\tif (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n\n\t\t\tif (this.lightMap && this.lightMap.isTexture) {\n\t\t\t\tdata.lightMap = this.lightMap.toJSON(meta).uuid;\n\t\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.aoMap && this.aoMap.isTexture) {\n\t\t\t\tdata.aoMap = this.aoMap.toJSON(meta).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.bumpMap && this.bumpMap.isTexture) {\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON(meta).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\t\t\t}\n\n\t\t\tif (this.normalMap && this.normalMap.isTexture) {\n\t\t\t\tdata.normalMap = this.normalMap.toJSON(meta).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.displacementMap && this.displacementMap.isTexture) {\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON(meta).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\t\t\t}\n\n\t\t\tif (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n\t\t\tif (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n\t\t\tif (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n\t\t\tif (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n\t\t\tif (this.envMap && this.envMap.isTexture) {\n\t\t\t\tdata.envMap = this.envMap.toJSON(meta).uuid;\n\t\t\t\tif (this.combine !== undefined) data.combine = this.combine;\n\t\t\t}\n\n\t\t\tif (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n\t\t\tif (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\n\t\t\tif (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\n\n\t\t\tif (this.gradientMap && this.gradientMap.isTexture) {\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.transmission !== undefined) data.transmission = this.transmission;\n\t\t\tif (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\n\t\t\tif (this.thickness !== undefined) data.thickness = this.thickness;\n\t\t\tif (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\n\t\t\tif (this.attenuationDistance !== undefined) data.attenuationDistance = this.attenuationDistance;\n\t\t\tif (this.attenuationColor !== undefined) data.attenuationColor = this.attenuationColor.getHex();\n\t\t\tif (this.size !== undefined) data.size = this.size;\n\t\t\tif (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n\t\t\tif (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n\t\t\tif (this.blending !== NormalBlending) data.blending = this.blending;\n\t\t\tif (this.side !== FrontSide) data.side = this.side;\n\t\t\tif (this.vertexColors) data.vertexColors = true;\n\t\t\tif (this.opacity < 1) data.opacity = this.opacity;\n\t\t\tif (this.transparent === true) data.transparent = this.transparent;\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\t\t\tdata.colorWrite = this.colorWrite;\n\t\t\tdata.stencilWrite = this.stencilWrite;\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\t\tdata.stencilFunc = this.stencilFunc;\n\t\t\tdata.stencilRef = this.stencilRef;\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\t\tdata.stencilFail = this.stencilFail;\n\t\t\tdata.stencilZFail = this.stencilZFail;\n\t\t\tdata.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n\t\t\tif (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\n\t\t\tif (this.polygonOffset === true) data.polygonOffset = true;\n\t\t\tif (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\t\tif (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\t\t\tif (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\n\t\t\tif (this.dashSize !== undefined) data.dashSize = this.dashSize;\n\t\t\tif (this.gapSize !== undefined) data.gapSize = this.gapSize;\n\t\t\tif (this.scale !== undefined) data.scale = this.scale;\n\t\t\tif (this.dithering === true) data.dithering = true;\n\t\t\tif (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n\t\t\tif (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\n\t\t\tif (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif (this.wireframe === true) data.wireframe = this.wireframe;\n\t\t\tif (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n\t\t\tif (this.morphTargets === true) data.morphTargets = true;\n\t\t\tif (this.morphNormals === true) data.morphNormals = true;\n\t\t\tif (this.flatShading === true) data.flatShading = this.flatShading;\n\t\t\tif (this.visible === false) data.visible = false;\n\t\t\tif (this.toneMapped === false) data.toneMapped = false;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (const key in cache) {\n\t\t\t\t\tconst data = cache[key];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push(data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\n\t\t\tif (isRoot) {\n\t\t\t\tconst textures = extractFromCache(meta.textures);\n\t\t\t\tconst images = extractFromCache(meta.images);\n\t\t\t\tif (textures.length > 0) data.textures = textures;\n\t\t\t\tif (images.length > 0) data.images = images;\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.vertexColors = source.vertexColors;\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\t\tthis.stencilFunc = source.stencilFunc;\n\t\t\tthis.stencilRef = source.stencilRef;\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\t\tthis.stencilFail = source.stencilFail;\n\t\t\tthis.stencilZFail = source.stencilZFail;\n\t\t\tthis.stencilZPass = source.stencilZPass;\n\t\t\tthis.stencilWrite = source.stencilWrite;\n\t\t\tconst srcPlanes = source.clippingPlanes;\n\t\t\tlet dstPlanes = null;\n\n\t\t\tif (srcPlanes !== null) {\n\t\t\t\tconst n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array(n);\n\n\t\t\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\t\t\tdstPlanes[i] = srcPlanes[i].clone();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.shadowSide = source.shadowSide;\n\t\t\tthis.colorWrite = source.colorWrite;\n\t\t\tthis.precision = source.precision;\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\t\t\tthis.dithering = source.dithering;\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.toneMapped = source.toneMapped;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t}\n\n\tMaterial.prototype.isMaterial = true;\n\n\tconst _colorKeywords = {\n\t\t'aliceblue': 0xF0F8FF,\n\t\t'antiquewhite': 0xFAEBD7,\n\t\t'aqua': 0x00FFFF,\n\t\t'aquamarine': 0x7FFFD4,\n\t\t'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC,\n\t\t'bisque': 0xFFE4C4,\n\t\t'black': 0x000000,\n\t\t'blanchedalmond': 0xFFEBCD,\n\t\t'blue': 0x0000FF,\n\t\t'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A,\n\t\t'burlywood': 0xDEB887,\n\t\t'cadetblue': 0x5F9EA0,\n\t\t'chartreuse': 0x7FFF00,\n\t\t'chocolate': 0xD2691E,\n\t\t'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED,\n\t\t'cornsilk': 0xFFF8DC,\n\t\t'crimson': 0xDC143C,\n\t\t'cyan': 0x00FFFF,\n\t\t'darkblue': 0x00008B,\n\t\t'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B,\n\t\t'darkgray': 0xA9A9A9,\n\t\t'darkgreen': 0x006400,\n\t\t'darkgrey': 0xA9A9A9,\n\t\t'darkkhaki': 0xBDB76B,\n\t\t'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F,\n\t\t'darkorange': 0xFF8C00,\n\t\t'darkorchid': 0x9932CC,\n\t\t'darkred': 0x8B0000,\n\t\t'darksalmon': 0xE9967A,\n\t\t'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B,\n\t\t'darkslategray': 0x2F4F4F,\n\t\t'darkslategrey': 0x2F4F4F,\n\t\t'darkturquoise': 0x00CED1,\n\t\t'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493,\n\t\t'deepskyblue': 0x00BFFF,\n\t\t'dimgray': 0x696969,\n\t\t'dimgrey': 0x696969,\n\t\t'dodgerblue': 0x1E90FF,\n\t\t'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0,\n\t\t'forestgreen': 0x228B22,\n\t\t'fuchsia': 0xFF00FF,\n\t\t'gainsboro': 0xDCDCDC,\n\t\t'ghostwhite': 0xF8F8FF,\n\t\t'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520,\n\t\t'gray': 0x808080,\n\t\t'green': 0x008000,\n\t\t'greenyellow': 0xADFF2F,\n\t\t'grey': 0x808080,\n\t\t'honeydew': 0xF0FFF0,\n\t\t'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C,\n\t\t'indigo': 0x4B0082,\n\t\t'ivory': 0xFFFFF0,\n\t\t'khaki': 0xF0E68C,\n\t\t'lavender': 0xE6E6FA,\n\t\t'lavenderblush': 0xFFF0F5,\n\t\t'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD,\n\t\t'lightblue': 0xADD8E6,\n\t\t'lightcoral': 0xF08080,\n\t\t'lightcyan': 0xE0FFFF,\n\t\t'lightgoldenrodyellow': 0xFAFAD2,\n\t\t'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90,\n\t\t'lightgrey': 0xD3D3D3,\n\t\t'lightpink': 0xFFB6C1,\n\t\t'lightsalmon': 0xFFA07A,\n\t\t'lightseagreen': 0x20B2AA,\n\t\t'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899,\n\t\t'lightslategrey': 0x778899,\n\t\t'lightsteelblue': 0xB0C4DE,\n\t\t'lightyellow': 0xFFFFE0,\n\t\t'lime': 0x00FF00,\n\t\t'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6,\n\t\t'magenta': 0xFF00FF,\n\t\t'maroon': 0x800000,\n\t\t'mediumaquamarine': 0x66CDAA,\n\t\t'mediumblue': 0x0000CD,\n\t\t'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB,\n\t\t'mediumseagreen': 0x3CB371,\n\t\t'mediumslateblue': 0x7B68EE,\n\t\t'mediumspringgreen': 0x00FA9A,\n\t\t'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585,\n\t\t'midnightblue': 0x191970,\n\t\t'mintcream': 0xF5FFFA,\n\t\t'mistyrose': 0xFFE4E1,\n\t\t'moccasin': 0xFFE4B5,\n\t\t'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080,\n\t\t'oldlace': 0xFDF5E6,\n\t\t'olive': 0x808000,\n\t\t'olivedrab': 0x6B8E23,\n\t\t'orange': 0xFFA500,\n\t\t'orangered': 0xFF4500,\n\t\t'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA,\n\t\t'palegreen': 0x98FB98,\n\t\t'paleturquoise': 0xAFEEEE,\n\t\t'palevioletred': 0xDB7093,\n\t\t'papayawhip': 0xFFEFD5,\n\t\t'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F,\n\t\t'pink': 0xFFC0CB,\n\t\t'plum': 0xDDA0DD,\n\t\t'powderblue': 0xB0E0E6,\n\t\t'purple': 0x800080,\n\t\t'rebeccapurple': 0x663399,\n\t\t'red': 0xFF0000,\n\t\t'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1,\n\t\t'saddlebrown': 0x8B4513,\n\t\t'salmon': 0xFA8072,\n\t\t'sandybrown': 0xF4A460,\n\t\t'seagreen': 0x2E8B57,\n\t\t'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D,\n\t\t'silver': 0xC0C0C0,\n\t\t'skyblue': 0x87CEEB,\n\t\t'slateblue': 0x6A5ACD,\n\t\t'slategray': 0x708090,\n\t\t'slategrey': 0x708090,\n\t\t'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F,\n\t\t'steelblue': 0x4682B4,\n\t\t'tan': 0xD2B48C,\n\t\t'teal': 0x008080,\n\t\t'thistle': 0xD8BFD8,\n\t\t'tomato': 0xFF6347,\n\t\t'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE,\n\t\t'wheat': 0xF5DEB3,\n\t\t'white': 0xFFFFFF,\n\t\t'whitesmoke': 0xF5F5F5,\n\t\t'yellow': 0xFFFF00,\n\t\t'yellowgreen': 0x9ACD32\n\t};\n\tconst _hslA = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\tconst _hslB = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\n\tfunction hue2rgb(p, q, t) {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n\t\treturn p;\n\t}\n\n\tfunction SRGBToLinear(c) {\n\t\treturn c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n\t}\n\n\tfunction LinearToSRGB(c) {\n\t\treturn c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n\t}\n\n\tclass Color {\n\t\tconstructor(r, g, b) {\n\t\t\tif (g === undefined && b === undefined) {\n\t\t\t\t// r is THREE.Color, hex or string\n\t\t\t\treturn this.set(r);\n\t\t\t}\n\n\t\t\treturn this.setRGB(r, g, b);\n\t\t}\n\n\t\tset(value) {\n\t\t\tif (value && value.isColor) {\n\t\t\t\tthis.copy(value);\n\t\t\t} else if (typeof value === 'number') {\n\t\t\t\tthis.setHex(value);\n\t\t\t} else if (typeof value === 'string') {\n\t\t\t\tthis.setStyle(value);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetHex(hex) {\n\t\t\thex = Math.floor(hex);\n\t\t\tthis.r = (hex >> 16 & 255) / 255;\n\t\t\tthis.g = (hex >> 8 & 255) / 255;\n\t\t\tthis.b = (hex & 255) / 255;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRGB(r, g, b) {\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetHSL(h, s, l) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = euclideanModulo(h, 1);\n\t\t\ts = clamp(s, 0, 1);\n\t\t\tl = clamp(l, 0, 1);\n\n\t\t\tif (s === 0) {\n\t\t\t\tthis.r = this.g = this.b = l;\n\t\t\t} else {\n\t\t\t\tconst p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\t\tconst q = 2 * l - p;\n\t\t\t\tthis.r = hue2rgb(q, p, h + 1 / 3);\n\t\t\t\tthis.g = hue2rgb(q, p, h);\n\t\t\t\tthis.b = hue2rgb(q, p, h - 1 / 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetStyle(style) {\n\t\t\tfunction handleAlpha(string) {\n\t\t\t\tif (string === undefined) return;\n\n\t\t\t\tif (parseFloat(string) < 1) {\n\t\t\t\t\tconsole.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet m;\n\n\t\t\tif (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n\t\t\t\t// rgb / hsl\n\t\t\t\tlet color;\n\t\t\t\tconst name = m[1];\n\t\t\t\tconst components = m[2];\n\n\t\t\t\tswitch (name) {\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(255, parseInt(color[1], 10)) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min(255, parseInt(color[2], 10)) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min(255, parseInt(color[3], 10)) / 255;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(100, parseInt(color[1], 10)) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min(100, parseInt(color[2], 10)) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min(100, parseInt(color[3], 10)) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\t\t\t\t\t\tif (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tconst h = parseFloat(color[1]) / 360;\n\t\t\t\t\t\t\tconst s = parseInt(color[2], 10) / 100;\n\t\t\t\t\t\t\tconst l = parseInt(color[3], 10) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this.setHSL(h, s, l);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n\t\t\t\t// hex color\n\t\t\t\tconst hex = m[1];\n\t\t\t\tconst size = hex.length;\n\n\t\t\t\tif (size === 3) {\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t} else if (size === 6) {\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (style && style.length > 0) {\n\t\t\t\treturn this.setColorName(style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetColorName(style) {\n\t\t\t// color keywords\n\t\t\tconst hex = _colorKeywords[style.toLowerCase()];\n\n\t\t\tif (hex !== undefined) {\n\t\t\t\t// red\n\t\t\t\tthis.setHex(hex);\n\t\t\t} else {\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn('THREE.Color: Unknown color ' + style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.r, this.g, this.b);\n\t\t}\n\n\t\tcopy(color) {\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyGammaToLinear(color, gammaFactor = 2.0) {\n\t\t\tthis.r = Math.pow(color.r, gammaFactor);\n\t\t\tthis.g = Math.pow(color.g, gammaFactor);\n\t\t\tthis.b = Math.pow(color.b, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyLinearToGamma(color, gammaFactor = 2.0) {\n\t\t\tconst safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n\t\t\tthis.r = Math.pow(color.r, safeInverse);\n\t\t\tthis.g = Math.pow(color.g, safeInverse);\n\t\t\tthis.b = Math.pow(color.b, safeInverse);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertGammaToLinear(gammaFactor) {\n\t\t\tthis.copyGammaToLinear(this, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertLinearToGamma(gammaFactor) {\n\t\t\tthis.copyLinearToGamma(this, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopySRGBToLinear(color) {\n\t\t\tthis.r = SRGBToLinear(color.r);\n\t\t\tthis.g = SRGBToLinear(color.g);\n\t\t\tthis.b = SRGBToLinear(color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyLinearToSRGB(color) {\n\t\t\tthis.r = LinearToSRGB(color.r);\n\t\t\tthis.g = LinearToSRGB(color.g);\n\t\t\tthis.b = LinearToSRGB(color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertSRGBToLinear() {\n\t\t\tthis.copySRGBToLinear(this);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertLinearToSRGB() {\n\t\t\tthis.copyLinearToSRGB(this);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetHex() {\n\t\t\treturn this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n\t\t}\n\n\t\tgetHexString() {\n\t\t\treturn ('000000' + this.getHex().toString(16)).slice(-6);\n\t\t}\n\n\t\tgetHSL(target) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\tconst r = this.r,\n\t\t\t\t\t\tg = this.g,\n\t\t\t\t\t\tb = this.b;\n\t\t\tconst max = Math.max(r, g, b);\n\t\t\tconst min = Math.min(r, g, b);\n\t\t\tlet hue, saturation;\n\t\t\tconst lightness = (min + max) / 2.0;\n\n\t\t\tif (min === max) {\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\t\t\t} else {\n\t\t\t\tconst delta = max - min;\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n\t\t\t\tswitch (max) {\n\t\t\t\t\tcase r:\n\t\t\t\t\t\thue = (g - b) / delta + (g < b ? 6 : 0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase g:\n\t\t\t\t\t\thue = (b - r) / delta + 2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase b:\n\t\t\t\t\t\thue = (r - g) / delta + 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\t\t\treturn target;\n\t\t}\n\n\t\tgetStyle() {\n\t\t\treturn 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n\t\t}\n\n\t\toffsetHSL(h, s, l) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\t_hslA.h += h;\n\t\t\t_hslA.s += s;\n\t\t\t_hslA.l += l;\n\t\t\tthis.setHSL(_hslA.h, _hslA.s, _hslA.l);\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(color) {\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\taddColors(color1, color2) {\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(color) {\n\t\t\tthis.r = Math.max(0, this.r - color.r);\n\t\t\tthis.g = Math.max(0, this.g - color.g);\n\t\t\tthis.b = Math.max(0, this.b - color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(color) {\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerp(color, alpha) {\n\t\t\tthis.r += (color.r - this.r) * alpha;\n\t\t\tthis.g += (color.g - this.g) * alpha;\n\t\t\tthis.b += (color.b - this.b) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpColors(color1, color2, alpha) {\n\t\t\tthis.r = color1.r + (color2.r - color1.r) * alpha;\n\t\t\tthis.g = color1.g + (color2.g - color1.g) * alpha;\n\t\t\tthis.b = color1.b + (color2.b - color1.b) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpHSL(color, alpha) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\tcolor.getHSL(_hslB);\n\t\t\tconst h = lerp(_hslA.h, _hslB.h, alpha);\n\t\t\tconst s = lerp(_hslA.s, _hslB.s, alpha);\n\t\t\tconst l = lerp(_hslA.l, _hslB.l, alpha);\n\t\t\tthis.setHSL(h, s, l);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(c) {\n\t\t\treturn c.r === this.r && c.g === this.g && c.b === this.b;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.r = array[offset];\n\t\t\tthis.g = array[offset + 1];\n\t\t\tthis.b = array[offset + 2];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.r;\n\t\t\tarray[offset + 1] = this.g;\n\t\t\tarray[offset + 2] = this.b;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index) {\n\t\t\tthis.r = attribute.getX(index);\n\t\t\tthis.g = attribute.getY(index);\n\t\t\tthis.b = attribute.getZ(index);\n\n\t\t\tif (attribute.normalized === true) {\n\t\t\t\t// assuming Uint8Array\n\t\t\t\tthis.r /= 255;\n\t\t\t\tthis.g /= 255;\n\t\t\t\tthis.b /= 255;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.getHex();\n\t\t}\n\n\t}\n\n\tColor.NAMES = _colorKeywords;\n\tColor.prototype.isColor = true;\n\tColor.prototype.r = 1;\n\tColor.prototype.g = 1;\n\tColor.prototype.b = 1;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\tdepthTest: <bool>,\n\t *\tdepthWrite: <bool>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>\n\t * }\n\t */\n\n\tclass MeshBasicMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshBasicMaterial';\n\t\t\tthis.color = new Color(0xffffff); // emissive\n\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tconst _vector$9 = /*@__PURE__*/new Vector3();\n\n\tconst _vector2$1 = /*@__PURE__*/new Vector2();\n\n\tclass BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tif (Array.isArray(array)) {\n\t\t\t\tthrow new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n\t\t\t}\n\n\t\t\tthis.name = '';\n\t\t\tthis.array = array;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\t\tthis.normalized = normalized === true;\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = {\n\t\t\t\toffset: 0,\n\t\t\t\tcount: -1\n\t\t\t};\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor (let i = 0, l = this.itemSize; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyArray(array) {\n\t\t\tthis.array.set(array);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyColorsArray(colors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = colors.length; i < l; i++) {\n\t\t\t\tlet color = colors[i];\n\n\t\t\t\tif (color === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n\t\t\t\t\tcolor = new Color();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = color.r;\n\t\t\t\tarray[offset++] = color.g;\n\t\t\t\tarray[offset++] = color.b;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector2sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector2();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector3sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector3();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector4sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector4();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t\tarray[offset++] = vector.w;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tif (this.itemSize === 2) {\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t\t_vector2$1.fromBufferAttribute(this, i);\n\n\t\t\t\t\t_vector2$1.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXY(i, _vector2$1.x, _vector2$1.y);\n\t\t\t\t}\n\t\t\t} else if (this.itemSize === 3) {\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t\t_vector$9.fromBufferAttribute(this, i);\n\n\t\t\t\t\t_vector$9.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.applyNormalMatrix(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.transformDirection(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(value, offset = 0) {\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetX(index) {\n\t\t\treturn this.array[index * this.itemSize];\n\t\t}\n\n\t\tsetX(index, x) {\n\t\t\tthis.array[index * this.itemSize] = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetY(index) {\n\t\t\treturn this.array[index * this.itemSize + 1];\n\t\t}\n\n\t\tsetY(index, y) {\n\t\t\tthis.array[index * this.itemSize + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetZ(index) {\n\t\t\treturn this.array[index * this.itemSize + 2];\n\t\t}\n\n\t\tsetZ(index, z) {\n\t\t\tthis.array[index * this.itemSize + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetW(index) {\n\t\t\treturn this.array[index * this.itemSize + 3];\n\t\t}\n\n\t\tsetW(index, w) {\n\t\t\tthis.array[index * this.itemSize + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXY(index, x, y) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZ(index, x, y, z) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZW(index, x, y, z, w) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\tthis.array[index + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tonUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.array, this.itemSize).copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call(this.array),\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (this.usage !== StaticDrawUsage) data.usage = this.usage;\n\t\t\tif (this.updateRange.offset !== 0 || this.updateRange.count !== -1) data.updateRange = this.updateRange;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tBufferAttribute.prototype.isBufferAttribute = true; //\n\n\tclass Int8BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int8Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint8BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint8Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint8ClampedArray(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Int16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Int32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Float16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\n\tclass Float32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Float64BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float64Array(array), itemSize, normalized);\n\t\t}\n\n\t} //\n\n\tfunction arrayMax(array) {\n\t\tif (array.length === 0) return -Infinity;\n\t\tlet max = array[0];\n\n\t\tfor (let i = 1, l = array.length; i < l; ++i) {\n\t\t\tif (array[i] > max) max = array[i];\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tconst TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\tUint8ClampedArray: Uint8ClampedArray,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\tfunction getTypedArray(type, buffer) {\n\t\treturn new TYPED_ARRAYS[type](buffer);\n\t}\n\n\tlet _id = 0;\n\n\tconst _m1 = /*@__PURE__*/new Matrix4();\n\n\tconst _obj = /*@__PURE__*/new Object3D();\n\n\tconst _offset = /*@__PURE__*/new Vector3();\n\n\tconst _box$1 = /*@__PURE__*/new Box3();\n\n\tconst _boxMorphTargets = /*@__PURE__*/new Box3();\n\n\tconst _vector$8 = /*@__PURE__*/new Vector3();\n\n\tclass BufferGeometry extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: _id++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'BufferGeometry';\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.morphTargetsRelative = false;\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\t\t\tthis.drawRange = {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: Infinity\n\t\t\t};\n\t\t\tthis.userData = {};\n\t\t}\n\n\t\tgetIndex() {\n\t\t\treturn this.index;\n\t\t}\n\n\t\tsetIndex(index) {\n\t\t\tif (Array.isArray(index)) {\n\t\t\t\tthis.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n\t\t\t} else {\n\t\t\t\tthis.index = index;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetAttribute(name) {\n\t\t\treturn this.attributes[name];\n\t\t}\n\n\t\tsetAttribute(name, attribute) {\n\t\t\tthis.attributes[name] = attribute;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeleteAttribute(name) {\n\t\t\tdelete this.attributes[name];\n\t\t\treturn this;\n\t\t}\n\n\t\thasAttribute(name) {\n\t\t\treturn this.attributes[name] !== undefined;\n\t\t}\n\n\t\taddGroup(start, count, materialIndex = 0) {\n\t\t\tthis.groups.push({\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex\n\t\t\t});\n\t\t}\n\n\t\tclearGroups() {\n\t\t\tthis.groups = [];\n\t\t}\n\n\t\tsetDrawRange(start, count) {\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tconst position = this.attributes.position;\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tposition.applyMatrix4(matrix);\n\t\t\t\tposition.needsUpdate = true;\n\t\t\t}\n\n\t\t\tconst normal = this.attributes.normal;\n\n\t\t\tif (normal !== undefined) {\n\t\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\t\t\t\tnormal.applyNormalMatrix(normalMatrix);\n\t\t\t\tnormal.needsUpdate = true;\n\t\t\t}\n\n\t\t\tconst tangent = this.attributes.tangent;\n\n\t\t\tif (tangent !== undefined) {\n\t\t\t\ttangent.transformDirection(matrix);\n\t\t\t\ttangent.needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (this.boundingBox !== null) {\n\t\t\t\tthis.computeBoundingBox();\n\t\t\t}\n\n\t\t\tif (this.boundingSphere !== null) {\n\t\t\t\tthis.computeBoundingSphere();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\t_m1.makeRotationFromQuaternion(q);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateX(angle) {\n\t\t\t// rotate geometry around world x-axis\n\t\t\t_m1.makeRotationX(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateY(angle) {\n\t\t\t// rotate geometry around world y-axis\n\t\t\t_m1.makeRotationY(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateZ(angle) {\n\t\t\t// rotate geometry around world z-axis\n\t\t\t_m1.makeRotationZ(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(x, y, z) {\n\t\t\t// translate geometry\n\t\t\t_m1.makeTranslation(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(x, y, z) {\n\t\t\t// scale geometry\n\t\t\t_m1.makeScale(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\tlookAt(vector) {\n\t\t\t_obj.lookAt(vector);\n\n\t\t\t_obj.updateMatrix();\n\n\t\t\tthis.applyMatrix4(_obj.matrix);\n\t\t\treturn this;\n\t\t}\n\n\t\tcenter() {\n\t\t\tthis.computeBoundingBox();\n\t\t\tthis.boundingBox.getCenter(_offset).negate();\n\t\t\tthis.translate(_offset.x, _offset.y, _offset.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tconst position = [];\n\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\n\t\t\t\tconst point = points[i];\n\t\t\t\tposition.push(point.x, point.y, point.z || 0);\n\t\t\t}\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(position, 3));\n\t\t\treturn this;\n\t\t}\n\n\t\tcomputeBoundingBox() {\n\t\t\tif (this.boundingBox === null) {\n\t\t\t\tthis.boundingBox = new Box3();\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingBox.set(new Vector3(-Infinity, -Infinity, -Infinity), new Vector3(+Infinity, +Infinity, +Infinity));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tthis.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_box$1.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.min, _box$1.min);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\n\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.max, _box$1.max);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.min);\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.boundingBox.makeEmpty();\n\t\t\t}\n\n\t\t\tif (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t}\n\t\t}\n\n\t\tcomputeBoundingSphere() {\n\t\t\tif (this.boundingSphere === null) {\n\t\t\t\tthis.boundingSphere = new Sphere();\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingSphere.set(new Vector3(), Infinity);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position) {\n\t\t\t\t// first, find the center of the bounding sphere\n\t\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t\t_box$1.setFromBufferAttribute(position); // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.min, _boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\n\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.max, _boxMorphTargets.max);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t_box$1.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\n\t\t\t\tlet maxRadiusSq = 0;\n\n\t\t\t\tfor (let i = 0, il = position.count; i < il; i++) {\n\t\t\t\t\t_vector$8.fromBufferAttribute(position, i);\n\n\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n\t\t\t\t} // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\t\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\t\tfor (let j = 0, jl = morphAttribute.count; j < jl; j++) {\n\t\t\t\t\t\t\t_vector$8.fromBufferAttribute(morphAttribute, j);\n\n\t\t\t\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute(position, j);\n\n\t\t\t\t\t\t\t\t_vector$8.add(_offset);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n\t\t\t\tif (isNaN(this.boundingSphere.radius)) {\n\t\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcomputeFaceNormals() {// backwards compatibility\n\t\t}\n\n\t\tcomputeTangents() {\n\t\t\tconst index = this.index;\n\t\t\tconst attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\n\t\t\t// (per vertex tangents)\n\n\t\t\tif (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst indices = index.array;\n\t\t\tconst positions = attributes.position.array;\n\t\t\tconst normals = attributes.normal.array;\n\t\t\tconst uvs = attributes.uv.array;\n\t\t\tconst nVertices = positions.length / 3;\n\n\t\t\tif (attributes.tangent === undefined) {\n\t\t\t\tthis.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * nVertices), 4));\n\t\t\t}\n\n\t\t\tconst tangents = attributes.tangent.array;\n\t\t\tconst tan1 = [],\n\t\t\t\t\t\ttan2 = [];\n\n\t\t\tfor (let i = 0; i < nVertices; i++) {\n\t\t\t\ttan1[i] = new Vector3();\n\t\t\t\ttan2[i] = new Vector3();\n\t\t\t}\n\n\t\t\tconst vA = new Vector3(),\n\t\t\t\t\t\tvB = new Vector3(),\n\t\t\t\t\t\tvC = new Vector3(),\n\t\t\t\t\t\tuvA = new Vector2(),\n\t\t\t\t\t\tuvB = new Vector2(),\n\t\t\t\t\t\tuvC = new Vector2(),\n\t\t\t\t\t\tsdir = new Vector3(),\n\t\t\t\t\t\ttdir = new Vector3();\n\n\t\t\tfunction handleTriangle(a, b, c) {\n\t\t\t\tvA.fromArray(positions, a * 3);\n\t\t\t\tvB.fromArray(positions, b * 3);\n\t\t\t\tvC.fromArray(positions, c * 3);\n\t\t\t\tuvA.fromArray(uvs, a * 2);\n\t\t\t\tuvB.fromArray(uvs, b * 2);\n\t\t\t\tuvC.fromArray(uvs, c * 2);\n\t\t\t\tvB.sub(vA);\n\t\t\t\tvC.sub(vA);\n\t\t\t\tuvB.sub(uvA);\n\t\t\t\tuvC.sub(uvA);\n\t\t\t\tconst r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\t\tif (!isFinite(r)) return;\n\t\t\t\tsdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\n\t\t\t\ttdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\n\t\t\t\ttan1[a].add(sdir);\n\t\t\t\ttan1[b].add(sdir);\n\t\t\t\ttan1[c].add(sdir);\n\t\t\t\ttan2[a].add(tdir);\n\t\t\t\ttan2[b].add(tdir);\n\t\t\t\ttan2[c].add(tdir);\n\t\t\t}\n\n\t\t\tlet groups = this.groups;\n\n\t\t\tif (groups.length === 0) {\n\t\t\t\tgroups = [{\n\t\t\t\t\tstart: 0,\n\t\t\t\t\tcount: indices.length\n\t\t\t\t}];\n\t\t\t}\n\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\n\t\t\t\t\thandleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst tmp = new Vector3(),\n\t\t\t\t\t\ttmp2 = new Vector3();\n\t\t\tconst n = new Vector3(),\n\t\t\t\t\t\tn2 = new Vector3();\n\n\t\t\tfunction handleVertex(v) {\n\t\t\t\tn.fromArray(normals, v * 3);\n\t\t\t\tn2.copy(n);\n\t\t\t\tconst t = tan1[v]; // Gram-Schmidt orthogonalize\n\n\t\t\t\ttmp.copy(t);\n\t\t\t\ttmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\n\n\t\t\t\ttmp2.crossVectors(n2, t);\n\t\t\t\tconst test = tmp2.dot(tan2[v]);\n\t\t\t\tconst w = test < 0.0 ? -1.0 : 1.0;\n\t\t\t\ttangents[v * 4] = tmp.x;\n\t\t\t\ttangents[v * 4 + 1] = tmp.y;\n\t\t\t\ttangents[v * 4 + 2] = tmp.z;\n\t\t\t\ttangents[v * 4 + 3] = w;\n\t\t\t}\n\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\n\t\t\t\t\thandleVertex(indices[j + 0]);\n\t\t\t\t\thandleVertex(indices[j + 1]);\n\t\t\t\t\thandleVertex(indices[j + 2]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcomputeVertexNormals() {\n\t\t\tconst index = this.index;\n\t\t\tconst positionAttribute = this.getAttribute('position');\n\n\t\t\tif (positionAttribute !== undefined) {\n\t\t\t\tlet normalAttribute = this.getAttribute('normal');\n\n\t\t\t\tif (normalAttribute === undefined) {\n\t\t\t\t\tnormalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\n\t\t\t\t\tthis.setAttribute('normal', normalAttribute);\n\t\t\t\t} else {\n\t\t\t\t\t// reset existing normals to zero\n\t\t\t\t\tfor (let i = 0, il = normalAttribute.count; i < il; i++) {\n\t\t\t\t\t\tnormalAttribute.setXYZ(i, 0, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst pA = new Vector3(),\n\t\t\t\t\t\t\tpB = new Vector3(),\n\t\t\t\t\t\t\tpC = new Vector3();\n\t\t\t\tconst nA = new Vector3(),\n\t\t\t\t\t\t\tnB = new Vector3(),\n\t\t\t\t\t\t\tnC = new Vector3();\n\t\t\t\tconst cb = new Vector3(),\n\t\t\t\t\t\t\tab = new Vector3(); // indexed elements\n\n\t\t\t\tif (index) {\n\t\t\t\t\tfor (let i = 0, il = index.count; i < il; i += 3) {\n\t\t\t\t\t\tconst vA = index.getX(i + 0);\n\t\t\t\t\t\tconst vB = index.getX(i + 1);\n\t\t\t\t\t\tconst vC = index.getX(i + 2);\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, vA);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, vB);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, vC);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnA.fromBufferAttribute(normalAttribute, vA);\n\t\t\t\t\t\tnB.fromBufferAttribute(normalAttribute, vB);\n\t\t\t\t\t\tnC.fromBufferAttribute(normalAttribute, vC);\n\t\t\t\t\t\tnA.add(cb);\n\t\t\t\t\t\tnB.add(cb);\n\t\t\t\t\t\tnC.add(cb);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\t\t\t\t\tfor (let i = 0, il = positionAttribute.count; i < il; i += 3) {\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, i + 0);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, i + 1);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, i + 2);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 0, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 1, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 2, cb.x, cb.y, cb.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\t\t\t\tnormalAttribute.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tmerge(geometry, offset) {\n\t\t\tif (!(geometry && geometry.isBufferGeometry)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (offset === undefined) {\n\t\t\t\toffset = 0;\n\t\t\t\tconsole.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n\t\t\t}\n\n\t\t\tconst attributes = this.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tif (geometry.attributes[key] === undefined) continue;\n\t\t\t\tconst attribute1 = attributes[key];\n\t\t\t\tconst attributeArray1 = attribute1.array;\n\t\t\t\tconst attribute2 = geometry.attributes[key];\n\t\t\t\tconst attributeArray2 = attribute2.array;\n\t\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\t\tconst length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\n\n\t\t\t\tfor (let i = 0, j = attributeOffset; i < length; i++, j++) {\n\t\t\t\t\tattributeArray1[j] = attributeArray2[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tnormalizeNormals() {\n\t\t\tconst normals = this.attributes.normal;\n\n\t\t\tfor (let i = 0, il = normals.count; i < il; i++) {\n\t\t\t\t_vector$8.fromBufferAttribute(normals, i);\n\n\t\t\t\t_vector$8.normalize();\n\n\t\t\t\tnormals.setXYZ(i, _vector$8.x, _vector$8.y, _vector$8.z);\n\t\t\t}\n\t\t}\n\n\t\ttoNonIndexed() {\n\t\t\tfunction convertBufferAttribute(attribute, indices) {\n\t\t\t\tconst array = attribute.array;\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst normalized = attribute.normalized;\n\t\t\t\tconst array2 = new array.constructor(indices.length * itemSize);\n\t\t\t\tlet index = 0,\n\t\t\t\t\t\tindex2 = 0;\n\n\t\t\t\tfor (let i = 0, l = indices.length; i < l; i++) {\n\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\tindex = indices[i] * attribute.data.stride + attribute.offset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindex = indices[i] * itemSize;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let j = 0; j < itemSize; j++) {\n\t\t\t\t\t\tarray2[index2++] = array[index++];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(array2, itemSize, normalized);\n\t\t\t} //\n\n\n\t\t\tif (this.index === null) {\n\t\t\t\tconsole.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst geometry2 = new BufferGeometry();\n\t\t\tconst indices = this.index.array;\n\t\t\tconst attributes = this.attributes; // attributes\n\n\t\t\tfor (const name in attributes) {\n\t\t\t\tconst attribute = attributes[name];\n\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\n\t\t\t\tgeometry2.setAttribute(name, newAttribute);\n\t\t\t} // morph attributes\n\n\n\t\t\tconst morphAttributes = this.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst morphArray = [];\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (let i = 0, il = morphAttribute.length; i < il; i++) {\n\t\t\t\t\tconst attribute = morphAttribute[i];\n\t\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\n\t\t\t\t\tmorphArray.push(newAttribute);\n\t\t\t\t}\n\n\t\t\t\tgeometry2.morphAttributes[name] = morphArray;\n\t\t\t}\n\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tgeometry2.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t}\n\n\t\t\treturn geometry2;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n\t\t\tif (this.parameters !== undefined) {\n\t\t\t\tconst parameters = this.parameters;\n\n\t\t\t\tfor (const key in parameters) {\n\t\t\t\t\tif (parameters[key] !== undefined) data[key] = parameters[key];\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\t\t\t} // for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\n\t\t\tdata.data = {\n\t\t\t\tattributes: {}\n\t\t\t};\n\t\t\tconst index = this.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call(index.array)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst attributes = this.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tdata.data.attributes[key] = attribute.toJSON(data.data);\n\t\t\t}\n\n\t\t\tconst morphAttributes = {};\n\t\t\tlet hasMorphAttributes = false;\n\n\t\t\tfor (const key in this.morphAttributes) {\n\t\t\t\tconst attributeArray = this.morphAttributes[key];\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\tconst attribute = attributeArray[i];\n\t\t\t\t\tarray.push(attribute.toJSON(data.data));\n\t\t\t\t}\n\n\t\t\t\tif (array.length > 0) {\n\t\t\t\t\tmorphAttributes[key] = array;\n\t\t\t\t\thasMorphAttributes = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasMorphAttributes) {\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\t\t\t}\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tif (groups.length > 0) {\n\t\t\t\tdata.data.groups = JSON.parse(JSON.stringify(groups));\n\t\t\t}\n\n\t\t\tconst boundingSphere = this.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tclone() {\n\t\t\t/*\n\t\t\t // Handle primitives\n\t\t\t\t const parameters = this.parameters;\n\t\t\t\t if ( parameters !== undefined ) {\n\t\t\t\t const values = [];\n\t\t\t\t for ( const key in parameters ) {\n\t\t\t\t values.push( parameters[ key ] );\n\t\t\t\t }\n\t\t\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\t\t\t\t }\n\t\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\t\t\treturn new BufferGeometry().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\t// reset\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null; // used for storing cloned, shared data\n\n\t\t\tconst data = {}; // name\n\n\t\t\tthis.name = source.name; // index\n\n\t\t\tconst index = source.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tthis.setIndex(index.clone(data));\n\t\t\t} // attributes\n\n\n\t\t\tconst attributes = source.attributes;\n\n\t\t\tfor (const name in attributes) {\n\t\t\t\tconst attribute = attributes[name];\n\t\t\t\tthis.setAttribute(name, attribute.clone(data));\n\t\t\t} // morph attributes\n\n\n\t\t\tconst morphAttributes = source.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst array = [];\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (let i = 0, l = morphAttribute.length; i < l; i++) {\n\t\t\t\t\tarray.push(morphAttribute[i].clone(data));\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[name] = array;\n\t\t\t}\n\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative; // groups\n\n\t\t\tconst groups = source.groups;\n\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tthis.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t} // bounding box\n\n\n\t\t\tconst boundingBox = source.boundingBox;\n\n\t\t\tif (boundingBox !== null) {\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\t\t\t} // bounding sphere\n\n\n\t\t\tconst boundingSphere = source.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\t\t\t} // draw range\n\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count; // user data\n\n\t\t\tthis.userData = source.userData;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tBufferGeometry.prototype.isBufferGeometry = true;\n\n\tconst _inverseMatrix$2 = /*@__PURE__*/new Matrix4();\n\n\tconst _ray$2 = /*@__PURE__*/new Ray();\n\n\tconst _sphere$3 = /*@__PURE__*/new Sphere();\n\n\tconst _vA$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vB$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vC$1 = /*@__PURE__*/new Vector3();\n\n\tconst _tempA = /*@__PURE__*/new Vector3();\n\n\tconst _tempB = /*@__PURE__*/new Vector3();\n\n\tconst _tempC = /*@__PURE__*/new Vector3();\n\n\tconst _morphA = /*@__PURE__*/new Vector3();\n\n\tconst _morphB = /*@__PURE__*/new Vector3();\n\n\tconst _morphC = /*@__PURE__*/new Vector3();\n\n\tconst _uvA$1 = /*@__PURE__*/new Vector2();\n\n\tconst _uvB$1 = /*@__PURE__*/new Vector2();\n\n\tconst _uvC$1 = /*@__PURE__*/new Vector2();\n\n\tconst _intersectionPoint = /*@__PURE__*/new Vector3();\n\n\tconst _intersectionPointWorld = /*@__PURE__*/new Vector3();\n\n\tclass Mesh extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new MeshBasicMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Mesh';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\n\t\t\tif (source.morphTargetInfluences !== undefined) {\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\t\t\t}\n\n\t\t\tif (source.morphTargetDictionary !== undefined) {\n\t\t\t\tthis.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n\t\t\t}\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst material = this.material;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tif (material === undefined) return; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$3.applyMatrix4(matrixWorld);\n\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$3) === false) return; //\n\n\t\t\t_inverseMatrix$2.copy(matrixWorld).invert();\n\n\t\t\t_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2); // Check boundingBox before continuing\n\n\n\t\t\tif (geometry.boundingBox !== null) {\n\t\t\t\tif (_ray$2.intersectsBox(geometry.boundingBox) === false) return;\n\t\t\t}\n\n\t\t\tlet intersection;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t\tconst uv = geometry.attributes.uv;\n\t\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\t\tconst groups = geometry.groups;\n\t\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\t// indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\n\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\n\t\t\t\t\t\t\tconst end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\n\t\t\t\t\t\t\t\tconst a = index.getX(j);\n\t\t\t\t\t\t\t\tconst b = index.getX(j + 1);\n\t\t\t\t\t\t\t\tconst c = index.getX(j + 2);\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\n\t\t\t\t\t\t\tconst a = index.getX(i);\n\t\t\t\t\t\t\tconst b = index.getX(i + 1);\n\t\t\t\t\t\t\tconst c = index.getX(i + 2);\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (position !== undefined) {\n\t\t\t\t\t// non-indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\n\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\n\t\t\t\t\t\t\tconst end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\n\t\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\t\tconst c = j + 2;\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\t\tconst end = Math.min(position.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\n\t\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\t\tconst c = i + 2;\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t}\n\n\tMesh.prototype.isMesh = true;\n\n\tfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n\t\tlet intersect;\n\n\t\tif (material.side === BackSide) {\n\t\t\tintersect = ray.intersectTriangle(pC, pB, pA, true, point);\n\t\t} else {\n\t\t\tintersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n\t\t}\n\n\t\tif (intersect === null) return null;\n\n\t\t_intersectionPointWorld.copy(point);\n\n\t\t_intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n\t\tif (distance < raycaster.near || distance > raycaster.far) return null;\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\t}\n\n\tfunction checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\n\t\t_vA$1.fromBufferAttribute(position, a);\n\n\t\t_vB$1.fromBufferAttribute(position, b);\n\n\t\t_vC$1.fromBufferAttribute(position, c);\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif (material.morphTargets && morphPosition && morphInfluences) {\n\t\t\t_morphA.set(0, 0, 0);\n\n\t\t\t_morphB.set(0, 0, 0);\n\n\t\t\t_morphC.set(0, 0, 0);\n\n\t\t\tfor (let i = 0, il = morphPosition.length; i < il; i++) {\n\t\t\t\tconst influence = morphInfluences[i];\n\t\t\t\tconst morphAttribute = morphPosition[i];\n\t\t\t\tif (influence === 0) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute(morphAttribute, a);\n\n\t\t\t\t_tempB.fromBufferAttribute(morphAttribute, b);\n\n\t\t\t\t_tempC.fromBufferAttribute(morphAttribute, c);\n\n\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t_morphA.addScaledVector(_tempA, influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB, influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC, influence);\n\t\t\t\t} else {\n\t\t\t\t\t_morphA.addScaledVector(_tempA.sub(_vA$1), influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB.sub(_vB$1), influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC.sub(_vC$1), influence);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_vA$1.add(_morphA);\n\n\t\t\t_vB$1.add(_morphB);\n\n\t\t\t_vC$1.add(_morphC);\n\t\t}\n\n\t\tif (object.isSkinnedMesh) {\n\t\t\tobject.boneTransform(a, _vA$1);\n\t\t\tobject.boneTransform(b, _vB$1);\n\t\t\tobject.boneTransform(c, _vC$1);\n\t\t}\n\n\t\tconst intersection = checkIntersection(object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint);\n\n\t\tif (intersection) {\n\t\t\tif (uv) {\n\t\t\t\t_uvA$1.fromBufferAttribute(uv, a);\n\n\t\t\t\t_uvB$1.fromBufferAttribute(uv, b);\n\n\t\t\t\t_uvC$1.fromBufferAttribute(uv, c);\n\n\t\t\t\tintersection.uv = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n\t\t\t}\n\n\t\t\tif (uv2) {\n\t\t\t\t_uvA$1.fromBufferAttribute(uv2, a);\n\n\t\t\t\t_uvB$1.fromBufferAttribute(uv2, b);\n\n\t\t\t\t_uvC$1.fromBufferAttribute(uv2, c);\n\n\t\t\t\tintersection.uv2 = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n\t\t\t}\n\n\t\t\tconst face = {\n\t\t\t\ta: a,\n\t\t\t\tb: b,\n\t\t\t\tc: c,\n\t\t\t\tnormal: new Vector3(),\n\t\t\t\tmaterialIndex: 0\n\t\t\t};\n\t\t\tTriangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);\n\t\t\tintersection.face = face;\n\t\t}\n\n\t\treturn intersection;\n\t}\n\n\tclass BoxGeometry extends BufferGeometry {\n\t\tconstructor(width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'BoxGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\t\t\tconst scope = this; // segments\n\n\t\t\twidthSegments = Math.floor(widthSegments);\n\t\t\theightSegments = Math.floor(heightSegments);\n\t\t\tdepthSegments = Math.floor(depthSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet numberOfVertices = 0;\n\t\t\tlet groupStart = 0; // build each side of the box geometry\n\n\t\t\tbuildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n\t\t\tbuildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n\t\t\tbuildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n\t\t\tbuildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n\t\t\t\tconst segmentWidth = width / gridX;\n\t\t\t\tconst segmentHeight = height / gridY;\n\t\t\t\tconst widthHalf = width / 2;\n\t\t\t\tconst heightHalf = height / 2;\n\t\t\t\tconst depthHalf = depth / 2;\n\t\t\t\tconst gridX1 = gridX + 1;\n\t\t\t\tconst gridY1 = gridY + 1;\n\t\t\t\tlet vertexCounter = 0;\n\t\t\t\tlet groupCount = 0;\n\t\t\t\tconst vector = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\n\t\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\t\tconst x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = x * udir;\n\t\t\t\t\t\tvector[v] = y * vdir;\n\t\t\t\t\t\tvector[w] = depthHalf; // now apply vector to vertex buffer\n\n\t\t\t\t\t\tvertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = 0;\n\t\t\t\t\t\tvector[v] = 0;\n\t\t\t\t\t\tvector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n\t\t\t\t\t\tnormals.push(vector.x, vector.y, vector.z); // uvs\n\n\t\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\t\tuvs.push(1 - iy / gridY); // counters\n\n\t\t\t\t\t\tvertexCounter += 1;\n\t\t\t\t\t}\n\t\t\t\t} // indices\n\t\t\t\t// 1. you need three indices to draw a single face\n\t\t\t\t// 2. a single segment consists of two faces\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\n\t\t\t\tfor (let iy = 0; iy < gridY; iy++) {\n\t\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\n\t\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * (iy + 1);\n\t\t\t\t\t\tconst c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n\t\t\t\t\t\tconst d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // increase counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount; // update total number of vertices\n\n\t\t\t\tnumberOfVertices += vertexCounter;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n\t\t}\n\n\t}\n\n\t/**\n\t * Uniform Utilities\n\t */\n\tfunction cloneUniforms(src) {\n\t\tconst dst = {};\n\n\t\tfor (const u in src) {\n\t\t\tdst[u] = {};\n\n\t\t\tfor (const p in src[u]) {\n\t\t\t\tconst property = src[u][p];\n\n\t\t\t\tif (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture || property.isQuaternion)) {\n\t\t\t\t\tdst[u][p] = property.clone();\n\t\t\t\t} else if (Array.isArray(property)) {\n\t\t\t\t\tdst[u][p] = property.slice();\n\t\t\t\t} else {\n\t\t\t\t\tdst[u][p] = property;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\tfunction mergeUniforms(uniforms) {\n\t\tconst merged = {};\n\n\t\tfor (let u = 0; u < uniforms.length; u++) {\n\t\t\tconst tmp = cloneUniforms(uniforms[u]);\n\n\t\t\tfor (const p in tmp) {\n\t\t\t\tmerged[p] = tmp[p];\n\t\t\t}\n\t\t}\n\n\t\treturn merged;\n\t} // Legacy\n\n\tconst UniformsUtils = {\n\t\tclone: cloneUniforms,\n\t\tmerge: mergeUniforms\n\t};\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\t/**\n\t * parameters = {\n\t *\tdefines: { \"label\" : \"value\" },\n\t *\tuniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *\tfragmentShader: <string>,\n\t *\tvertexShader: <string>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tlights: <bool>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tclass ShaderMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShaderMaterial';\n\t\t\tthis.defines = {};\n\t\t\tthis.uniforms = {};\n\t\t\tthis.vertexShader = default_vertex;\n\t\t\tthis.fragmentShader = default_fragment;\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false; // set to use scene fog\n\n\t\t\tthis.lights = false; // set to use scene lights\n\n\t\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\t\tthis.morphTargets = false; // set to use morph targets\n\n\t\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\t\tthis.extensions = {\n\t\t\t\tderivatives: false,\n\t\t\t\t// set to use derivatives\n\t\t\t\tfragDepth: false,\n\t\t\t\t// set to use fragment depth values\n\t\t\t\tdrawBuffers: false,\n\t\t\t\t// set to use draw buffers\n\t\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\n\t\t\t}; // When rendered geometry doesn't include these attributes but the material does,\n\t\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\n\t\t\tthis.defaultAttributeValues = {\n\t\t\t\t'color': [1, 1, 1],\n\t\t\t\t'uv': [0, 0],\n\t\t\t\t'uv2': [0, 0]\n\t\t\t};\n\t\t\tthis.index0AttributeName = undefined;\n\t\t\tthis.uniformsNeedUpdate = false;\n\t\t\tthis.glslVersion = null;\n\n\t\t\tif (parameters !== undefined) {\n\t\t\t\tif (parameters.attributes !== undefined) {\n\t\t\t\t\tconsole.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n\t\t\t\t}\n\n\t\t\t\tthis.setValues(parameters);\n\t\t\t}\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.fragmentShader = source.fragmentShader;\n\t\t\tthis.vertexShader = source.vertexShader;\n\t\t\tthis.uniforms = cloneUniforms(source.uniforms);\n\t\t\tthis.defines = Object.assign({}, source.defines);\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.lights = source.lights;\n\t\t\tthis.clipping = source.clipping;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.extensions = Object.assign({}, source.extensions);\n\t\t\tthis.glslVersion = source.glslVersion;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.glslVersion = this.glslVersion;\n\t\t\tdata.uniforms = {};\n\n\t\t\tfor (const name in this.uniforms) {\n\t\t\t\tconst uniform = this.uniforms[name];\n\t\t\t\tconst value = uniform.value;\n\n\t\t\t\tif (value && value.isTexture) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 't',\n\t\t\t\t\t\tvalue: value.toJSON(meta).uuid\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isColor) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'c',\n\t\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector2) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v2',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector3) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector4) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isMatrix3) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'm3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isMatrix4) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'm4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t}; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Object.keys(this.defines).length > 0) data.defines = this.defines;\n\t\t\tdata.vertexShader = this.vertexShader;\n\t\t\tdata.fragmentShader = this.fragmentShader;\n\t\t\tconst extensions = {};\n\n\t\t\tfor (const key in this.extensions) {\n\t\t\t\tif (this.extensions[key] === true) extensions[key] = true;\n\t\t\t}\n\n\t\t\tif (Object.keys(extensions).length > 0) data.extensions = extensions;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tclass Camera extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Camera';\n\t\t\tthis.matrixWorldInverse = new Matrix4();\n\t\t\tthis.projectionMatrix = new Matrix4();\n\t\t\tthis.projectionMatrixInverse = new Matrix4();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.matrixWorldInverse.copy(source.matrixWorldInverse);\n\t\t\tthis.projectionMatrix.copy(source.projectionMatrix);\n\t\t\tthis.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetWorldDirection(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tconst e = this.matrixWorld.elements;\n\t\t\treturn target.set(-e[8], -e[9], -e[10]).normalize();\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t}\n\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\n\t\t\tsuper.updateWorldMatrix(updateParents, updateChildren);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tCamera.prototype.isCamera = true;\n\n\tclass PerspectiveCamera extends Camera {\n\t\tconstructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PerspectiveCamera';\n\t\t\tthis.fov = fov;\n\t\t\tthis.zoom = 1;\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.focus = 10;\n\t\t\tthis.aspect = aspect;\n\t\t\tthis.view = null;\n\t\t\tthis.filmGauge = 35; // width of the film (default in millimeters)\n\n\t\t\tthis.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\t\t\treturn this;\n\t\t}\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\n\n\t\tsetFocalLength(focalLength) {\n\t\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\t\t\tthis.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\n\n\t\tgetFocalLength() {\n\t\t\tconst vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\t\t}\n\n\t\tgetEffectiveFOV() {\n\t\t\treturn RAD2DEG * 2 * Math.atan(Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom);\n\t\t}\n\n\t\tgetFilmWidth() {\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min(this.aspect, 1);\n\t\t}\n\n\t\tgetFilmHeight() {\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max(this.aspect, 1);\n\t\t}\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *\t +---+---+---+\n\t\t *\t | A | B | C |\n\t\t *\t +---+---+---+\n\t\t *\t | D | E | F |\n\t\t *\t +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *\t const w = 1920;\n\t\t *\t const h = 1080;\n\t\t *\t const fullWidth = w * 3;\n\t\t *\t const fullHeight = h * 2;\n\t\t *\n\t\t *\t --A--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *\t --B--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *\t --C--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *\t --D--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *\t --E--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *\t --F--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *\t Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\n\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tclearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\t\t\tconst near = this.near;\n\t\t\tlet top = near * Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom;\n\t\t\tlet height = 2 * top;\n\t\t\tlet width = this.aspect * height;\n\t\t\tlet left = -0.5 * width;\n\t\t\tconst view = this.view;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\t\t\t\tfullHeight = view.fullHeight;\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\t\t\t}\n\n\t\t\tconst skew = this.filmOffset;\n\t\t\tif (skew !== 0) left += near * skew / this.getFilmWidth();\n\t\t\tthis.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\t\t\tdata.object.aspect = this.aspect;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\n\tconst fov = 90,\n\t\t\t\taspect = 1;\n\n\tclass CubeCamera extends Object3D {\n\t\tconstructor(near, far, renderTarget) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubeCamera';\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget !== true) {\n\t\t\t\tconsole.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.renderTarget = renderTarget;\n\t\t\tconst cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPX.layers = this.layers;\n\t\t\tcameraPX.up.set(0, -1, 0);\n\t\t\tcameraPX.lookAt(new Vector3(1, 0, 0));\n\t\t\tthis.add(cameraPX);\n\t\t\tconst cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNX.layers = this.layers;\n\t\t\tcameraNX.up.set(0, -1, 0);\n\t\t\tcameraNX.lookAt(new Vector3(-1, 0, 0));\n\t\t\tthis.add(cameraNX);\n\t\t\tconst cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPY.layers = this.layers;\n\t\t\tcameraPY.up.set(0, 0, 1);\n\t\t\tcameraPY.lookAt(new Vector3(0, 1, 0));\n\t\t\tthis.add(cameraPY);\n\t\t\tconst cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNY.layers = this.layers;\n\t\t\tcameraNY.up.set(0, 0, -1);\n\t\t\tcameraNY.lookAt(new Vector3(0, -1, 0));\n\t\t\tthis.add(cameraNY);\n\t\t\tconst cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPZ.layers = this.layers;\n\t\t\tcameraPZ.up.set(0, -1, 0);\n\t\t\tcameraPZ.lookAt(new Vector3(0, 0, 1));\n\t\t\tthis.add(cameraPZ);\n\t\t\tconst cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNZ.layers = this.layers;\n\t\t\tcameraNZ.up.set(0, -1, 0);\n\t\t\tcameraNZ.lookAt(new Vector3(0, 0, -1));\n\t\t\tthis.add(cameraNZ);\n\t\t}\n\n\t\tupdate(renderer, scene) {\n\t\t\tif (this.parent === null) this.updateMatrixWorld();\n\t\t\tconst renderTarget = this.renderTarget;\n\t\t\tconst [cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ] = this.children;\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\trenderer.xr.enabled = false;\n\t\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\t\t\trenderer.setRenderTarget(renderTarget, 0);\n\t\t\trenderer.render(scene, cameraPX);\n\t\t\trenderer.setRenderTarget(renderTarget, 1);\n\t\t\trenderer.render(scene, cameraNX);\n\t\t\trenderer.setRenderTarget(renderTarget, 2);\n\t\t\trenderer.render(scene, cameraPY);\n\t\t\trenderer.setRenderTarget(renderTarget, 3);\n\t\t\trenderer.render(scene, cameraNY);\n\t\t\trenderer.setRenderTarget(renderTarget, 4);\n\t\t\trenderer.render(scene, cameraPZ);\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\t\t\trenderer.setRenderTarget(renderTarget, 5);\n\t\t\trenderer.render(scene, cameraNZ);\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\t\t}\n\n\t}\n\n\tclass CubeTexture extends Texture {\n\t\tconstructor(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n\t\t\timages = images !== undefined ? images : [];\n\t\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\t\tformat = format !== undefined ? format : RGBFormat;\n\t\t\tsuper(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding); // Why CubeTexture._needsFlipEnvMap is necessary:\n\t\t\t//\n\t\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\t\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t\t// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n\t\t\t// when using WebGLCubeRenderTarget.texture as a cube texture.\n\n\t\t\tthis._needsFlipEnvMap = true;\n\t\t\tthis.flipY = false;\n\t\t}\n\n\t\tget images() {\n\t\t\treturn this.image;\n\t\t}\n\n\t\tset images(value) {\n\t\t\tthis.image = value;\n\t\t}\n\n\t}\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\t\tconstructor(size, options, dummy) {\n\t\t\tif (Number.isInteger(options)) {\n\t\t\t\tconsole.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');\n\t\t\t\toptions = dummy;\n\t\t\t}\n\n\t\t\tsuper(size, size, options);\n\t\t\toptions = options || {};\n\t\t\tthis.texture = new CubeTexture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\t\t\tthis.texture._needsFlipEnvMap = false;\n\t\t}\n\n\t\tfromEquirectangularTexture(renderer, texture) {\n\t\t\tthis.texture.type = texture.type;\n\t\t\tthis.texture.format = RGBAFormat; // see #18859\n\n\t\t\tthis.texture.encoding = texture.encoding;\n\t\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\t\tthis.texture.minFilter = texture.minFilter;\n\t\t\tthis.texture.magFilter = texture.magFilter;\n\t\t\tconst shader = {\n\t\t\t\tuniforms: {\n\t\t\t\t\ttEquirect: {\n\t\t\t\t\t\tvalue: null\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tvertexShader:\n\t\t\t\t/* glsl */\n\t\t\t\t`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\tfragmentShader:\n\t\t\t\t/* glsl */\n\t\t\t\t`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t\t};\n\t\t\tconst geometry = new BoxGeometry(5, 5, 5);\n\t\t\tconst material = new ShaderMaterial({\n\t\t\t\tname: 'CubemapFromEquirect',\n\t\t\t\tuniforms: cloneUniforms(shader.uniforms),\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\t\tside: BackSide,\n\t\t\t\tblending: NoBlending\n\t\t\t});\n\t\t\tmaterial.uniforms.tEquirect.value = texture;\n\t\t\tconst mesh = new Mesh(geometry, material);\n\t\t\tconst currentMinFilter = texture.minFilter; // Avoid blurred poles\n\n\t\t\tif (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\n\t\t\tconst camera = new CubeCamera(1, 10, this);\n\t\t\tcamera.update(renderer, mesh);\n\t\t\ttexture.minFilter = currentMinFilter;\n\t\t\tmesh.geometry.dispose();\n\t\t\tmesh.material.dispose();\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(renderer, color, depth, stencil) {\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\trenderer.setRenderTarget(this, i);\n\t\t\t\trenderer.clear(color, depth, stencil);\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t}\n\n\t}\n\n\tWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\n\tconst _vector1 = /*@__PURE__*/new Vector3();\n\n\tconst _vector2 = /*@__PURE__*/new Vector3();\n\n\tconst _normalMatrix = /*@__PURE__*/new Matrix3();\n\n\tclass Plane {\n\t\tconstructor(normal = new Vector3(1, 0, 0), constant = 0) {\n\t\t\t// normal is assumed to be normalized\n\t\t\tthis.normal = normal;\n\t\t\tthis.constant = constant;\n\t\t}\n\n\t\tset(normal, constant) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = constant;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponents(x, y, z, w) {\n\t\t\tthis.normal.set(x, y, z);\n\t\t\tthis.constant = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromNormalAndCoplanarPoint(normal, point) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = -point.dot(this.normal);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCoplanarPoints(a, b, c) {\n\t\t\tconst normal = _vector1.subVectors(c, b).cross(_vector2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\n\t\t\tthis.setFromNormalAndCoplanarPoint(normal, a);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(plane) {\n\t\t\tthis.normal.copy(plane.normal);\n\t\t\tthis.constant = plane.constant;\n\t\t\treturn this;\n\t\t}\n\n\t\tnormalize() {\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\t\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar(inverseNormalLength);\n\t\t\tthis.constant *= inverseNormalLength;\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.constant *= -1;\n\t\t\tthis.normal.negate();\n\t\t\treturn this;\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn this.normal.dot(point) + this.constant;\n\t\t}\n\n\t\tdistanceToSphere(sphere) {\n\t\t\treturn this.distanceToPoint(sphere.center) - sphere.radius;\n\t\t}\n\n\t\tprojectPoint(point, target) {\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n\t\t}\n\n\t\tintersectLine(line, target) {\n\t\t\tconst direction = line.delta(_vector1);\n\t\t\tconst denominator = this.normal.dot(direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (this.distanceToPoint(line.start) === 0) {\n\t\t\t\t\treturn target.copy(line.start);\n\t\t\t\t} // Unsure if this is the correct method to handle this case.\n\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n\t\t\tif (t < 0 || t > 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn target.copy(direction).multiplyScalar(t).add(line.start);\n\t\t}\n\n\t\tintersectsLine(line) {\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\t\t\tconst startSign = this.distanceToPoint(line.start);\n\t\t\tconst endSign = this.distanceToPoint(line.end);\n\t\t\treturn startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsPlane(this);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\treturn sphere.intersectsPlane(this);\n\t\t}\n\n\t\tcoplanarPoint(target) {\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.constant);\n\t\t}\n\n\t\tapplyMatrix4(matrix, optionalNormalMatrix) {\n\t\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\n\n\t\t\tconst referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\n\t\t\tconst normal = this.normal.applyMatrix3(normalMatrix).normalize();\n\t\t\tthis.constant = -referencePoint.dot(normal);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.constant -= offset.dot(this.normal);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(plane) {\n\t\t\treturn plane.normal.equals(this.normal) && plane.constant === this.constant;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tPlane.prototype.isPlane = true;\n\n\tconst _sphere$2 = /*@__PURE__*/new Sphere();\n\n\tconst _vector$7 = /*@__PURE__*/new Vector3();\n\n\tclass Frustum {\n\t\tconstructor(p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane()) {\n\t\t\tthis.planes = [p0, p1, p2, p3, p4, p5];\n\t\t}\n\n\t\tset(p0, p1, p2, p3, p4, p5) {\n\t\t\tconst planes = this.planes;\n\t\t\tplanes[0].copy(p0);\n\t\t\tplanes[1].copy(p1);\n\t\t\tplanes[2].copy(p2);\n\t\t\tplanes[3].copy(p3);\n\t\t\tplanes[4].copy(p4);\n\t\t\tplanes[5].copy(p5);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(frustum) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tplanes[i].copy(frustum.planes[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromProjectionMatrix(m) {\n\t\t\tconst planes = this.planes;\n\t\t\tconst me = m.elements;\n\t\t\tconst me0 = me[0],\n\t\t\t\t\t\tme1 = me[1],\n\t\t\t\t\t\tme2 = me[2],\n\t\t\t\t\t\tme3 = me[3];\n\t\t\tconst me4 = me[4],\n\t\t\t\t\t\tme5 = me[5],\n\t\t\t\t\t\tme6 = me[6],\n\t\t\t\t\t\tme7 = me[7];\n\t\t\tconst me8 = me[8],\n\t\t\t\t\t\tme9 = me[9],\n\t\t\t\t\t\tme10 = me[10],\n\t\t\t\t\t\tme11 = me[11];\n\t\t\tconst me12 = me[12],\n\t\t\t\t\t\tme13 = me[13],\n\t\t\t\t\t\tme14 = me[14],\n\t\t\t\t\t\tme15 = me[15];\n\t\t\tplanes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n\t\t\tplanes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n\t\t\tplanes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n\t\t\tplanes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n\t\t\tplanes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n\t\t\tplanes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n\t\t\treturn this;\n\t\t}\n\n\t\tintersectsObject(object) {\n\t\t\tconst geometry = object.geometry;\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$2);\n\t\t}\n\n\t\tintersectsSprite(sprite) {\n\t\t\t_sphere$2.center.set(0, 0, 0);\n\n\t\t\t_sphere$2.radius = 0.7071067811865476;\n\n\t\t\t_sphere$2.applyMatrix4(sprite.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$2);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\tconst planes = this.planes;\n\t\t\tconst center = sphere.center;\n\t\t\tconst negRadius = -sphere.radius;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst distance = planes[i].distanceToPoint(center);\n\n\t\t\t\tif (distance < negRadius) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst plane = planes[i]; // corner at max distance\n\n\t\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif (plane.distanceToPoint(_vector$7) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tif (planes[i].distanceToPoint(point) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tfunction WebGLAnimation() {\n\t\tlet context = null;\n\t\tlet isAnimating = false;\n\t\tlet animationLoop = null;\n\t\tlet requestId = null;\n\n\t\tfunction onAnimationFrame(time, frame) {\n\t\t\tanimationLoop(time, frame);\n\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t}\n\n\t\treturn {\n\t\t\tstart: function () {\n\t\t\t\tif (isAnimating === true) return;\n\t\t\t\tif (animationLoop === null) return;\n\t\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t\t\tisAnimating = true;\n\t\t\t},\n\t\t\tstop: function () {\n\t\t\t\tcontext.cancelAnimationFrame(requestId);\n\t\t\t\tisAnimating = false;\n\t\t\t},\n\t\t\tsetAnimationLoop: function (callback) {\n\t\t\t\tanimationLoop = callback;\n\t\t\t},\n\t\t\tsetContext: function (value) {\n\t\t\t\tcontext = value;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLAttributes(gl, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst buffers = new WeakMap();\n\n\t\tfunction createBuffer(attribute, bufferType) {\n\t\t\tconst array = attribute.array;\n\t\t\tconst usage = attribute.usage;\n\t\t\tconst buffer = gl.createBuffer();\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\t\t\tgl.bufferData(bufferType, array, usage);\n\t\t\tattribute.onUploadCallback();\n\t\t\tlet type = gl.FLOAT;\n\n\t\t\tif (array instanceof Float32Array) {\n\t\t\t\ttype = gl.FLOAT;\n\t\t\t} else if (array instanceof Float64Array) {\n\t\t\t\tconsole.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n\t\t\t} else if (array instanceof Uint16Array) {\n\t\t\t\tif (attribute.isFloat16BufferAttribute) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\ttype = gl.HALF_FLOAT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\t\t\t\t}\n\t\t\t} else if (array instanceof Int16Array) {\n\t\t\t\ttype = gl.SHORT;\n\t\t\t} else if (array instanceof Uint32Array) {\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\t\t\t} else if (array instanceof Int32Array) {\n\t\t\t\ttype = gl.INT;\n\t\t\t} else if (array instanceof Int8Array) {\n\t\t\t\ttype = gl.BYTE;\n\t\t\t} else if (array instanceof Uint8Array) {\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\t\t\t} else if (array instanceof Uint8ClampedArray) {\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\t\t}\n\n\t\tfunction updateBuffer(buffer, attribute, bufferType) {\n\t\t\tconst array = attribute.array;\n\t\t\tconst updateRange = attribute.updateRange;\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\n\t\t\tif (updateRange.count === -1) {\n\t\t\t\t// Not using update ranges\n\t\t\t\tgl.bufferSubData(bufferType, 0, array);\n\t\t\t} else {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array, updateRange.offset, updateRange.count);\n\t\t\t\t} else {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n\t\t\t\t}\n\n\t\t\t\tupdateRange.count = -1; // reset range\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction get(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\treturn buffers.get(attribute);\n\t\t}\n\n\t\tfunction remove(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tconst data = buffers.get(attribute);\n\n\t\t\tif (data) {\n\t\t\t\tgl.deleteBuffer(data.buffer);\n\t\t\t\tbuffers.delete(attribute);\n\t\t\t}\n\t\t}\n\n\t\tfunction update(attribute, bufferType) {\n\t\t\tif (attribute.isGLBufferAttribute) {\n\t\t\t\tconst cached = buffers.get(attribute);\n\n\t\t\t\tif (!cached || cached.version < attribute.version) {\n\t\t\t\t\tbuffers.set(attribute, {\n\t\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\t\tversion: attribute.version\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tconst data = buffers.get(attribute);\n\n\t\t\tif (data === undefined) {\n\t\t\t\tbuffers.set(attribute, createBuffer(attribute, bufferType));\n\t\t\t} else if (data.version < attribute.version) {\n\t\t\t\tupdateBuffer(data.buffer, attribute, bufferType);\n\t\t\t\tdata.version = attribute.version;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tclass PlaneGeometry extends BufferGeometry {\n\t\tconstructor(width = 1, height = 1, widthSegments = 1, heightSegments = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PlaneGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments\n\t\t\t};\n\t\t\tconst width_half = width / 2;\n\t\t\tconst height_half = height / 2;\n\t\t\tconst gridX = Math.floor(widthSegments);\n\t\t\tconst gridY = Math.floor(heightSegments);\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\t\t\tconst segment_width = width / gridX;\n\t\t\tconst segment_height = height / gridY; //\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\n\t\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\tconst x = ix * segment_width - width_half;\n\t\t\t\t\tvertices.push(x, -y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\tuvs.push(1 - iy / gridY);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let iy = 0; iy < gridY; iy++) {\n\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\n\t\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\t\tconst b = ix + gridX1 * (iy + 1);\n\t\t\t\t\tconst c = ix + 1 + gridX1 * (iy + 1);\n\t\t\t\t\tconst d = ix + 1 + gridX1 * iy;\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);\n\t\t}\n\n\t}\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\n\tvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\n\tvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(\t\t0, 1,\t\t0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\n\tvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\n\tvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(\t1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,\t1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,\t1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\n\tvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSNMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\\n\\tvec3 transmission = transmissionFactor * getIBLVolumeRefraction(\\n\\t\\tnormal, v, roughnessFactor, material.diffuseColor, totalSpecular,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission, transmissionFactor );\\n#endif\";\n\n\tvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec4 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\\n\\t\\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\\n\\t\\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\\n\\t\\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\\n\\t\\treturn normalize(refractionVector) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness(float roughness, float ior) {\\n\\t\\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\\n\\t}\\n\\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\\n\\t\\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\\n\\t\\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\\n\\t}\\n\\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tif (attenuationDistance == 0.0) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, float perceptualRoughness, vec3 baseColor, vec3 specularColor,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\\n\\t\\tvec3 attenuationColor, float attenuationDistance) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\\n\\t\\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\\n\\t}\\n#endif\";\n\n\tvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\n\tvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\n\tvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\n\tvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform vec3 attenuationColor;\\n\\tuniform float attenuationDistance;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <transmission_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec4 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition;\\n#endif\\n}\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tconst ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_toon_fragment: lights_toon_fragment,\n\t\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\ttransmission_fragment: transmission_fragment,\n\t\ttransmission_pars_fragment: transmission_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\t\tbackground_frag: background_frag,\n\t\tbackground_vert: background_vert,\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshmatcap_frag: meshmatcap_frag,\n\t\tmeshmatcap_vert: meshmatcap_vert,\n\t\tmeshtoon_frag: meshtoon_frag,\n\t\tmeshtoon_vert: meshtoon_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert,\n\t\tsprite_frag: sprite_frag,\n\t\tsprite_vert: sprite_vert\n\t};\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tconst UniformsLib = {\n\t\tcommon: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\tuv2Transform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tspecularmap: {\n\t\t\tspecularMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tenvmap: {\n\t\t\tenvMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tflipEnvMap: {\n\t\t\t\tvalue: -1\n\t\t\t},\n\t\t\treflectivity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\trefractionRatio: {\n\t\t\t\tvalue: 0.98\n\t\t\t},\n\t\t\tmaxMipLevel: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\taomap: {\n\t\t\taoMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\taoMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tlightmap: {\n\t\t\tlightMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tlightMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\temissivemap: {\n\t\t\temissiveMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tbumpmap: {\n\t\t\tbumpMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tbumpScale: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tnormalmap: {\n\t\t\tnormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tnormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t}\n\t\t},\n\t\tdisplacementmap: {\n\t\t\tdisplacementMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tdisplacementScale: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tdisplacementBias: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\troughnessmap: {\n\t\t\troughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tmetalnessmap: {\n\t\t\tmetalnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tgradientmap: {\n\t\t\tgradientMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tfog: {\n\t\t\tfogDensity: {\n\t\t\t\tvalue: 0.00025\n\t\t\t},\n\t\t\tfogNear: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tfogFar: {\n\t\t\t\tvalue: 2000\n\t\t\t},\n\t\t\tfogColor: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t}\n\t\t},\n\t\tlights: {\n\t\t\tambientLightColor: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tlightProbe: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tcolor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tdistance: {},\n\t\t\t\t\tconeCos: {},\n\t\t\t\t\tpenumbraCos: {},\n\t\t\t\t\tdecay: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdecay: {},\n\t\t\t\t\tdistance: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {},\n\t\t\t\t\tshadowCameraNear: {},\n\t\t\t\t\tshadowCameraFar: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\themisphereLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tskyColor: {},\n\t\t\t\t\tgroundColor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\twidth: {},\n\t\t\t\t\theight: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tltc_1: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tltc_2: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tpoints: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t},\n\t\tsprite: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t\tvalue: new Vector2(0.5, 0.5)\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tvalue: 0.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t}\n\t};\n\n\tconst ShaderLib = {\n\t\tbasic: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\t\t},\n\t\tlambert: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\t\t},\n\t\tphong: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\tspecular: {\n\t\t\t\t\tvalue: new Color(0x111111)\n\t\t\t\t},\n\t\t\t\tshininess: {\n\t\t\t\t\tvalue: 30\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\t\t},\n\t\tstandard: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\troughness: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t},\n\t\t\t\tmetalness: {\n\t\t\t\t\tvalue: 0.0\n\t\t\t\t},\n\t\t\t\tenvMapIntensity: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t} // temporary\n\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t\t},\n\t\ttoon: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\t\t},\n\t\tmatcap: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n\t\t\t\tmatcap: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\t\t},\n\t\tpoints: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\t\t},\n\t\tdashed: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n\t\t\t\tscale: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tdashSize: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\ttotalSize: {\n\t\t\t\t\tvalue: 2\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\t\t},\n\t\tdepth: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\t\t},\n\t\tnormal: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\t\t},\n\t\tsprite: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\t\t},\n\t\tbackground: {\n\t\t\tuniforms: {\n\t\t\t\tuvTransform: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t},\n\t\t\t\tt2D: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\t\tcube: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.envmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\t\t},\n\t\tequirect: {\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\t\t},\n\t\tdistanceRGBA: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n\t\t\t\treferencePosition: {\n\t\t\t\t\tvalue: new Vector3()\n\t\t\t\t},\n\t\t\t\tnearDistance: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tfarDistance: {\n\t\t\t\t\tvalue: 1000\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\t\t},\n\t\tshadow: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n\t\t\t\tcolor: {\n\t\t\t\t\tvalue: new Color(0x00000)\n\t\t\t\t},\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\t\t}\n\t};\n\tShaderLib.physical = {\n\t\tuniforms: mergeUniforms([ShaderLib.standard.uniforms, {\n\t\t\tclearcoat: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatRoughness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatRoughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatNormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t},\n\t\t\tclearcoatNormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tsheen: {\n\t\t\t\tvalue: new Color(0x000000)\n\t\t\t},\n\t\t\ttransmission: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\ttransmissionMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\ttransmissionSamplerSize: {\n\t\t\t\tvalue: new Vector2()\n\t\t\t},\n\t\t\ttransmissionSamplerMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tthicknessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tattenuationDistance: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tattenuationColor: {\n\t\t\t\tvalue: new Color(0x000000)\n\t\t\t}\n\t\t}]),\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t};\n\n\tfunction WebGLBackground(renderer, cubemaps, state, objects, premultipliedAlpha) {\n\t\tconst clearColor = new Color(0x000000);\n\t\tlet clearAlpha = 0;\n\t\tlet planeMesh;\n\t\tlet boxMesh;\n\t\tlet currentBackground = null;\n\t\tlet currentBackgroundVersion = 0;\n\t\tlet currentTonemapping = null;\n\n\t\tfunction render(renderList, scene) {\n\t\t\tlet forceClear = false;\n\t\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\t\tif (background && background.isTexture) {\n\t\t\t\tbackground = cubemaps.get(background);\n\t\t\t} // Ignore background in AR\n\t\t\t// TODO: Reconsider this.\n\n\n\t\t\tconst xr = renderer.xr;\n\t\t\tconst session = xr.getSession && xr.getSession();\n\n\t\t\tif (session && session.environmentBlendMode === 'additive') {\n\t\t\t\tbackground = null;\n\t\t\t}\n\n\t\t\tif (background === null) {\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t} else if (background && background.isColor) {\n\t\t\t\tsetClear(background, 1);\n\t\t\t\tforceClear = true;\n\t\t\t}\n\n\t\t\tif (renderer.autoClear || forceClear) {\n\t\t\t\trenderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n\t\t\t}\n\n\t\t\tif (background && (background.isCubeTexture || background.mapping === CubeUVReflectionMapping)) {\n\t\t\t\tif (boxMesh === undefined) {\n\t\t\t\t\tboxMesh = new Mesh(new BoxGeometry(1, 1, 1), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.cube.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('normal');\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('uv');\n\n\t\t\t\t\tboxMesh.onBeforeRender = function (renderer, scene, camera) {\n\t\t\t\t\t\tthis.matrixWorld.copyPosition(camera.matrixWorld);\n\t\t\t\t\t}; // enable code injection for non-built-in material\n\n\n\t\t\t\t\tObject.defineProperty(boxMesh.material, 'envMap', {\n\t\t\t\t\t\tget: function () {\n\t\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(boxMesh);\n\t\t\t\t}\n\n\t\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\t\tboxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture && background._needsFlipEnvMap ? -1 : 1;\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\n\t\t\t} else if (background && background.isTexture) {\n\t\t\t\tif (planeMesh === undefined) {\n\t\t\t\t\tplaneMesh = new Mesh(new PlaneGeometry(2, 2), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.background.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\n\n\t\t\t\t\tObject.defineProperty(planeMesh.material, 'map', {\n\t\t\t\t\t\tget: function () {\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(planeMesh);\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\t\tif (background.matrixAutoUpdate === true) {\n\t\t\t\t\tbackground.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy(background.matrix);\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\n\t\t\t}\n\t\t}\n\n\t\tfunction setClear(color, alpha) {\n\t\t\tstate.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n\t\t}\n\n\t\treturn {\n\t\t\tgetClearColor: function () {\n\t\t\t\treturn clearColor;\n\t\t\t},\n\t\t\tsetClearColor: function (color, alpha = 1) {\n\t\t\t\tclearColor.set(color);\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\t\t\t\treturn clearAlpha;\n\t\t\t},\n\t\t\tsetClearAlpha: function (alpha) {\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\trender: render\n\t\t};\n\t}\n\n\tfunction WebGLBindingStates(gl, extensions, attributes, capabilities) {\n\t\tconst maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\tconst extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\n\t\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\t\tconst bindingStates = {};\n\t\tconst defaultState = createBindingState(null);\n\t\tlet currentState = defaultState;\n\n\t\tfunction setup(object, material, program, geometry, index) {\n\t\t\tlet updateBuffers = false;\n\n\t\t\tif (vaoAvailable) {\n\t\t\t\tconst state = getBindingState(geometry, program, material);\n\n\t\t\t\tif (currentState !== state) {\n\t\t\t\t\tcurrentState = state;\n\t\t\t\t\tbindVertexArrayObject(currentState.object);\n\t\t\t\t}\n\n\t\t\t\tupdateBuffers = needsUpdate(geometry, index);\n\t\t\t\tif (updateBuffers) saveCache(geometry, index);\n\t\t\t} else {\n\t\t\t\tconst wireframe = material.wireframe === true;\n\n\t\t\t\tif (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {\n\t\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\t\tcurrentState.program = program.id;\n\t\t\t\t\tcurrentState.wireframe = wireframe;\n\t\t\t\t\tupdateBuffers = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh === true) {\n\t\t\t\tupdateBuffers = true;\n\t\t\t}\n\n\t\t\tif (index !== null) {\n\t\t\t\tattributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\n\t\t\t}\n\n\t\t\tif (updateBuffers) {\n\t\t\t\tsetupVertexAttributes(object, material, program, geometry);\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, attributes.get(index).buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction createVertexArrayObject() {\n\t\t\tif (capabilities.isWebGL2) return gl.createVertexArray();\n\t\t\treturn extension.createVertexArrayOES();\n\t\t}\n\n\t\tfunction bindVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.bindVertexArray(vao);\n\t\t\treturn extension.bindVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction deleteVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\n\t\t\treturn extension.deleteVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction getBindingState(geometry, program, material) {\n\t\t\tconst wireframe = material.wireframe === true;\n\t\t\tlet programMap = bindingStates[geometry.id];\n\n\t\t\tif (programMap === undefined) {\n\t\t\t\tprogramMap = {};\n\t\t\t\tbindingStates[geometry.id] = programMap;\n\t\t\t}\n\n\t\t\tlet stateMap = programMap[program.id];\n\n\t\t\tif (stateMap === undefined) {\n\t\t\t\tstateMap = {};\n\t\t\t\tprogramMap[program.id] = stateMap;\n\t\t\t}\n\n\t\t\tlet state = stateMap[wireframe];\n\n\t\t\tif (state === undefined) {\n\t\t\t\tstate = createBindingState(createVertexArrayObject());\n\t\t\t\tstateMap[wireframe] = state;\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tfunction createBindingState(vao) {\n\t\t\tconst newAttributes = [];\n\t\t\tconst enabledAttributes = [];\n\t\t\tconst attributeDivisors = [];\n\n\t\t\tfor (let i = 0; i < maxVertexAttributes; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\tattributeDivisors[i] = 0;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false,\n\t\t\t\tnewAttributes: newAttributes,\n\t\t\t\tenabledAttributes: enabledAttributes,\n\t\t\t\tattributeDivisors: attributeDivisors,\n\t\t\t\tobject: vao,\n\t\t\t\tattributes: {},\n\t\t\t\tindex: null\n\t\t\t};\n\t\t}\n\n\t\tfunction needsUpdate(geometry, index) {\n\t\t\tconst cachedAttributes = currentState.attributes;\n\t\t\tconst geometryAttributes = geometry.attributes;\n\t\t\tlet attributesNum = 0;\n\n\t\t\tfor (const key in geometryAttributes) {\n\t\t\t\tconst cachedAttribute = cachedAttributes[key];\n\t\t\t\tconst geometryAttribute = geometryAttributes[key];\n\t\t\t\tif (cachedAttribute === undefined) return true;\n\t\t\t\tif (cachedAttribute.attribute !== geometryAttribute) return true;\n\t\t\t\tif (cachedAttribute.data !== geometryAttribute.data) return true;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tif (currentState.attributesNum !== attributesNum) return true;\n\t\t\tif (currentState.index !== index) return true;\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction saveCache(geometry, index) {\n\t\t\tconst cache = {};\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tlet attributesNum = 0;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif (attribute.data) {\n\t\t\t\t\tdata.data = attribute.data;\n\t\t\t\t}\n\n\t\t\t\tcache[key] = data;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tcurrentState.attributes = cache;\n\t\t\tcurrentState.attributesNum = attributesNum;\n\t\t\tcurrentState.index = index;\n\t\t}\n\n\t\tfunction initAttributes() {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\n\t\t\tfor (let i = 0, il = newAttributes.length; i < il; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\tfunction enableAttribute(attribute) {\n\t\t\tenableAttributeAndDivisor(attribute, 0);\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor(attribute, meshPerAttribute) {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\t\tconst attributeDivisors = currentState.attributeDivisors;\n\t\t\tnewAttributes[attribute] = 1;\n\n\t\t\tif (enabledAttributes[attribute] === 0) {\n\t\t\t\tgl.enableVertexAttribArray(attribute);\n\t\t\t\tenabledAttributes[attribute] = 1;\n\t\t\t}\n\n\t\t\tif (attributeDivisors[attribute] !== meshPerAttribute) {\n\t\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n\t\t\t\textension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n\t\t\t\tattributeDivisors[attribute] = meshPerAttribute;\n\t\t\t}\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\t\tfor (let i = 0, il = enabledAttributes.length; i < il; i++) {\n\t\t\t\tif (enabledAttributes[i] !== newAttributes[i]) {\n\t\t\t\t\tgl.disableVertexAttribArray(i);\n\t\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction vertexAttribPointer(index, size, type, normalized, stride, offset) {\n\t\t\tif (capabilities.isWebGL2 === true && (type === gl.INT || type === gl.UNSIGNED_INT)) {\n\t\t\t\tgl.vertexAttribIPointer(index, size, type, stride, offset);\n\t\t\t} else {\n\t\t\t\tgl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n\t\t\t}\n\t\t}\n\n\t\tfunction setupVertexAttributes(object, material, program, geometry) {\n\t\t\tif (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\n\t\t\t\tif (extensions.get('ANGLE_instanced_arrays') === null) return;\n\t\t\t}\n\n\t\t\tinitAttributes();\n\t\t\tconst geometryAttributes = geometry.attributes;\n\t\t\tconst programAttributes = program.getAttributes();\n\t\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor (const name in programAttributes) {\n\t\t\t\tconst programAttribute = programAttributes[name];\n\n\t\t\t\tif (programAttribute >= 0) {\n\t\t\t\t\tconst geometryAttribute = geometryAttributes[name];\n\n\t\t\t\t\tif (geometryAttribute !== undefined) {\n\t\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\t\t\t\t\t\tconst attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif (attribute === undefined) continue;\n\t\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif (geometryAttribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif (data && data.isInstancedInterleavedBuffer) {\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, data.meshPerAttribute);\n\n\t\t\t\t\t\t\t\tif (geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tenableAttribute(programAttribute);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\t\t\tvertexAttribPointer(programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (geometryAttribute.isInstancedBufferAttribute) {\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute);\n\n\t\t\t\t\t\t\t\tif (geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tenableAttribute(programAttribute);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\t\t\tvertexAttribPointer(programAttribute, size, type, normalized, 0, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (name === 'instanceMatrix') {\n\t\t\t\t\t\tconst attribute = attributes.get(object.instanceMatrix); // TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif (attribute === undefined) continue;\n\t\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 0, 1);\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 1, 1);\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 2, 1);\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 3, 1);\n\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 0, 4, type, false, 64, 0);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 1, 4, type, false, 64, 16);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 2, 4, type, false, 64, 32);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 3, 4, type, false, 64, 48);\n\t\t\t\t\t} else if (name === 'instanceColor') {\n\t\t\t\t\t\tconst attribute = attributes.get(object.instanceColor); // TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif (attribute === undefined) continue;\n\t\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, 1);\n\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute, 3, type, false, 12, 0);\n\t\t\t\t\t} else if (materialDefaultAttributeValues !== undefined) {\n\t\t\t\t\t\tconst value = materialDefaultAttributeValues[name];\n\n\t\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\t\tswitch (value.length) {\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib2fv(programAttribute, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib3fv(programAttribute, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib4fv(programAttribute, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib1fv(programAttribute, value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdisableUnusedAttributes();\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\treset();\n\n\t\t\tfor (const geometryId in bindingStates) {\n\t\t\t\tconst programMap = bindingStates[geometryId];\n\n\t\t\t\tfor (const programId in programMap) {\n\t\t\t\t\tconst stateMap = programMap[programId];\n\n\t\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete programMap[programId];\n\t\t\t\t}\n\n\t\t\t\tdelete bindingStates[geometryId];\n\t\t\t}\n\t\t}\n\n\t\tfunction releaseStatesOfGeometry(geometry) {\n\t\t\tif (bindingStates[geometry.id] === undefined) return;\n\t\t\tconst programMap = bindingStates[geometry.id];\n\n\t\t\tfor (const programId in programMap) {\n\t\t\t\tconst stateMap = programMap[programId];\n\n\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[programId];\n\t\t\t}\n\n\t\t\tdelete bindingStates[geometry.id];\n\t\t}\n\n\t\tfunction releaseStatesOfProgram(program) {\n\t\t\tfor (const geometryId in bindingStates) {\n\t\t\t\tconst programMap = bindingStates[geometryId];\n\t\t\t\tif (programMap[program.id] === undefined) continue;\n\t\t\t\tconst stateMap = programMap[program.id];\n\n\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[program.id];\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\tresetDefaultState();\n\t\t\tif (currentState === defaultState) return;\n\t\t\tcurrentState = defaultState;\n\t\t\tbindVertexArrayObject(currentState.object);\n\t\t} // for backward-compatilibity\n\n\n\t\tfunction resetDefaultState() {\n\t\t\tdefaultState.geometry = null;\n\t\t\tdefaultState.program = null;\n\t\t\tdefaultState.wireframe = false;\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\treset: reset,\n\t\t\tresetDefaultState: resetDefaultState,\n\t\t\tdispose: dispose,\n\t\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes\n\t\t};\n\t}\n\n\tfunction WebGLBufferRenderer(gl, extensions, info, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tlet mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawArrays(mode, start, count);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tlet extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawArraysInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, start, count, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLCapabilities(gl, extensions, parameters) {\n\t\tlet maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\t\t\tif (maxAnisotropy !== undefined) return maxAnisotropy;\n\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\n\t\t\t\tmaxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n\t\t\t} else {\n\t\t\t\tmaxAnisotropy = 0;\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\t\t}\n\n\t\tfunction getMaxPrecision(precision) {\n\t\t\tif (precision === 'highp') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n\t\t\t\t\treturn 'highp';\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\t\t\t}\n\n\t\t\tif (precision === 'mediump') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n\t\t\t\t\treturn 'mediump';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\t\t}\n\t\t/* eslint-disable no-undef */\n\n\n\t\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n\t\t/* eslint-enable no-undef */\n\n\t\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tconst maxPrecision = getMaxPrecision(precision);\n\n\t\tif (maxPrecision !== precision) {\n\t\t\tconsole.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n\t\t\tprecision = maxPrecision;\n\t\t}\n\n\t\tconst drawBuffers = isWebGL2 || extensions.has('WEBGL_draw_buffers');\n\t\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\t\tconst maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\tconst maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n\t\tconst maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t\tconst maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n\t\tconst maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\tconst maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n\t\tconst maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n\t\tconst maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n\t\tconst vertexTextures = maxVertexTextures > 0;\n\t\tconst floatFragmentTextures = isWebGL2 || extensions.has('OES_texture_float');\n\t\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\t\tconst maxSamples = isWebGL2 ? gl.getParameter(gl.MAX_SAMPLES) : 0;\n\t\treturn {\n\t\t\tisWebGL2: isWebGL2,\n\t\t\tdrawBuffers: drawBuffers,\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures,\n\t\t\tmaxSamples: maxSamples\n\t\t};\n\t}\n\n\tfunction WebGLClipping(properties) {\n\t\tconst scope = this;\n\t\tlet globalState = null,\n\t\t\t\tnumGlobalPlanes = 0,\n\t\t\t\tlocalClippingEnabled = false,\n\t\t\t\trenderingShadows = false;\n\t\tconst plane = new Plane(),\n\t\t\t\t\tviewNormalMatrix = new Matrix3(),\n\t\t\t\t\tuniform = {\n\t\t\tvalue: null,\n\t\t\tneedsUpdate: false\n\t\t};\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function (planes, enableLocalClipping, camera) {\n\t\t\tconst enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 || localClippingEnabled;\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\t\t\tglobalState = projectPlanes(planes, camera, 0);\n\t\t\tnumGlobalPlanes = planes.length;\n\t\t\treturn enabled;\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes(null);\n\t\t};\n\n\t\tthis.endShadows = function () {\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\t\t};\n\n\t\tthis.setState = function (material, camera, useCache) {\n\t\t\tconst planes = material.clippingPlanes,\n\t\t\t\t\t\tclipIntersection = material.clipIntersection,\n\t\t\t\t\t\tclipShadows = material.clipShadows;\n\t\t\tconst materialProperties = properties.get(material);\n\n\t\t\tif (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n\t\t\t\t// there's no local clipping\n\t\t\t\tif (renderingShadows) {\n\t\t\t\t\t// there's no global clipping\n\t\t\t\t\tprojectPlanes(null);\n\t\t\t\t} else {\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\t\t\tlGlobal = nGlobal * 4;\n\t\t\t\tlet dstArray = materialProperties.clippingState || null;\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes(planes, camera, lGlobal, useCache);\n\n\t\t\t\tfor (let i = 0; i !== lGlobal; ++i) {\n\t\t\t\t\tdstArray[i] = globalState[i];\n\t\t\t\t}\n\n\t\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\t\t\t}\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\t\t\tif (uniform.value !== globalState) {\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t}\n\n\t\tfunction projectPlanes(planes, camera, dstOffset, skipTransform) {\n\t\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\t\tlet dstArray = null;\n\n\t\t\tif (nPlanes !== 0) {\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif (skipTransform !== true || dstArray === null) {\n\t\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix(viewMatrix);\n\n\t\t\t\t\tif (dstArray === null || dstArray.length < flatSize) {\n\t\t\t\t\t\tdstArray = new Float32Array(flatSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n\t\t\t\t\t\tplane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n\t\t\t\t\t\tplane.normal.toArray(dstArray, i4);\n\t\t\t\t\t\tdstArray[i4 + 3] = plane.constant;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t\treturn dstArray;\n\t\t}\n\t}\n\n\tfunction WebGLCubeMaps(renderer) {\n\t\tlet cubemaps = new WeakMap();\n\n\t\tfunction mapTextureMapping(texture, mapping) {\n\t\t\tif (mapping === EquirectangularReflectionMapping) {\n\t\t\t\ttexture.mapping = CubeReflectionMapping;\n\t\t\t} else if (mapping === EquirectangularRefractionMapping) {\n\t\t\t\ttexture.mapping = CubeRefractionMapping;\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction get(texture) {\n\t\t\tif (texture && texture.isTexture) {\n\t\t\t\tconst mapping = texture.mapping;\n\n\t\t\t\tif (mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping) {\n\t\t\t\t\tif (cubemaps.has(texture)) {\n\t\t\t\t\t\tconst cubemap = cubemaps.get(texture).texture;\n\t\t\t\t\t\treturn mapTextureMapping(cubemap, texture.mapping);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif (image && image.height > 0) {\n\t\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget(image.height / 2);\n\t\t\t\t\t\t\trenderTarget.fromEquirectangularTexture(renderer, texture);\n\t\t\t\t\t\t\tcubemaps.set(texture, renderTarget);\n\t\t\t\t\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\t\t\t\treturn mapTextureMapping(renderTarget.texture, texture.mapping);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tconst cubemap = cubemaps.get(texture);\n\n\t\t\tif (cubemap !== undefined) {\n\t\t\t\tcubemaps.delete(texture);\n\t\t\t\tcubemap.dispose();\n\t\t\t}\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tcubemaps = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction WebGLExtensions(gl) {\n\t\tconst extensions = {};\n\n\t\tfunction getExtension(name) {\n\t\t\tif (extensions[name] !== undefined) {\n\t\t\t\treturn extensions[name];\n\t\t\t}\n\n\t\t\tlet extension;\n\n\t\t\tswitch (name) {\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension(name);\n\t\t\t}\n\n\t\t\textensions[name] = extension;\n\t\t\treturn extension;\n\t\t}\n\n\t\treturn {\n\t\t\thas: function (name) {\n\t\t\t\treturn getExtension(name) !== null;\n\t\t\t},\n\t\t\tinit: function (capabilities) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\tgetExtension('EXT_color_buffer_float');\n\t\t\t\t} else {\n\t\t\t\t\tgetExtension('WEBGL_depth_texture');\n\t\t\t\t\tgetExtension('OES_texture_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float_linear');\n\t\t\t\t\tgetExtension('OES_standard_derivatives');\n\t\t\t\t\tgetExtension('OES_element_index_uint');\n\t\t\t\t\tgetExtension('OES_vertex_array_object');\n\t\t\t\t\tgetExtension('ANGLE_instanced_arrays');\n\t\t\t\t}\n\n\t\t\t\tgetExtension('OES_texture_float_linear');\n\t\t\t\tgetExtension('EXT_color_buffer_half_float');\n\t\t\t},\n\t\t\tget: function (name) {\n\t\t\t\tconst extension = getExtension(name);\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n\t\t\t\t}\n\n\t\t\t\treturn extension;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLGeometries(gl, attributes, info, bindingStates) {\n\t\tconst geometries = {};\n\t\tconst wireframeAttributes = new WeakMap();\n\n\t\tfunction onGeometryDispose(event) {\n\t\t\tconst geometry = event.target;\n\n\t\t\tif (geometry.index !== null) {\n\t\t\t\tattributes.remove(geometry.index);\n\t\t\t}\n\n\t\t\tfor (const name in geometry.attributes) {\n\t\t\t\tattributes.remove(geometry.attributes[name]);\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener('dispose', onGeometryDispose);\n\t\t\tdelete geometries[geometry.id];\n\t\t\tconst attribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (attribute) {\n\t\t\t\tattributes.remove(attribute);\n\t\t\t\twireframeAttributes.delete(geometry);\n\t\t\t}\n\n\t\t\tbindingStates.releaseStatesOfGeometry(geometry);\n\n\t\t\tif (geometry.isInstancedBufferGeometry === true) {\n\t\t\t\tdelete geometry._maxInstanceCount;\n\t\t\t} //\n\n\n\t\t\tinfo.memory.geometries--;\n\t\t}\n\n\t\tfunction get(object, geometry) {\n\t\t\tif (geometries[geometry.id] === true) return geometry;\n\t\t\tgeometry.addEventListener('dispose', onGeometryDispose);\n\t\t\tgeometries[geometry.id] = true;\n\t\t\tinfo.memory.geometries++;\n\t\t\treturn geometry;\n\t\t}\n\n\t\tfunction update(geometry) {\n\t\t\tconst geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\t\tfor (const name in geometryAttributes) {\n\t\t\t\tattributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n\t\t\t} // morph targets\n\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst array = morphAttributes[name];\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tattributes.update(array[i], gl.ARRAY_BUFFER);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction updateWireframeAttribute(geometry) {\n\t\t\tconst indices = [];\n\t\t\tconst geometryIndex = geometry.index;\n\t\t\tconst geometryPosition = geometry.attributes.position;\n\t\t\tlet version = 0;\n\n\t\t\tif (geometryIndex !== null) {\n\t\t\t\tconst array = geometryIndex.array;\n\t\t\t\tversion = geometryIndex.version;\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\t\tconst a = array[i + 0];\n\t\t\t\t\tconst b = array[i + 1];\n\t\t\t\t\tconst c = array[i + 2];\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst array = geometryPosition.array;\n\t\t\t\tversion = geometryPosition.version;\n\n\t\t\t\tfor (let i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n\t\t\t\t\tconst a = i + 0;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n\t\t\tattribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\n\t\t\t//\n\n\t\t\tconst previousAttribute = wireframeAttributes.get(geometry);\n\t\t\tif (previousAttribute) attributes.remove(previousAttribute); //\n\n\t\t\twireframeAttributes.set(geometry, attribute);\n\t\t}\n\n\t\tfunction getWireframeAttribute(geometry) {\n\t\t\tconst currentAttribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (currentAttribute) {\n\t\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\t\tif (geometryIndex !== null) {\n\t\t\t\t\t// if the attribute is obsolete, create a new one\n\t\t\t\t\tif (currentAttribute.version < geometryIndex.version) {\n\t\t\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t}\n\n\t\t\treturn wireframeAttributes.get(geometry);\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tupdate: update,\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\t\t};\n\t}\n\n\tfunction WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tlet mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tlet type, bytesPerElement;\n\n\t\tfunction setIndex(value) {\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawElements(mode, count, type, start * bytesPerElement);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tlet extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawElementsInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, count, type, start * bytesPerElement, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLInfo(gl) {\n\t\tconst memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\t\tconst render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update(count, mode, instanceCount) {\n\t\t\trender.calls++;\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase gl.TRIANGLES:\n\t\t\t\t\trender.triangles += instanceCount * (count / 3);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINES:\n\t\t\t\t\trender.lines += instanceCount * (count / 2);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_STRIP:\n\t\t\t\t\trender.lines += instanceCount * (count - 1);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_LOOP:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.POINTS:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\trender.frame++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tfunction numericalSort(a, b) {\n\t\treturn a[0] - b[0];\n\t}\n\n\tfunction absNumericalSort(a, b) {\n\t\treturn Math.abs(b[1]) - Math.abs(a[1]);\n\t}\n\n\tfunction WebGLMorphtargets(gl) {\n\t\tconst influencesList = {};\n\t\tconst morphInfluences = new Float32Array(8);\n\t\tconst workInfluences = [];\n\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tworkInfluences[i] = [i, 0];\n\t\t}\n\n\t\tfunction update(object, geometry, material, program) {\n\t\t\tconst objectInfluences = object.morphTargetInfluences; // When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\t\t\tlet influences = influencesList[geometry.id];\n\n\t\t\tif (influences === undefined || influences.length !== length) {\n\t\t\t\t// initialise list\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tinfluences[i] = [i, 0];\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[geometry.id] = influences;\n\t\t\t} // Collect influences\n\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst influence = influences[i];\n\t\t\t\tinfluence[0] = i;\n\t\t\t\tinfluence[1] = objectInfluences[i];\n\t\t\t}\n\n\t\t\tinfluences.sort(absNumericalSort);\n\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\tif (i < length && influences[i][1]) {\n\t\t\t\t\tworkInfluences[i][0] = influences[i][0];\n\t\t\t\t\tworkInfluences[i][1] = influences[i][1];\n\t\t\t\t} else {\n\t\t\t\t\tworkInfluences[i][0] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[i][1] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tworkInfluences.sort(numericalSort);\n\t\t\tconst morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t\tconst morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\tconst influence = workInfluences[i];\n\t\t\t\tconst index = influence[0];\n\t\t\t\tconst value = influence[1];\n\n\t\t\t\tif (index !== Number.MAX_SAFE_INTEGER && value) {\n\t\t\t\t\tif (morphTargets && geometry.getAttribute('morphTarget' + i) !== morphTargets[index]) {\n\t\t\t\t\t\tgeometry.setAttribute('morphTarget' + i, morphTargets[index]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (morphNormals && geometry.getAttribute('morphNormal' + i) !== morphNormals[index]) {\n\t\t\t\t\t\tgeometry.setAttribute('morphNormal' + i, morphNormals[index]);\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[i] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\t\t\t\t} else {\n\t\t\t\t\tif (morphTargets && geometry.hasAttribute('morphTarget' + i) === true) {\n\t\t\t\t\t\tgeometry.deleteAttribute('morphTarget' + i);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (morphNormals && geometry.hasAttribute('morphNormal' + i) === true) {\n\t\t\t\t\t\tgeometry.deleteAttribute('morphNormal' + i);\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[i] = 0;\n\t\t\t\t}\n\t\t\t} // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tfunction WebGLObjects(gl, geometries, attributes, info) {\n\t\tlet updateMap = new WeakMap();\n\n\t\tfunction update(object) {\n\t\t\tconst frame = info.render.frame;\n\t\t\tconst geometry = object.geometry;\n\t\t\tconst buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n\t\t\tif (updateMap.get(buffergeometry) !== frame) {\n\t\t\t\tgeometries.update(buffergeometry);\n\t\t\t\tupdateMap.set(buffergeometry, frame);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\tif (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\n\t\t\t\t\tobject.addEventListener('dispose', onInstancedMeshDispose);\n\t\t\t\t}\n\n\t\t\t\tattributes.update(object.instanceMatrix, gl.ARRAY_BUFFER);\n\n\t\t\t\tif (object.instanceColor !== null) {\n\t\t\t\t\tattributes.update(object.instanceColor, gl.ARRAY_BUFFER);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tupdateMap = new WeakMap();\n\t\t}\n\n\t\tfunction onInstancedMeshDispose(event) {\n\t\t\tconst instancedMesh = event.target;\n\t\t\tinstancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\n\t\t\tattributes.remove(instancedMesh.instanceMatrix);\n\t\t\tif (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tclass DataTexture2DArray extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\tsuper(null);\n\t\t\tthis.image = {\n\t\t\t\tdata,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tdepth\n\t\t\t};\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n\tclass DataTexture3D extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t\t// Users can still set in DataTexture3D directly.\n\t\t\t//\n\t\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t\t// \ttexture.anisotropy = 16;\n\t\t\t//\n\t\t\t// See #14839\n\t\t\tsuper(null);\n\t\t\tthis.image = {\n\t\t\t\tdata,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tdepth\n\t\t\t};\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [textures] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *\t\tthe 'textures' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (textures factorizations):\n\t *\n\t * .upload( gl, seq, values, textures )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (textures factorizations):\n\t *\n\t * .setValue( gl, name, value, textures )\n\t *\n\t * \t\tsets uniform with\tname 'name' to 'value'\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\tconst emptyTexture = new Texture();\n\tconst emptyTexture2dArray = new DataTexture2DArray();\n\tconst emptyTexture3d = new DataTexture3D();\n\tconst emptyCubeTexture = new CubeTexture(); // --- Utilities ---\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tconst arrayCacheF32 = [];\n\tconst arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\n\tconst mat4array = new Float32Array(16);\n\tconst mat3array = new Float32Array(9);\n\tconst mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\n\tfunction flatten(array, nBlocks, blockSize) {\n\t\tconst firstElem = array[0];\n\t\tif (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tconst n = nBlocks * blockSize;\n\t\tlet r = arrayCacheF32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Float32Array(n);\n\t\t\tarrayCacheF32[n] = r;\n\t\t}\n\n\t\tif (nBlocks !== 0) {\n\t\t\tfirstElem.toArray(r, 0);\n\n\t\t\tfor (let i = 1, offset = 0; i !== nBlocks; ++i) {\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[i].toArray(r, offset);\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tfunction arraysEqual(a, b) {\n\t\tif (a.length !== b.length) return false;\n\n\t\tfor (let i = 0, l = a.length; i < l; i++) {\n\t\t\tif (a[i] !== b[i]) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction copyArray(a, b) {\n\t\tfor (let i = 0, l = b.length; i < l; i++) {\n\t\t\ta[i] = b[i];\n\t\t}\n\t} // Texture unit allocation\n\n\n\tfunction allocTexUnits(textures, n) {\n\t\tlet r = arrayCacheI32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Int32Array(n);\n\t\t\tarrayCacheI32[n] = r;\n\t\t}\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\tr[i] = textures.allocateTextureUnit();\n\t\t}\n\n\t\treturn r;\n\t} // --- Setters ---\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\t// Single scalar\n\n\n\tfunction setValueV1f(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1f(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single float vector (from flat array or THREE.VectorN)\n\n\n\tfunction setValueV2f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y) {\n\t\t\t\tgl.uniform2f(this.addr, v.x, v.y);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform2fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV3f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n\t\t\t\tgl.uniform3f(this.addr, v.x, v.y, v.z);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t}\n\t\t} else if (v.r !== undefined) {\n\t\t\tif (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n\t\t\t\tgl.uniform3f(this.addr, v.r, v.g, v.b);\n\t\t\t\tcache[0] = v.r;\n\t\t\t\tcache[1] = v.g;\n\t\t\t\tcache[2] = v.b;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform3fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV4f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n\t\t\t\tgl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t\tcache[3] = v.w;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform4fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t} // Single matrix (from flat array or THREE.MatrixN)\n\n\n\tfunction setValueM2(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix2fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat2array.set(elements);\n\t\t\tgl.uniformMatrix2fv(this.addr, false, mat2array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM3(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix3fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat3array.set(elements);\n\t\t\tgl.uniformMatrix3fv(this.addr, false, mat3array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM4(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix4fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat4array.set(elements);\n\t\t\tgl.uniformMatrix4fv(this.addr, false, mat4array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t} // Single integer / boolean\n\n\n\tfunction setValueV1i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1i(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single integer / boolean vector (from flat array)\n\n\n\tfunction setValueV2i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform2iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV3i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform3iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV4i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform4iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t} // Single unsigned integer\n\n\n\tfunction setValueV1ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1ui(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single unsigned integer vector (from flat array)\n\n\n\tfunction setValueV2ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform2uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV3ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform3uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV4ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform4uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t} // Single texture (2D / Cube)\n\n\n\tfunction setValueT1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTexture2D(v || emptyTexture, unit);\n\t}\n\n\tfunction setValueT3D1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture3D(v || emptyTexture3d, unit);\n\t}\n\n\tfunction setValueT6(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTextureCube(v || emptyCubeTexture, unit);\n\t}\n\n\tfunction setValueT2DArray1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture2DArray(v || emptyTexture2dArray, unit);\n\t} // Helper to pick the right setter for the singular case\n\n\n\tfunction getSingularSetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1f;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2f;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3f;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4f;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1i;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2i;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3i;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4i;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x1405:\n\t\t\t\treturn setValueV1ui;\n\t\t\t// UINT\n\n\t\t\tcase 0x8dc6:\n\t\t\t\treturn setValueV2ui;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8dc7:\n\t\t\t\treturn setValueV3ui;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8dc8:\n\t\t\t\treturn setValueV4ui;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1;\n\n\t\t\tcase 0x8b5f: // SAMPLER_3D\n\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\n\t\t\tcase 0x8dd3:\n\t\t\t\t// UNSIGNED_INT_SAMPLER_3D\n\t\t\t\treturn setValueT3D1;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6;\n\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dc4:\n\t\t\t\t// SAMPLER_2D_ARRAY_SHADOW\n\t\t\t\treturn setValueT2DArray1;\n\t\t}\n\t} // Array of scalars\n\n\n\tfunction setValueV1fArray(gl, v) {\n\t\tgl.uniform1fv(this.addr, v);\n\t} // Array of vectors (from flat array or array of THREE.VectorN)\n\n\n\tfunction setValueV2fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 2);\n\t\tgl.uniform2fv(this.addr, data);\n\t}\n\n\tfunction setValueV3fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 3);\n\t\tgl.uniform3fv(this.addr, data);\n\t}\n\n\tfunction setValueV4fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 4);\n\t\tgl.uniform4fv(this.addr, data);\n\t} // Array of matrices (from flat array or array of THREE.MatrixN)\n\n\n\tfunction setValueM2Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 4);\n\t\tgl.uniformMatrix2fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM3Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 9);\n\t\tgl.uniformMatrix3fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM4Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 16);\n\t\tgl.uniformMatrix4fv(this.addr, false, data);\n\t} // Array of integer / boolean\n\n\n\tfunction setValueV1iArray(gl, v) {\n\t\tgl.uniform1iv(this.addr, v);\n\t} // Array of integer / boolean vectors (from flat array)\n\n\n\tfunction setValueV2iArray(gl, v) {\n\t\tgl.uniform2iv(this.addr, v);\n\t}\n\n\tfunction setValueV3iArray(gl, v) {\n\t\tgl.uniform3iv(this.addr, v);\n\t}\n\n\tfunction setValueV4iArray(gl, v) {\n\t\tgl.uniform4iv(this.addr, v);\n\t} // Array of unsigned integer\n\n\n\tfunction setValueV1uiArray(gl, v) {\n\t\tgl.uniform1uiv(this.addr, v);\n\t} // Array of unsigned integer vectors (from flat array)\n\n\n\tfunction setValueV2uiArray(gl, v) {\n\t\tgl.uniform2uiv(this.addr, v);\n\t}\n\n\tfunction setValueV3uiArray(gl, v) {\n\t\tgl.uniform3uiv(this.addr, v);\n\t}\n\n\tfunction setValueV4uiArray(gl, v) {\n\t\tgl.uniform4uiv(this.addr, v);\n\t} // Array of textures (2D / Cube)\n\n\n\tfunction setValueT1Array(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTexture2D(v[i] || emptyTexture, units[i]);\n\t\t}\n\t}\n\n\tfunction setValueT6Array(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTextureCube(v[i] || emptyCubeTexture, units[i]);\n\t\t}\n\t} // Helper to pick the right setter for a pure (bottom-level) array\n\n\n\tfunction getPureArraySetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1fArray;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2fArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3fArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4fArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2Array;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3Array;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4Array;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1iArray;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2iArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3iArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4iArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x1405:\n\t\t\t\treturn setValueV1uiArray;\n\t\t\t// UINT\n\n\t\t\tcase 0x8dc6:\n\t\t\t\treturn setValueV2uiArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8dc7:\n\t\t\t\treturn setValueV3uiArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8dc8:\n\t\t\t\treturn setValueV4uiArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1Array;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6Array;\n\t\t}\n\t} // --- Uniform Classes ---\n\n\n\tfunction SingleUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tfunction PureArrayUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tPureArrayUniform.prototype.updateCache = function (data) {\n\t\tconst cache = this.cache;\n\n\t\tif (data instanceof Float32Array && cache.length !== data.length) {\n\t\t\tthis.cache = new Float32Array(data.length);\n\t\t}\n\n\t\tcopyArray(cache, data);\n\t};\n\n\tfunction StructuredUniform(id) {\n\t\tthis.id = id;\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t}\n\n\tStructuredUniform.prototype.setValue = function (gl, value, textures) {\n\t\tconst seq = this.seq;\n\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i];\n\t\t\tu.setValue(gl, value[u.id], textures);\n\t\t}\n\t}; // --- Top-level ---\n\t// Parser - builds up the property tree from the path strings\n\n\n\tconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\n\t// \t- the identifier (member name or array index)\n\t//\t- followed by an optional right bracket (found when array index)\n\t//\t- followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform(container, uniformObject) {\n\t\tcontainer.seq.push(uniformObject);\n\t\tcontainer.map[uniformObject.id] = uniformObject;\n\t}\n\n\tfunction parseUniform(activeInfo, addr, container) {\n\t\tconst path = activeInfo.name,\n\t\t\t\t\tpathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile (true) {\n\t\t\tconst match = RePathPart.exec(path),\n\t\t\t\t\t\tmatchEnd = RePathPart.lastIndex;\n\t\t\tlet id = match[1];\n\t\t\tconst idIsIndex = match[2] === ']',\n\t\t\t\t\t\tsubscript = match[3];\n\t\t\tif (idIsIndex) id = id | 0; // convert to integer\n\n\t\t\tif (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\t\t\t\taddUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\t\t\t\tconst map = container.map;\n\t\t\t\tlet next = map[id];\n\n\t\t\t\tif (next === undefined) {\n\t\t\t\t\tnext = new StructuredUniform(id);\n\t\t\t\t\taddUniform(container, next);\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\t\t\t}\n\t\t}\n\t} // Root Container\n\n\n\tfunction WebGLUniforms(gl, program) {\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n\t\tfor (let i = 0; i < n; ++i) {\n\t\t\tconst info = gl.getActiveUniform(program, i),\n\t\t\t\t\t\taddr = gl.getUniformLocation(program, info.name);\n\t\t\tparseUniform(info, addr, this);\n\t\t}\n\t}\n\n\tWebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\n\t\tconst u = this.map[name];\n\t\tif (u !== undefined) u.setValue(gl, value, textures);\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function (gl, object, name) {\n\t\tconst v = object[name];\n\t\tif (v !== undefined) this.setValue(gl, name, v);\n\t}; // Static interface\n\n\n\tWebGLUniforms.upload = function (gl, seq, values, textures) {\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i],\n\t\t\t\t\t\tv = values[u.id];\n\n\t\t\tif (v.needsUpdate !== false) {\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue(gl, v.value, textures);\n\t\t\t}\n\t\t}\n\t};\n\n\tWebGLUniforms.seqWithValue = function (seq, values) {\n\t\tconst r = [];\n\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i];\n\t\t\tif (u.id in values) r.push(u);\n\t\t}\n\n\t\treturn r;\n\t};\n\n\tfunction WebGLShader(gl, type, string) {\n\t\tconst shader = gl.createShader(type);\n\t\tgl.shaderSource(shader, string);\n\t\tgl.compileShader(shader);\n\t\treturn shader;\n\t}\n\n\tlet programIdCount = 0;\n\n\tfunction addLineNumbers(string) {\n\t\tconst lines = string.split('\\n');\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tlines[i] = i + 1 + ': ' + lines[i];\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\tfunction getEncodingComponents(encoding) {\n\t\tswitch (encoding) {\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn ['Linear', '( value )'];\n\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn ['sRGB', '( value )'];\n\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn ['RGBE', '( value )'];\n\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn ['RGBM', '( value, 7.0 )'];\n\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn ['RGBM', '( value, 16.0 )'];\n\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn ['RGBD', '( value, 256.0 )'];\n\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n\t\t\tcase LogLuvEncoding:\n\t\t\t\treturn ['LogLuv', '( value )'];\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\n\t\t\t\treturn ['Linear', '( value )'];\n\t\t}\n\t}\n\n\tfunction getShaderErrors(gl, shader, type) {\n\t\tconst status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\t\tconst log = gl.getShaderInfoLog(shader).trim();\n\t\tif (status && log === '') return ''; // --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst source = gl.getShaderSource(shader);\n\t\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers(source);\n\t}\n\n\tfunction getTexelDecodingFunction(functionName, encoding) {\n\t\tconst components = getEncodingComponents(encoding);\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\n\t}\n\n\tfunction getTexelEncodingFunction(functionName, encoding) {\n\t\tconst components = getEncodingComponents(encoding);\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n\t}\n\n\tfunction getToneMappingFunction(functionName, toneMapping) {\n\t\tlet toneMappingName;\n\n\t\tswitch (toneMapping) {\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tcase ACESFilmicToneMapping:\n\t\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\t\tbreak;\n\n\t\t\tcase CustomToneMapping:\n\t\t\t\ttoneMappingName = 'Custom';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\t}\n\n\tfunction generateExtensions(parameters) {\n\t\tconst chunks = [parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission > 0.0) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n\t\treturn chunks.filter(filterEmptyLine).join('\\n');\n\t}\n\n\tfunction generateDefines(defines) {\n\t\tconst chunks = [];\n\n\t\tfor (const name in defines) {\n\t\t\tconst value = defines[name];\n\t\t\tif (value === false) continue;\n\t\t\tchunks.push('#define ' + name + ' ' + value);\n\t\t}\n\n\t\treturn chunks.join('\\n');\n\t}\n\n\tfunction fetchAttributeLocations(gl, program) {\n\t\tconst attributes = {};\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tconst info = gl.getActiveAttrib(program, i);\n\t\t\tconst name = info.name; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[name] = gl.getAttribLocation(program, name);\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tfunction filterEmptyLine(string) {\n\t\treturn string !== '';\n\t}\n\n\tfunction replaceLightNums(string, parameters) {\n\t\treturn string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n\t}\n\n\tfunction replaceClippingPlaneNums(string, parameters) {\n\t\treturn string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n\t} // Resolve Includes\n\n\n\tconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction resolveIncludes(string) {\n\t\treturn string.replace(includePattern, includeReplacer);\n\t}\n\n\tfunction includeReplacer(match, include) {\n\t\tconst string = ShaderChunk[include];\n\n\t\tif (string === undefined) {\n\t\t\tthrow new Error('Can not resolve #include <' + include + '>');\n\t\t}\n\n\t\treturn resolveIncludes(string);\n\t} // Unroll Loops\n\n\n\tconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\tconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\n\tfunction unrollLoops(string) {\n\t\treturn string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\n\t}\n\n\tfunction deprecatedLoopReplacer(match, start, end, snippet) {\n\t\tconsole.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\n\t\treturn loopReplacer(match, start, end, snippet);\n\t}\n\n\tfunction loopReplacer(match, start, end, snippet) {\n\t\tlet string = '';\n\n\t\tfor (let i = parseInt(start); i < parseInt(end); i++) {\n\t\t\tstring += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\n\t\t}\n\n\t\treturn string;\n\t} //\n\n\n\tfunction generatePrecision(parameters) {\n\t\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\t\tif (parameters.precision === 'highp') {\n\t\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\t\t} else if (parameters.precision === 'mediump') {\n\t\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\t\t} else if (parameters.precision === 'lowp') {\n\t\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\t\t}\n\n\t\treturn precisionstring;\n\t}\n\n\tfunction generateShadowMapTypeDefine(parameters) {\n\t\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif (parameters.shadowMapType === PCFShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\t\t} else if (parameters.shadowMapType === PCFSoftShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\t\t} else if (parameters.shadowMapType === VSMShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\t\t}\n\n\t\treturn shadowMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapTypeDefine(parameters) {\n\t\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapModeDefine(parameters) {\n\t\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapModeDefine;\n\t}\n\n\tfunction generateEnvMapBlendingDefine(parameters) {\n\t\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.combine) {\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapBlendingDefine;\n\t}\n\n\tfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n\t\tconst gl = renderer.getContext();\n\t\tconst defines = parameters.defines;\n\t\tlet vertexShader = parameters.vertexShader;\n\t\tlet fragmentShader = parameters.fragmentShader;\n\t\tconst shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n\t\tconst envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n\t\tconst envMapModeDefine = generateEnvMapModeDefine(parameters);\n\t\tconst envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n\t\tconst gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\n\t\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\n\t\tconst customDefines = generateDefines(defines);\n\t\tconst program = gl.createProgram();\n\t\tlet prefixVertex, prefixFragment;\n\t\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\t\tif (parameters.isRawShaderMaterial) {\n\t\t\tprefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixVertex.length > 0) {\n\t\t\t\tprefixVertex += '\\n';\n\t\t\t}\n\n\t\t\tprefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixFragment.length > 0) {\n\t\t\t\tprefixFragment += '\\n';\n\t\t\t}\n\t\t} else {\n\t\t\tprefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#if defined( USE_COLOR_ALPHA )', '\tattribute vec4 color;', '#elif defined( USE_COLOR )', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t\tprefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + (parameters.alphaTest % 1 ? '' : '.0') : '', // add '.0' if integer\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\tparameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcap ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMap ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMap ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.lightMap ? getTexelDecodingFunction('lightMapTexelToLinear', parameters.lightMapEncoding) : '', getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t}\n\n\t\tvertexShader = resolveIncludes(vertexShader);\n\t\tvertexShader = replaceLightNums(vertexShader, parameters);\n\t\tvertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n\t\tfragmentShader = resolveIncludes(fragmentShader);\n\t\tfragmentShader = replaceLightNums(fragmentShader, parameters);\n\t\tfragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n\t\tvertexShader = unrollLoops(vertexShader);\n\t\tfragmentShader = unrollLoops(fragmentShader);\n\n\t\tif (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n\t\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\t\t\tversionString = '#version 300 es\\n';\n\t\t\tprefixVertex = ['#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n\t\t\tprefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n\t\t}\n\n\t\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\t\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tconst glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n\t\tconst glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n\t\tgl.attachShader(program, glVertexShader);\n\t\tgl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n\t\tif (parameters.index0AttributeName !== undefined) {\n\t\t\tgl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n\t\t} else if (parameters.morphTargets === true) {\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation(program, 0, 'position');\n\t\t}\n\n\t\tgl.linkProgram(program); // check for link errors\n\n\t\tif (renderer.debug.checkShaderErrors) {\n\t\t\tconst programLog = gl.getProgramInfoLog(program).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n\t\t\t\trunnable = false;\n\t\t\t\tconst vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n\t\t\t\tconst fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n\t\t\t\tconsole.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors);\n\t\t\t} else if (programLog !== '') {\n\t\t\t\tconsole.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n\t\t\t} else if (vertexLog === '' || fragmentLog === '') {\n\t\t\t\thaveDiagnostics = false;\n\t\t\t}\n\n\t\t\tif (haveDiagnostics) {\n\t\t\t\tthis.diagnostics = {\n\t\t\t\t\trunnable: runnable,\n\t\t\t\t\tprogramLog: programLog,\n\t\t\t\t\tvertexShader: {\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\t\t\t\t\t},\n\t\t\t\t\tfragmentShader: {\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t} // Clean up\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\n\t\tgl.deleteShader(glVertexShader);\n\t\tgl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n\t\tlet cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\t\t\tif (cachedUniforms === undefined) {\n\t\t\t\tcachedUniforms = new WebGLUniforms(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\t\t}; // set up caching for attribute locations\n\n\n\t\tlet cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\t\t\tif (cachedAttributes === undefined) {\n\t\t\t\tcachedAttributes = fetchAttributeLocations(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\t\t}; // free resource\n\n\n\t\tthis.destroy = function () {\n\t\t\tbindingStates.releaseStatesOfProgram(this);\n\t\t\tgl.deleteProgram(program);\n\t\t\tthis.program = undefined;\n\t\t}; //\n\n\n\t\tthis.name = parameters.shaderName;\n\t\tthis.id = programIdCount++;\n\t\tthis.cacheKey = cacheKey;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\t\treturn this;\n\t}\n\n\tfunction WebGLPrograms(renderer, cubemaps, extensions, capabilities, bindingStates, clipping) {\n\t\tconst programs = [];\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\t\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\t\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\t\tconst vertexTextures = capabilities.vertexTextures;\n\t\tlet precision = capabilities.precision;\n\t\tconst shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'toon',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\t\tconst parameterNames = ['precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV', 'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap', 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering', 'sheen', 'transmission', 'transmissionMap', 'thicknessMap'];\n\n\t\tfunction getMaxBones(object) {\n\t\t\tconst skeleton = object.skeleton;\n\t\t\tconst bones = skeleton.bones;\n\n\t\t\tif (floatVertexTextures) {\n\t\t\t\treturn 1024;\n\t\t\t} else {\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//\t- leave some extra space for other uniforms\n\t\t\t\t//\t- limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//\t\t(up to 54 should be safe)\n\t\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\t\tconst nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n\t\t\t\tconst maxBones = Math.min(nVertexMatrices, bones.length);\n\n\t\t\t\tif (maxBones < bones.length) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\t\t\t}\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap(map) {\n\t\t\tlet encoding;\n\n\t\t\tif (map && map.isTexture) {\n\t\t\t\tencoding = map.encoding;\n\t\t\t} else if (map && map.isWebGLRenderTarget) {\n\t\t\t\tconsole.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');\n\t\t\t\tencoding = map.texture.encoding;\n\t\t\t} else {\n\t\t\t\tencoding = LinearEncoding;\n\t\t\t}\n\n\t\t\treturn encoding;\n\t\t}\n\n\t\tfunction getParameters(material, lights, shadows, scene, object) {\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst envMap = cubemaps.get(material.envMap || environment);\n\t\t\tconst shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones(object) : 0;\n\n\t\t\tif (material.precision !== null) {\n\t\t\t\tprecision = capabilities.getMaxPrecision(material.precision);\n\n\t\t\t\tif (precision !== material.precision) {\n\t\t\t\t\tconsole.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet vertexShader, fragmentShader;\n\n\t\t\tif (shaderID) {\n\t\t\t\tconst shader = ShaderLib[shaderID];\n\t\t\t\tvertexShader = shader.vertexShader;\n\t\t\t\tfragmentShader = shader.fragmentShader;\n\t\t\t} else {\n\t\t\t\tvertexShader = material.vertexShader;\n\t\t\t\tfragmentShader = material.fragmentShader;\n\t\t\t}\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\tconst parameters = {\n\t\t\t\tisWebGL2: isWebGL2,\n\t\t\t\tshaderID: shaderID,\n\t\t\t\tshaderName: material.type,\n\t\t\t\tvertexShader: vertexShader,\n\t\t\t\tfragmentShader: fragmentShader,\n\t\t\t\tdefines: material.defines,\n\t\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\t\tglslVersion: material.glslVersion,\n\t\t\t\tprecision: precision,\n\t\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\t\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\t\toutputEncoding: currentRenderTarget !== null ? getTextureEncodingFromMap(currentRenderTarget.texture) : renderer.outputEncoding,\n\t\t\t\tmap: !!material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap(material.map),\n\t\t\t\tmatcap: !!material.matcap,\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap(material.matcap),\n\t\t\t\tenvMap: !!envMap,\n\t\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap(envMap),\n\t\t\t\tenvMapCubeUV: !!envMap && (envMap.mapping === CubeUVReflectionMapping || envMap.mapping === CubeUVRefractionMapping),\n\t\t\t\tlightMap: !!material.lightMap,\n\t\t\t\tlightMapEncoding: getTextureEncodingFromMap(material.lightMap),\n\t\t\t\taoMap: !!material.aoMap,\n\t\t\t\temissiveMap: !!material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap),\n\t\t\t\tbumpMap: !!material.bumpMap,\n\t\t\t\tnormalMap: !!material.normalMap,\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\t\tclearcoatMap: !!material.clearcoatMap,\n\t\t\t\tclearcoatRoughnessMap: !!material.clearcoatRoughnessMap,\n\t\t\t\tclearcoatNormalMap: !!material.clearcoatNormalMap,\n\t\t\t\tdisplacementMap: !!material.displacementMap,\n\t\t\t\troughnessMap: !!material.roughnessMap,\n\t\t\t\tmetalnessMap: !!material.metalnessMap,\n\t\t\t\tspecularMap: !!material.specularMap,\n\t\t\t\talphaMap: !!material.alphaMap,\n\t\t\t\tgradientMap: !!material.gradientMap,\n\t\t\t\tsheen: !!material.sheen,\n\t\t\t\ttransmission: !!material.transmission,\n\t\t\t\ttransmissionMap: !!material.transmissionMap,\n\t\t\t\tthicknessMap: !!material.thicknessMap,\n\t\t\t\tcombine: material.combine,\n\t\t\t\tvertexTangents: material.normalMap && material.vertexTangents,\n\t\t\t\tvertexColors: material.vertexColors,\n\t\t\t\tvertexAlphas: material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\n\t\t\t\tvertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.displacementMap || !!material.transmissionMap || !!material.thicknessMap,\n\t\t\t\tuvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || !!material.transmission || !!material.transmissionMap || !!material.thicknessMap) && !!material.displacementMap,\n\t\t\t\tfog: !!fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp2: fog && fog.isFogExp2,\n\t\t\t\tflatShading: !!material.flatShading,\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\t\tskinning: object.isSkinnedMesh === true && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: floatVertexTextures,\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\t\tnumClipIntersection: clipping.numIntersection,\n\t\t\t\tdithering: material.dithering,\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\t\t\t\tdepthPacking: material.depthPacking !== undefined ? material.depthPacking : false,\n\t\t\t\tindex0AttributeName: material.index0AttributeName,\n\t\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\t\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\n\t\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\n\t\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\n\t\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\t\t\t};\n\t\t\treturn parameters;\n\t\t}\n\n\t\tfunction getProgramCacheKey(parameters) {\n\t\t\tconst array = [];\n\n\t\t\tif (parameters.shaderID) {\n\t\t\t\tarray.push(parameters.shaderID);\n\t\t\t} else {\n\t\t\t\tarray.push(parameters.fragmentShader);\n\t\t\t\tarray.push(parameters.vertexShader);\n\t\t\t}\n\n\t\t\tif (parameters.defines !== undefined) {\n\t\t\t\tfor (const name in parameters.defines) {\n\t\t\t\t\tarray.push(name);\n\t\t\t\t\tarray.push(parameters.defines[name]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parameters.isRawShaderMaterial === false) {\n\t\t\t\tfor (let i = 0; i < parameterNames.length; i++) {\n\t\t\t\t\tarray.push(parameters[parameterNames[i]]);\n\t\t\t\t}\n\n\t\t\t\tarray.push(renderer.outputEncoding);\n\t\t\t\tarray.push(renderer.gammaFactor);\n\t\t\t}\n\n\t\t\tarray.push(parameters.customProgramCacheKey);\n\t\t\treturn array.join();\n\t\t}\n\n\t\tfunction getUniforms(material) {\n\t\t\tconst shaderID = shaderIDs[material.type];\n\t\t\tlet uniforms;\n\n\t\t\tif (shaderID) {\n\t\t\t\tconst shader = ShaderLib[shaderID];\n\t\t\t\tuniforms = UniformsUtils.clone(shader.uniforms);\n\t\t\t} else {\n\t\t\t\tuniforms = material.uniforms;\n\t\t\t}\n\n\t\t\treturn uniforms;\n\t\t}\n\n\t\tfunction acquireProgram(parameters, cacheKey) {\n\t\t\tlet program; // Check if code has been already compiled\n\n\t\t\tfor (let p = 0, pl = programs.length; p < pl; p++) {\n\t\t\t\tconst preexistingProgram = programs[p];\n\n\t\t\t\tif (preexistingProgram.cacheKey === cacheKey) {\n\t\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t\t++program.usedTimes;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (program === undefined) {\n\t\t\t\tprogram = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\n\t\t\t\tprograms.push(program);\n\t\t\t}\n\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction releaseProgram(program) {\n\t\t\tif (--program.usedTimes === 0) {\n\t\t\t\t// Remove from unordered set\n\t\t\t\tconst i = programs.indexOf(program);\n\t\t\t\tprograms[i] = programs[programs.length - 1];\n\t\t\t\tprograms.pop(); // Free WebGL resources\n\n\t\t\t\tprogram.destroy();\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tgetParameters: getParameters,\n\t\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\t\tgetUniforms: getUniforms,\n\t\t\tacquireProgram: acquireProgram,\n\t\t\treleaseProgram: releaseProgram,\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\t\tprograms: programs\n\t\t};\n\t}\n\n\tfunction WebGLProperties() {\n\t\tlet properties = new WeakMap();\n\n\t\tfunction get(object) {\n\t\t\tlet map = properties.get(object);\n\n\t\t\tif (map === undefined) {\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set(object, map);\n\t\t\t}\n\n\t\t\treturn map;\n\t\t}\n\n\t\tfunction remove(object) {\n\t\t\tproperties.delete(object);\n\t\t}\n\n\t\tfunction update(object, key, value) {\n\t\t\tproperties.get(object)[key] = value;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tproperties = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction painterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.program !== b.program) {\n\t\t\treturn a.program.id - b.program.id;\n\t\t} else if (a.material.id !== b.material.id) {\n\t\t\treturn a.material.id - b.material.id;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn a.z - b.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction reversePainterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn b.z - a.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction WebGLRenderList(properties) {\n\t\tconst renderItems = [];\n\t\tlet renderItemsIndex = 0;\n\t\tconst opaque = [];\n\t\tconst transmissive = [];\n\t\tconst transparent = [];\n\t\tconst defaultProgram = {\n\t\t\tid: -1\n\t\t};\n\n\t\tfunction init() {\n\t\t\trenderItemsIndex = 0;\n\t\t\topaque.length = 0;\n\t\t\ttransmissive.length = 0;\n\t\t\ttransparent.length = 0;\n\t\t}\n\n\t\tfunction getNextRenderItem(object, geometry, material, groupOrder, z, group) {\n\t\t\tlet renderItem = renderItems[renderItemsIndex];\n\t\t\tconst materialProperties = properties.get(material);\n\n\t\t\tif (renderItem === undefined) {\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\t\t\t\trenderItems[renderItemsIndex] = renderItem;\n\t\t\t} else {\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\t\t\t}\n\n\t\t\trenderItemsIndex++;\n\t\t\treturn renderItem;\n\t\t}\n\n\t\tfunction push(object, geometry, material, groupOrder, z, group) {\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\ttransmissive.push(renderItem);\n\t\t\t} else if (material.transparent === true) {\n\t\t\t\ttransparent.push(renderItem);\n\t\t\t} else {\n\t\t\t\topaque.push(renderItem);\n\t\t\t}\n\t\t}\n\n\t\tfunction unshift(object, geometry, material, groupOrder, z, group) {\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\ttransmissive.unshift(renderItem);\n\t\t\t} else if (material.transparent === true) {\n\t\t\t\ttransparent.unshift(renderItem);\n\t\t\t} else {\n\t\t\t\topaque.unshift(renderItem);\n\t\t\t}\n\t\t}\n\n\t\tfunction sort(customOpaqueSort, customTransparentSort) {\n\t\t\tif (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\n\t\t\tif (transmissive.length > 1) transmissive.sort(customTransparentSort || reversePainterSortStable);\n\t\t\tif (transparent.length > 1) transparent.sort(customTransparentSort || reversePainterSortStable);\n\t\t}\n\n\t\tfunction finish() {\n\t\t\t// Clear references from inactive renderItems in the list\n\t\t\tfor (let i = renderItemsIndex, il = renderItems.length; i < il; i++) {\n\t\t\t\tconst renderItem = renderItems[i];\n\t\t\t\tif (renderItem.id === null) break;\n\t\t\t\trenderItem.id = null;\n\t\t\t\trenderItem.object = null;\n\t\t\t\trenderItem.geometry = null;\n\t\t\t\trenderItem.material = null;\n\t\t\t\trenderItem.program = null;\n\t\t\t\trenderItem.group = null;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransmissive: transmissive,\n\t\t\ttransparent: transparent,\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tunshift: unshift,\n\t\t\tfinish: finish,\n\t\t\tsort: sort\n\t\t};\n\t}\n\n\tfunction WebGLRenderLists(properties) {\n\t\tlet lists = new WeakMap();\n\n\t\tfunction get(scene, renderCallDepth) {\n\t\t\tlet list;\n\n\t\t\tif (lists.has(scene) === false) {\n\t\t\t\tlist = new WebGLRenderList(properties);\n\t\t\t\tlists.set(scene, [list]);\n\t\t\t} else {\n\t\t\t\tif (renderCallDepth >= lists.get(scene).length) {\n\t\t\t\t\tlist = new WebGLRenderList(properties);\n\t\t\t\t\tlists.get(scene).push(list);\n\t\t\t\t} else {\n\t\t\t\t\tlist = lists.get(scene)[renderCallDepth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tlists = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction UniformsCache() {\n\t\tconst lights = {};\n\t\treturn {\n\t\t\tget: function (light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction ShadowUniformsCache() {\n\t\tconst lights = {};\n\t\treturn {\n\t\t\tget: function (light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tlet nextVersion = 0;\n\n\tfunction shadowCastingLightsFirst(lightA, lightB) {\n\t\treturn (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\n\t}\n\n\tfunction WebGLLights(extensions, capabilities) {\n\t\tconst cache = new UniformsCache();\n\t\tconst shadowCache = ShadowUniformsCache();\n\t\tconst state = {\n\t\t\tversion: 0,\n\t\t\thash: {\n\t\t\t\tdirectionalLength: -1,\n\t\t\t\tpointLength: -1,\n\t\t\t\tspotLength: -1,\n\t\t\t\trectAreaLength: -1,\n\t\t\t\themiLength: -1,\n\t\t\t\tnumDirectionalShadows: -1,\n\t\t\t\tnumPointShadows: -1,\n\t\t\t\tnumSpotShadows: -1\n\t\t\t},\n\t\t\tambient: [0, 0, 0],\n\t\t\tprobe: [],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadow: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadow: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\trectAreaLTC1: null,\n\t\t\trectAreaLTC2: null,\n\t\t\tpoint: [],\n\t\t\tpointShadow: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: []\n\t\t};\n\n\t\tfor (let i = 0; i < 9; i++) state.probe.push(new Vector3());\n\n\t\tconst vector3 = new Vector3();\n\t\tconst matrix4 = new Matrix4();\n\t\tconst matrix42 = new Matrix4();\n\n\t\tfunction setup(lights) {\n\t\t\tlet r = 0,\n\t\t\t\t\tg = 0,\n\t\t\t\t\tb = 0;\n\n\t\t\tfor (let i = 0; i < 9; i++) state.probe[i].set(0, 0, 0);\n\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\t\t\tlet numDirectionalShadows = 0;\n\t\t\tlet numPointShadows = 0;\n\t\t\tlet numSpotShadows = 0;\n\t\t\tlights.sort(shadowCastingLightsFirst);\n\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\n\t\t\t\tconst light = lights[i];\n\t\t\t\tconst color = light.color;\n\t\t\t\tconst intensity = light.intensity;\n\t\t\t\tconst distance = light.distance;\n\t\t\t\tconst shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n\t\t\t\tif (light.isAmbientLight) {\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\t\t\t\t} else if (light.isLightProbe) {\n\t\t\t\t\tfor (let j = 0; j < 9; j++) {\n\t\t\t\t\t\tstate.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n\t\t\t\t\t}\n\t\t\t\t} else if (light.isDirectionalLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity);\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tstate.directionalShadow[directionalLength] = shadowUniforms;\n\t\t\t\t\t\tstate.directionalShadowMap[directionalLength] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumDirectionalShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directional[directionalLength] = uniforms;\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity);\n\t\t\t\t\tuniforms.distance = distance;\n\t\t\t\t\tuniforms.coneCos = Math.cos(light.angle);\n\t\t\t\t\tuniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tstate.spotShadow[spotLength] = shadowUniforms;\n\t\t\t\t\t\tstate.spotShadowMap[spotLength] = shadowMap;\n\t\t\t\t\t\tstate.spotShadowMatrix[spotLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumSpotShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spot[spotLength] = uniforms;\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tconst uniforms = cache.get(light); // (a) intensity is the total visible light emitted\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\t\t\t\t\t// (b) intensity is the brightness of the light\n\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity);\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\t\t\t\t\tstate.rectArea[rectAreaLength] = uniforms;\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity);\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\t\t\t\t\t\tstate.pointShadow[pointLength] = shadowUniforms;\n\t\t\t\t\t\tstate.pointShadowMap[pointLength] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[pointLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumPointShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.point[pointLength] = uniforms;\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n\t\t\t\t\tuniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n\t\t\t\t\tstate.hemi[hemiLength] = uniforms;\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (rectAreaLength > 0) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\t// WebGL 2\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t} else {\n\t\t\t\t\t// WebGL 1\n\t\t\t\t\tif (extensions.has('OES_texture_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t\t} else if (extensions.has('OES_texture_half_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.ambient[0] = r;\n\t\t\tstate.ambient[1] = g;\n\t\t\tstate.ambient[2] = b;\n\t\t\tconst hash = state.hash;\n\n\t\t\tif (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\t\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\t\t\t\thash.directionalLength = directionalLength;\n\t\t\t\thash.pointLength = pointLength;\n\t\t\t\thash.spotLength = spotLength;\n\t\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\t\thash.hemiLength = hemiLength;\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t\thash.numPointShadows = numPointShadows;\n\t\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\t\tstate.version = nextVersion++;\n\t\t\t}\n\t\t}\n\n\t\tfunction setupView(lights, camera) {\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\t\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\n\t\t\t\tconst light = lights[i];\n\n\t\t\t\tif (light.isDirectionalLight) {\n\t\t\t\t\tconst uniforms = state.directional[directionalLength];\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\t\t\tuniforms.direction.sub(vector3);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tconst uniforms = state.spot[spotLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\t\t\tuniforms.direction.sub(vector3);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tconst uniforms = state.rectArea[rectAreaLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy(light.matrixWorld);\n\t\t\t\t\tmatrix4.premultiply(viewMatrix);\n\t\t\t\t\tmatrix42.extractRotation(matrix4);\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4(matrix42);\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4(matrix42);\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tconst uniforms = state.point[pointLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tconst uniforms = state.hemi[hemiLength];\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tuniforms.direction.normalize();\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tsetupView: setupView,\n\t\t\tstate: state\n\t\t};\n\t}\n\n\tfunction WebGLRenderState(extensions, capabilities) {\n\t\tconst lights = new WebGLLights(extensions, capabilities);\n\t\tconst lightsArray = [];\n\t\tconst shadowsArray = [];\n\n\t\tfunction init() {\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\t\t}\n\n\t\tfunction pushLight(light) {\n\t\t\tlightsArray.push(light);\n\t\t}\n\n\t\tfunction pushShadow(shadowLight) {\n\t\t\tshadowsArray.push(shadowLight);\n\t\t}\n\n\t\tfunction setupLights() {\n\t\t\tlights.setup(lightsArray);\n\t\t}\n\n\t\tfunction setupLightsView(camera) {\n\t\t\tlights.setupView(lightsArray, camera);\n\t\t}\n\n\t\tconst state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\t\t\tlights: lights\n\t\t};\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\t\t\tsetupLightsView: setupLightsView,\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\t}\n\n\tfunction WebGLRenderStates(extensions, capabilities) {\n\t\tlet renderStates = new WeakMap();\n\n\t\tfunction get(scene, renderCallDepth = 0) {\n\t\t\tlet renderState;\n\n\t\t\tif (renderStates.has(scene) === false) {\n\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\trenderStates.set(scene, [renderState]);\n\t\t\t} else {\n\t\t\t\tif (renderCallDepth >= renderStates.get(scene).length) {\n\t\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\t\trenderStates.get(scene).push(renderState);\n\t\t\t\t} else {\n\t\t\t\t\trenderState = renderStates.get(scene)[renderCallDepth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn renderState;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\trenderStates = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\t/**\n\t * parameters = {\n\t *\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t * }\n\t */\n\n\tclass MeshDepthMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshDepthMaterial';\n\t\t\tthis.depthPacking = BasicDepthPacking;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.depthPacking = source.depthPacking;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\n\t *\treferencePosition: <float>,\n\t *\tnearDistance: <float>,\n\t *\tfarDistance: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tclass MeshDistanceMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshDistanceMaterial';\n\t\t\tthis.referencePosition = new Vector3();\n\t\t\tthis.nearDistance = 1;\n\t\t\tthis.farDistance = 1000;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.fog = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.referencePosition.copy(source.referencePosition);\n\t\t\tthis.nearDistance = source.nearDistance;\n\t\t\tthis.farDistance = source.farDistance;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\n\tvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\n\tfunction WebGLShadowMap(_renderer, _objects, _capabilities) {\n\t\tlet _frustum = new Frustum();\n\n\t\tconst _shadowMapSize = new Vector2(),\n\t\t\t\t\t_viewportSize = new Vector2(),\n\t\t\t\t\t_viewport = new Vector4(),\n\t\t\t\t\t_depthMaterials = [],\n\t\t\t\t\t_distanceMaterials = [],\n\t\t\t\t\t_materialCache = {},\n\t\t\t\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\t\tconst shadowSide = {\n\t\t\t0: BackSide,\n\t\t\t1: FrontSide,\n\t\t\t2: DoubleSide\n\t\t};\n\t\tconst shadowMaterialVertical = new ShaderMaterial({\n\t\t\tdefines: {\n\t\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\tshadow_pass: {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\tresolution: {\n\t\t\t\t\tvalue: new Vector2()\n\t\t\t\t},\n\t\t\t\tradius: {\n\t\t\t\t\tvalue: 4.0\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: vsm_vert,\n\t\t\tfragmentShader: vsm_frag\n\t\t});\n\t\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\t\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\t\tconst fullScreenTri = new BufferGeometry();\n\t\tfullScreenTri.setAttribute('position', new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\n\t\tconst fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\n\t\tconst scope = this;\n\t\tthis.enabled = false;\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function (lights, scene, camera) {\n\t\t\tif (scope.enabled === false) return;\n\t\t\tif (scope.autoUpdate === false && scope.needsUpdate === false) return;\n\t\t\tif (lights.length === 0) return;\n\n\t\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\n\t\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\n\t\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\t\tconst _state = _renderer.state; // Set GL state for depth map.\n\n\t\t\t_state.setBlending(NoBlending);\n\n\t\t\t_state.buffers.color.setClear(1, 1, 1, 1);\n\n\t\t\t_state.buffers.depth.setTest(true);\n\n\t\t\t_state.setScissorTest(false); // render depth map\n\n\n\t\t\tfor (let i = 0, il = lights.length; i < il; i++) {\n\t\t\t\tconst light = lights[i];\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif (shadow === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\n\n\t\t\t\t_shadowMapSize.copy(shadow.mapSize);\n\n\t\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t\t_shadowMapSize.multiply(shadowFrameExtents);\n\n\t\t\t\t_viewportSize.copy(shadow.mapSize);\n\n\t\t\t\tif (_shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize) {\n\t\t\t\t\tif (_shadowMapSize.x > _maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_shadowMapSize.y > _maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null && !shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tconst pars = {\n\t\t\t\t\t\tminFilter: LinearFilter,\n\t\t\t\t\t\tmagFilter: LinearFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null) {\n\t\t\t\t\tconst pars = {\n\t\t\t\t\t\tminFilter: NearestFilter,\n\t\t\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t\t_renderer.clear();\n\n\t\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\t\tfor (let vp = 0; vp < viewportCount; vp++) {\n\t\t\t\t\tconst viewport = shadow.getViewport(vp);\n\n\t\t\t\t\t_viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\n\n\t\t\t\t\t_state.viewport(_viewport);\n\n\t\t\t\t\tshadow.updateMatrices(light, vp);\n\t\t\t\t\t_frustum = shadow.getFrustum();\n\t\t\t\t\trenderObject(scene, camera, shadow.camera, light, this.type);\n\t\t\t\t} // do blur pass for VSM\n\n\n\t\t\t\tif (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tVSMPass(shadow, camera);\n\t\t\t\t}\n\n\t\t\t\tshadow.needsUpdate = false;\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t\t_renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\n\t\t};\n\n\t\tfunction VSMPass(shadow, camera) {\n\t\t\tconst geometry = _objects.update(fullScreenMesh); // vertical pass\n\n\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.mapPass);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizontal pass\n\n\n\t\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);\n\t\t}\n\n\t\tfunction getDepthMaterialVariant(useMorphing) {\n\t\t\tconst index = useMorphing << 0;\n\t\t\tlet material = _depthMaterials[index];\n\n\t\t\tif (material === undefined) {\n\t\t\t\tmaterial = new MeshDepthMaterial({\n\t\t\t\t\tdepthPacking: RGBADepthPacking,\n\t\t\t\t\tmorphTargets: useMorphing\n\t\t\t\t});\n\t\t\t\t_depthMaterials[index] = material;\n\t\t\t}\n\n\t\t\treturn material;\n\t\t}\n\n\t\tfunction getDistanceMaterialVariant(useMorphing) {\n\t\t\tconst index = useMorphing << 0;\n\t\t\tlet material = _distanceMaterials[index];\n\n\t\t\tif (material === undefined) {\n\t\t\t\tmaterial = new MeshDistanceMaterial({\n\t\t\t\t\tmorphTargets: useMorphing\n\t\t\t\t});\n\t\t\t\t_distanceMaterials[index] = material;\n\t\t\t}\n\n\t\t\treturn material;\n\t\t}\n\n\t\tfunction getDepthMaterial(object, geometry, material, light, shadowCameraNear, shadowCameraFar, type) {\n\t\t\tlet result = null;\n\t\t\tlet getMaterialVariant = getDepthMaterialVariant;\n\t\t\tlet customMaterial = object.customDepthMaterial;\n\n\t\t\tif (light.isPointLight === true) {\n\t\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\t\t\t}\n\n\t\t\tif (customMaterial === undefined) {\n\t\t\t\tlet useMorphing = false;\n\n\t\t\t\tif (material.morphTargets === true) {\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\t\t\t\t}\n\n\t\t\t\tresult = getMaterialVariant(useMorphing);\n\t\t\t} else {\n\t\t\t\tresult = customMaterial;\n\t\t\t}\n\n\t\t\tif (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\t\t\t\tconst keyA = result.uuid,\n\t\t\t\t\t\t\tkeyB = material.uuid;\n\t\t\t\tlet materialsForVariant = _materialCache[keyA];\n\n\t\t\t\tif (materialsForVariant === undefined) {\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[keyA] = materialsForVariant;\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[keyB];\n\n\t\t\t\tif (cachedMaterial === undefined) {\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[keyB] = cachedMaterial;\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tif (type === VSMShadowMap) {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : material.side;\n\t\t\t} else {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\n\t\t\t}\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\n\t\t\t\tresult.referencePosition.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction renderObject(object, camera, shadowCamera, light, type) {\n\t\t\tif (object.visible === false) return;\n\t\t\tconst visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible && (object.isMesh || object.isLine || object.isPoints)) {\n\t\t\t\tif ((object.castShadow || object.receiveShadow && type === VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n\t\t\t\t\tconst geometry = _objects.update(object);\n\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor (let k = 0, kl = groups.length; k < kl; k++) {\n\t\t\t\t\t\t\tconst group = groups[k];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\n\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (material.visible) {\n\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, material, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\trenderObject(children[i], camera, shadowCamera, light, type);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction WebGLState(gl, extensions, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction ColorBuffer() {\n\t\t\tlet locked = false;\n\t\t\tconst color = new Vector4();\n\t\t\tlet currentColorMask = null;\n\t\t\tconst currentColorClear = new Vector4(0, 0, 0, 0);\n\t\t\treturn {\n\t\t\t\tsetMask: function (colorMask) {\n\t\t\t\t\tif (currentColorMask !== colorMask && !locked) {\n\t\t\t\t\t\tgl.colorMask(colorMask, colorMask, colorMask, colorMask);\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (r, g, b, a, premultipliedAlpha) {\n\t\t\t\t\tif (premultipliedAlpha === true) {\n\t\t\t\t\t\tr *= a;\n\t\t\t\t\t\tg *= a;\n\t\t\t\t\t\tb *= a;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set(r, g, b, a);\n\n\t\t\t\t\tif (currentColorClear.equals(color) === false) {\n\t\t\t\t\t\tgl.clearColor(r, g, b, a);\n\t\t\t\t\t\tcurrentColorClear.copy(color);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set(-1, 0, 0, 0); // set to invalid state\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\t\t\tlet locked = false;\n\t\t\tlet currentDepthMask = null;\n\t\t\tlet currentDepthFunc = null;\n\t\t\tlet currentDepthClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function (depthTest) {\n\t\t\t\t\tif (depthTest) {\n\t\t\t\t\t\tenable(gl.DEPTH_TEST);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisable(gl.DEPTH_TEST);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function (depthMask) {\n\t\t\t\t\tif (currentDepthMask !== depthMask && !locked) {\n\t\t\t\t\t\tgl.depthMask(depthMask);\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function (depthFunc) {\n\t\t\t\t\tif (currentDepthFunc !== depthFunc) {\n\t\t\t\t\t\tif (depthFunc) {\n\t\t\t\t\t\t\tswitch (depthFunc) {\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NEVER);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.ALWAYS);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LESS);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.EQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GREATER);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NOTEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (depth) {\n\t\t\t\t\tif (currentDepthClear !== depth) {\n\t\t\t\t\t\tgl.clearDepth(depth);\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\t\t\tlet locked = false;\n\t\t\tlet currentStencilMask = null;\n\t\t\tlet currentStencilFunc = null;\n\t\t\tlet currentStencilRef = null;\n\t\t\tlet currentStencilFuncMask = null;\n\t\t\tlet currentStencilFail = null;\n\t\t\tlet currentStencilZFail = null;\n\t\t\tlet currentStencilZPass = null;\n\t\t\tlet currentStencilClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function (stencilTest) {\n\t\t\t\t\tif (!locked) {\n\t\t\t\t\t\tif (stencilTest) {\n\t\t\t\t\t\t\tenable(gl.STENCIL_TEST);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdisable(gl.STENCIL_TEST);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function (stencilMask) {\n\t\t\t\t\tif (currentStencilMask !== stencilMask && !locked) {\n\t\t\t\t\t\tgl.stencilMask(stencilMask);\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function (stencilFunc, stencilRef, stencilMask) {\n\t\t\t\t\tif (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n\t\t\t\t\t\tgl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetOp: function (stencilFail, stencilZFail, stencilZPass) {\n\t\t\t\t\tif (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n\t\t\t\t\t\tgl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (stencil) {\n\t\t\t\t\tif (currentStencilClear !== stencil) {\n\t\t\t\t\t\tgl.clearStencil(stencil);\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t} //\n\n\n\t\tconst colorBuffer = new ColorBuffer();\n\t\tconst depthBuffer = new DepthBuffer();\n\t\tconst stencilBuffer = new StencilBuffer();\n\t\tlet enabledCapabilities = {};\n\t\tlet xrFramebuffer = null;\n\t\tlet currentBoundFramebuffers = {};\n\t\tlet currentProgram = null;\n\t\tlet currentBlendingEnabled = false;\n\t\tlet currentBlending = null;\n\t\tlet currentBlendEquation = null;\n\t\tlet currentBlendSrc = null;\n\t\tlet currentBlendDst = null;\n\t\tlet currentBlendEquationAlpha = null;\n\t\tlet currentBlendSrcAlpha = null;\n\t\tlet currentBlendDstAlpha = null;\n\t\tlet currentPremultipledAlpha = false;\n\t\tlet currentFlipSided = null;\n\t\tlet currentCullFace = null;\n\t\tlet currentLineWidth = null;\n\t\tlet currentPolygonOffsetFactor = null;\n\t\tlet currentPolygonOffsetUnits = null;\n\t\tconst maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n\t\tlet lineWidthAvailable = false;\n\t\tlet version = 0;\n\t\tconst glVersion = gl.getParameter(gl.VERSION);\n\n\t\tif (glVersion.indexOf('WebGL') !== -1) {\n\t\t\tversion = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 1.0;\n\t\t} else if (glVersion.indexOf('OpenGL ES') !== -1) {\n\t\t\tversion = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 2.0;\n\t\t}\n\n\t\tlet currentTextureSlot = null;\n\t\tlet currentBoundTextures = {};\n\t\tconst scissorParam = gl.getParameter(gl.SCISSOR_BOX);\n\t\tconst viewportParam = gl.getParameter(gl.VIEWPORT);\n\t\tconst currentScissor = new Vector4().fromArray(scissorParam);\n\t\tconst currentViewport = new Vector4().fromArray(viewportParam);\n\n\t\tfunction createTexture(type, target, count) {\n\t\t\tconst data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n\t\t\tconst texture = gl.createTexture();\n\t\t\tgl.bindTexture(type, texture);\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tgl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tconst emptyTextures = {};\n\t\temptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n\t\temptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\n\n\t\tcolorBuffer.setClear(0, 0, 0, 1);\n\t\tdepthBuffer.setClear(1);\n\t\tstencilBuffer.setClear(0);\n\t\tenable(gl.DEPTH_TEST);\n\t\tdepthBuffer.setFunc(LessEqualDepth);\n\t\tsetFlipSided(false);\n\t\tsetCullFace(CullFaceBack);\n\t\tenable(gl.CULL_FACE);\n\t\tsetBlending(NoBlending); //\n\n\t\tfunction enable(id) {\n\t\t\tif (enabledCapabilities[id] !== true) {\n\t\t\t\tgl.enable(id);\n\t\t\t\tenabledCapabilities[id] = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction disable(id) {\n\t\t\tif (enabledCapabilities[id] !== false) {\n\t\t\t\tgl.disable(id);\n\t\t\t\tenabledCapabilities[id] = false;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindXRFramebuffer(framebuffer) {\n\t\t\tif (framebuffer !== xrFramebuffer) {\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\t\t\txrFramebuffer = framebuffer;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindFramebuffer(target, framebuffer) {\n\t\t\tif (framebuffer === null && xrFramebuffer !== null) framebuffer = xrFramebuffer; // use active XR framebuffer if available\n\n\t\t\tif (currentBoundFramebuffers[target] !== framebuffer) {\n\t\t\t\tgl.bindFramebuffer(target, framebuffer);\n\t\t\t\tcurrentBoundFramebuffers[target] = framebuffer;\n\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\t\t\t\t\tif (target === gl.DRAW_FRAMEBUFFER) {\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.FRAMEBUFFER] = framebuffer;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target === gl.FRAMEBUFFER) {\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.DRAW_FRAMEBUFFER] = framebuffer;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction useProgram(program) {\n\t\t\tif (currentProgram !== program) {\n\t\t\t\tgl.useProgram(program);\n\t\t\t\tcurrentProgram = program;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tconst equationToGL = {\n\t\t\t[AddEquation]: gl.FUNC_ADD,\n\t\t\t[SubtractEquation]: gl.FUNC_SUBTRACT,\n\t\t\t[ReverseSubtractEquation]: gl.FUNC_REVERSE_SUBTRACT\n\t\t};\n\n\t\tif (isWebGL2) {\n\t\t\tequationToGL[MinEquation] = gl.MIN;\n\t\t\tequationToGL[MaxEquation] = gl.MAX;\n\t\t} else {\n\t\t\tconst extension = extensions.get('EXT_blend_minmax');\n\n\t\t\tif (extension !== null) {\n\t\t\t\tequationToGL[MinEquation] = extension.MIN_EXT;\n\t\t\t\tequationToGL[MaxEquation] = extension.MAX_EXT;\n\t\t\t}\n\t\t}\n\n\t\tconst factorToGL = {\n\t\t\t[ZeroFactor]: gl.ZERO,\n\t\t\t[OneFactor]: gl.ONE,\n\t\t\t[SrcColorFactor]: gl.SRC_COLOR,\n\t\t\t[SrcAlphaFactor]: gl.SRC_ALPHA,\n\t\t\t[SrcAlphaSaturateFactor]: gl.SRC_ALPHA_SATURATE,\n\t\t\t[DstColorFactor]: gl.DST_COLOR,\n\t\t\t[DstAlphaFactor]: gl.DST_ALPHA,\n\t\t\t[OneMinusSrcColorFactor]: gl.ONE_MINUS_SRC_COLOR,\n\t\t\t[OneMinusSrcAlphaFactor]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t\t[OneMinusDstColorFactor]: gl.ONE_MINUS_DST_COLOR,\n\t\t\t[OneMinusDstAlphaFactor]: gl.ONE_MINUS_DST_ALPHA\n\t\t};\n\n\t\tfunction setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n\t\t\tif (blending === NoBlending) {\n\t\t\t\tif (currentBlendingEnabled === true) {\n\t\t\t\t\tdisable(gl.BLEND);\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (currentBlendingEnabled === false) {\n\t\t\t\tenable(gl.BLEND);\n\t\t\t\tcurrentBlendingEnabled = true;\n\t\t\t}\n\n\t\t\tif (blending !== CustomBlending) {\n\t\t\t\tif (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n\t\t\t\t\tif (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n\t\t\t\t\t\tgl.blendEquation(gl.FUNC_ADD);\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (premultipliedAlpha) {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ONE, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} // custom blending\n\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n\t\t\t\tgl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\t\t\t}\n\n\t\t\tif (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n\t\t\t\tgl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = null;\n\t\t}\n\n\t\tfunction setMaterial(material, frontFaceCW) {\n\t\t\tmaterial.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n\t\t\tlet flipSided = material.side === BackSide;\n\t\t\tif (frontFaceCW) flipSided = !flipSided;\n\t\t\tsetFlipSided(flipSided);\n\t\t\tmaterial.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n\t\t\tdepthBuffer.setFunc(material.depthFunc);\n\t\t\tdepthBuffer.setTest(material.depthTest);\n\t\t\tdepthBuffer.setMask(material.depthWrite);\n\t\t\tcolorBuffer.setMask(material.colorWrite);\n\t\t\tconst stencilWrite = material.stencilWrite;\n\t\t\tstencilBuffer.setTest(stencilWrite);\n\n\t\t\tif (stencilWrite) {\n\t\t\t\tstencilBuffer.setMask(material.stencilWriteMask);\n\t\t\t\tstencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n\t\t\t\tstencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n\t\t\t}\n\n\t\t\tsetPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n\t\t\tmaterial.alphaToCoverage === true ? enable(gl.SAMPLE_ALPHA_TO_COVERAGE) : disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t} //\n\n\n\t\tfunction setFlipSided(flipSided) {\n\t\t\tif (currentFlipSided !== flipSided) {\n\t\t\t\tif (flipSided) {\n\t\t\t\t\tgl.frontFace(gl.CW);\n\t\t\t\t} else {\n\t\t\t\t\tgl.frontFace(gl.CCW);\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\t\t\t}\n\t\t}\n\n\t\tfunction setCullFace(cullFace) {\n\t\t\tif (cullFace !== CullFaceNone) {\n\t\t\t\tenable(gl.CULL_FACE);\n\n\t\t\t\tif (cullFace !== currentCullFace) {\n\t\t\t\t\tif (cullFace === CullFaceBack) {\n\t\t\t\t\t\tgl.cullFace(gl.BACK);\n\t\t\t\t\t} else if (cullFace === CullFaceFront) {\n\t\t\t\t\t\tgl.cullFace(gl.FRONT);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgl.cullFace(gl.FRONT_AND_BACK);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(gl.CULL_FACE);\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\t\t}\n\n\t\tfunction setLineWidth(width) {\n\t\t\tif (width !== currentLineWidth) {\n\t\t\t\tif (lineWidthAvailable) gl.lineWidth(width);\n\t\t\t\tcurrentLineWidth = width;\n\t\t\t}\n\t\t}\n\n\t\tfunction setPolygonOffset(polygonOffset, factor, units) {\n\t\t\tif (polygonOffset) {\n\t\t\t\tenable(gl.POLYGON_OFFSET_FILL);\n\n\t\t\t\tif (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n\t\t\t\t\tgl.polygonOffset(factor, units);\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(gl.POLYGON_OFFSET_FILL);\n\t\t\t}\n\t\t}\n\n\t\tfunction setScissorTest(scissorTest) {\n\t\t\tif (scissorTest) {\n\t\t\t\tenable(gl.SCISSOR_TEST);\n\t\t\t} else {\n\t\t\t\tdisable(gl.SCISSOR_TEST);\n\t\t\t}\n\t\t} // texture\n\n\n\t\tfunction activeTexture(webglSlot) {\n\t\t\tif (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif (currentTextureSlot !== webglSlot) {\n\t\t\t\tgl.activeTexture(webglSlot);\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindTexture(webglType, webglTexture) {\n\t\t\tif (currentTextureSlot === null) {\n\t\t\t\tactiveTexture();\n\t\t\t}\n\n\t\t\tlet boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture === undefined) {\n\t\t\t\tboundTexture = {\n\t\t\t\t\ttype: undefined,\n\t\t\t\t\ttexture: undefined\n\t\t\t\t};\n\t\t\t\tcurrentBoundTextures[currentTextureSlot] = boundTexture;\n\t\t\t}\n\n\t\t\tif (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n\t\t\t\tgl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\t\t\t}\n\t\t}\n\n\t\tfunction unbindTexture() {\n\t\t\tconst boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture !== undefined && boundTexture.type !== undefined) {\n\t\t\t\tgl.bindTexture(boundTexture.type, null);\n\t\t\t\tboundTexture.type = undefined;\n\t\t\t\tboundTexture.texture = undefined;\n\t\t\t}\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.compressedTexImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage3D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage3D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction scissor(scissor) {\n\t\t\tif (currentScissor.equals(scissor) === false) {\n\t\t\t\tgl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n\t\t\t\tcurrentScissor.copy(scissor);\n\t\t\t}\n\t\t}\n\n\t\tfunction viewport(viewport) {\n\t\t\tif (currentViewport.equals(viewport) === false) {\n\t\t\t\tgl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n\t\t\t\tcurrentViewport.copy(viewport);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction reset() {\n\t\t\t// reset state\n\t\t\tgl.disable(gl.BLEND);\n\t\t\tgl.disable(gl.CULL_FACE);\n\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t\tgl.disable(gl.POLYGON_OFFSET_FILL);\n\t\t\tgl.disable(gl.SCISSOR_TEST);\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\tgl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t\tgl.blendEquation(gl.FUNC_ADD);\n\t\t\tgl.blendFunc(gl.ONE, gl.ZERO);\n\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\n\t\t\tgl.colorMask(true, true, true, true);\n\t\t\tgl.clearColor(0, 0, 0, 0);\n\t\t\tgl.depthMask(true);\n\t\t\tgl.depthFunc(gl.LESS);\n\t\t\tgl.clearDepth(1);\n\t\t\tgl.stencilMask(0xffffffff);\n\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\n\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\tgl.clearStencil(0);\n\t\t\tgl.cullFace(gl.BACK);\n\t\t\tgl.frontFace(gl.CCW);\n\t\t\tgl.polygonOffset(0, 0);\n\t\t\tgl.activeTexture(gl.TEXTURE0);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\t\tif (isWebGL2 === true) {\n\t\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\t\t\t}\n\n\t\t\tgl.useProgram(null);\n\t\t\tgl.lineWidth(1);\n\t\t\tgl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height); // reset internals\n\n\t\t\tenabledCapabilities = {};\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\t\t\txrFramebuffer = null;\n\t\t\tcurrentBoundFramebuffers = {};\n\t\t\tcurrentProgram = null;\n\t\t\tcurrentBlendingEnabled = false;\n\t\t\tcurrentBlending = null;\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\t\t\tcurrentPremultipledAlpha = false;\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\t\t\tcurrentLineWidth = null;\n\t\t\tcurrentPolygonOffsetFactor = null;\n\t\t\tcurrentPolygonOffsetUnits = null;\n\t\t\tcurrentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tcurrentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\t\t}\n\n\t\treturn {\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tbindFramebuffer: bindFramebuffer,\n\t\t\tbindXRFramebuffer: bindXRFramebuffer,\n\t\t\tuseProgram: useProgram,\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\t\t\tsetScissorTest: setScissorTest,\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tunbindTexture: unbindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\t\t\treset: reset\n\t\t};\n\t}\n\n\tfunction WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst maxTextures = capabilities.maxTextures;\n\t\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\t\tconst maxTextureSize = capabilities.maxTextureSize;\n\t\tconst maxSamples = capabilities.maxSamples;\n\n\t\tconst _videoTextures = new WeakMap();\n\n\t\tlet _canvas; // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\n\t\tlet useOffscreenCanvas = false;\n\n\t\ttry {\n\t\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined' && new OffscreenCanvas(1, 1).getContext('2d') !== null;\n\t\t} catch (err) {// Ignore any errors\n\t\t}\n\n\t\tfunction createCanvas(width, height) {\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\t\t\treturn useOffscreenCanvas ? new OffscreenCanvas(width, height) : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\t\t}\n\n\t\tfunction resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\n\t\t\tlet scale = 1; // handle case if texture exceeds max size\n\n\t\t\tif (image.width > maxSize || image.height > maxSize) {\n\t\t\t\tscale = maxSize / Math.max(image.width, image.height);\n\t\t\t} // only perform resize if necessary\n\n\n\t\t\tif (scale < 1 || needsPowerOfTwo === true) {\n\t\t\t\t// only perform resize for certain image types\n\t\t\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\t\t\t\t\tconst width = floor(scale * image.width);\n\t\t\t\t\tconst height = floor(scale * image.height);\n\t\t\t\t\tif (_canvas === undefined) _canvas = createCanvas(width, height); // cube textures can't reuse the same canvas\n\n\t\t\t\t\tconst canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t\tconst context = canvas.getContext('2d');\n\t\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').');\n\t\t\t\t\treturn canvas;\n\t\t\t\t} else {\n\t\t\t\t\tif ('data' in image) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn image;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn image;\n\t\t}\n\n\t\tfunction isPowerOfTwo$1(image) {\n\t\t\treturn isPowerOfTwo(image.width) && isPowerOfTwo(image.height);\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo(texture) {\n\t\t\tif (isWebGL2) return false;\n\t\t\treturn texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps(texture, supportsMips) {\n\t\t\treturn texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction generateMipmap(target, texture, width, height) {\n\t\t\t_gl.generateMipmap(target);\n\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\ttextureProperties.__maxMipLevel = Math.log2(Math.max(width, height));\n\t\t}\n\n\t\tfunction getInternalFormat(internalFormatName, glFormat, glType) {\n\t\t\tif (isWebGL2 === false) return glFormat;\n\n\t\t\tif (internalFormatName !== null) {\n\t\t\t\tif (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\n\t\t\t}\n\n\t\t\tlet internalFormat = glFormat;\n\n\t\t\tif (glFormat === _gl.RED) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.R32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.R16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.R8;\n\t\t\t}\n\n\t\t\tif (glFormat === _gl.RGB) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGB32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGB16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGB8;\n\t\t\t}\n\n\t\t\tif (glFormat === _gl.RGBA) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGBA32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGBA16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGBA8;\n\t\t\t}\n\n\t\t\tif (internalFormat === _gl.R16F || internalFormat === _gl.R32F || internalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F) {\n\t\t\t\textensions.get('EXT_color_buffer_float');\n\t\t\t}\n\n\t\t\treturn internalFormat;\n\t\t} // Fallback filters for non-power-of-2 textures\n\n\n\t\tfunction filterFallback(f) {\n\t\t\tif (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\n\t\t\t\treturn _gl.NEAREST;\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\t\t} //\n\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tdeallocateTexture(texture);\n\n\t\t\tif (texture.isVideoTexture) {\n\t\t\t\t_videoTextures.delete(texture);\n\t\t\t}\n\n\t\t\tinfo.memory.textures--;\n\t\t}\n\n\t\tfunction onRenderTargetDispose(event) {\n\t\t\tconst renderTarget = event.target;\n\t\t\trenderTarget.removeEventListener('dispose', onRenderTargetDispose);\n\t\t\tdeallocateRenderTarget(renderTarget);\n\t\t} //\n\n\n\t\tfunction deallocateTexture(texture) {\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (textureProperties.__webglInit === undefined) return;\n\n\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\n\t\t\tproperties.remove(texture);\n\t\t}\n\n\t\tfunction deallocateRenderTarget(renderTarget) {\n\t\t\tconst texture = renderTarget.texture;\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (!renderTarget) return;\n\n\t\t\tif (textureProperties.__webglTexture !== undefined) {\n\t\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\n\t\t\t\tinfo.memory.textures--;\n\t\t\t}\n\n\t\t\tif (renderTarget.depthTexture) {\n\t\t\t\trenderTarget.depthTexture.dispose();\n\t\t\t}\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n\t\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n\t\t\t\tif (renderTargetProperties.__webglMultisampledFramebuffer) _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\tif (renderTargetProperties.__webglColorRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);\n\t\t\t\tif (renderTargetProperties.__webglDepthRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\n\t\t\t}\n\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\n\t\t\t\tfor (let i = 0, il = texture.length; i < il; i++) {\n\t\t\t\t\tconst attachmentProperties = properties.get(texture[i]);\n\n\t\t\t\t\tif (attachmentProperties.__webglTexture) {\n\t\t\t\t\t\t_gl.deleteTexture(attachmentProperties.__webglTexture);\n\n\t\t\t\t\t\tinfo.memory.textures--;\n\t\t\t\t\t}\n\n\t\t\t\t\tproperties.remove(texture[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.remove(texture);\n\t\t\tproperties.remove(renderTarget);\n\t\t} //\n\n\n\t\tlet textureUnits = 0;\n\n\t\tfunction resetTextureUnits() {\n\t\t\ttextureUnits = 0;\n\t\t}\n\n\t\tfunction allocateTextureUnit() {\n\t\t\tconst textureUnit = textureUnits;\n\n\t\t\tif (textureUnit >= maxTextures) {\n\t\t\t\tconsole.warn('THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures);\n\t\t\t}\n\n\t\t\ttextureUnits += 1;\n\t\t\treturn textureUnit;\n\t\t} //\n\n\n\t\tfunction setTexture2D(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (texture.isVideoTexture) updateVideoTexture(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tconst image = texture.image;\n\n\t\t\t\tif (image === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\n\t\t\t\t} else if (image.complete === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\n\t\t\t\t} else {\n\t\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture2DArray(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture3D(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_3D, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTextureCube(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadCubeTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\t\t}\n\n\t\tconst wrappingToGL = {\n\t\t\t[RepeatWrapping]: _gl.REPEAT,\n\t\t\t[ClampToEdgeWrapping]: _gl.CLAMP_TO_EDGE,\n\t\t\t[MirroredRepeatWrapping]: _gl.MIRRORED_REPEAT\n\t\t};\n\t\tconst filterToGL = {\n\t\t\t[NearestFilter]: _gl.NEAREST,\n\t\t\t[NearestMipmapNearestFilter]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t\t[NearestMipmapLinearFilter]: _gl.NEAREST_MIPMAP_LINEAR,\n\t\t\t[LinearFilter]: _gl.LINEAR,\n\t\t\t[LinearMipmapNearestFilter]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t\t[LinearMipmapLinearFilter]: _gl.LINEAR_MIPMAP_LINEAR\n\t\t};\n\n\t\tfunction setTextureParameters(textureType, texture, supportsMips) {\n\t\t\tif (supportsMips) {\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[texture.wrapS]);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[texture.wrapT]);\n\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[texture.wrapR]);\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[texture.magFilter]);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[texture.minFilter]);\n\t\t\t} else {\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE);\n\t\t\t\t}\n\n\t\t\t\tif (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n\t\t\t\tif (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\n\t\t\t\tif (texture.type === FloatType && extensions.has('OES_texture_float_linear') === false) return; // verify extension for WebGL 1 and WebGL 2\n\n\t\t\t\tif (isWebGL2 === false && texture.type === HalfFloatType && extensions.has('OES_texture_half_float_linear') === false) return; // verify extension for WebGL 1 only\n\n\t\t\t\tif (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n\t\t\t\t\t_gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n\t\t\t\t\tproperties.get(texture).__currentAnisotropy = texture.anisotropy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction initTexture(textureProperties, texture) {\n\t\t\tif (textureProperties.__webglInit === undefined) {\n\t\t\t\ttextureProperties.__webglInit = true;\n\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\t\tinfo.memory.textures++;\n\t\t\t}\n\t\t}\n\n\t\tfunction uploadTexture(textureProperties, texture, slot) {\n\t\t\tlet textureType = _gl.TEXTURE_2D;\n\t\t\tif (texture.isDataTexture2DArray) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\t\tif (texture.isDataTexture3D) textureType = _gl.TEXTURE_3D;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(textureType, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo$1(texture.image) === false;\n\t\t\tconst image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\n\t\t\tconst supportsMips = isPowerOfTwo$1(image) || isWebGL2,\n\t\t\t\t\t\tglFormat = utils.convert(texture.format);\n\t\t\tlet glType = utils.convert(texture.type),\n\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\t\t\tsetTextureParameters(textureType, texture, supportsMips);\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tif (texture.isDepthTexture) {\n\t\t\t\t// populate depth texture with dummy data\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\t\t\t\t\t} else if (texture.type === UnsignedIntType) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\t\t\t\t\t} else if (texture.type === UnsignedInt248Type) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tconsole.error('WebGLRenderer: Floating point depth texture requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} // validation checks for WebGL 1\n\n\n\t\t\t\tif (texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n\t\t\t\t\tif (texture.type !== UnsignedInt248Type) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t} //\n\n\n\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n\t\t\t} else if (texture.isDataTexture) {\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\t\tmipmap = mipmaps[i];\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t\t}\n\t\t\t} else if (texture.isCompressedTexture) {\n\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\tmipmap = mipmaps[i];\n\n\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t} else if (texture.isDataTexture2DArray) {\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t} else if (texture.isDataTexture3D) {\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t} else {\n\t\t\t\t// regular Texture (image, video, canvas)\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\t\tmipmap = mipmaps[i];\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap);\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image);\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\tgenerateMipmap(textureType, texture, image.width, image.height);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t}\n\n\t\tfunction uploadCubeTexture(textureProperties, texture, slot) {\n\t\t\tif (texture.image.length !== 6) return;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n\t\t\tconst isCompressed = texture && (texture.isCompressedTexture || texture.image[0].isCompressedTexture);\n\t\t\tconst isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tif (!isCompressed && !isDataTexture) {\n\t\t\t\t\tcubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);\n\t\t\t\t} else {\n\t\t\t\t\tcubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst image = cubeImage[0],\n\t\t\t\t\t\tsupportsMips = isPowerOfTwo$1(image) || isWebGL2,\n\t\t\t\t\t\tglFormat = utils.convert(texture.format),\n\t\t\t\t\t\tglType = utils.convert(texture.type),\n\t\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n\t\t\tlet mipmaps;\n\n\t\t\tif (isCompressed) {\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tmipmaps = cubeImage[i].mipmaps;\n\n\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\n\t\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n\t\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t} else {\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tif (isDataTexture) {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[i].image;\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[i]);\n\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, image.width, image.height);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t} // Render targets\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\n\n\t\tfunction setupFrameBufferTexture(framebuffer, renderTarget, texture, attachment, textureTarget) {\n\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\tconst glType = utils.convert(texture.type);\n\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\n\t\t\tif (textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\tstate.texImage3D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null);\n\t\t\t} else {\n\t\t\t\tstate.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(texture).__webglTexture, 0);\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t} // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n\t\tfunction setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n\t\t\tif (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n\t\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\t\tif (depthTexture && depthTexture.isDepthTexture) {\n\t\t\t\t\t\tif (depthTexture.type === FloatType) {\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\t\t\t\t\t\t} else if (depthTexture.type === UnsignedIntType) {\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n\t\t\t} else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n\t\t\t} else {\n\t\t\t\t// Use the first texture for MRT so far\n\t\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[0] : renderTarget.texture;\n\t\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\t\tconst glType = utils.convert(texture.type);\n\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\t\t} // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n\t\tfunction setupDepthTexture(framebuffer, renderTarget) {\n\t\t\tconst isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\n\t\t\tif (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\tif (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\t\t\t} // upload an empty depth texture with framebuffer size\n\n\n\t\t\tif (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D(renderTarget.depthTexture, 0);\n\n\t\t\tconst webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n\t\t\tif (renderTarget.depthTexture.format === DepthFormat) {\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n\t\t\t} else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown depthTexture format');\n\t\t\t}\n\t\t} // Setup GL resources for a non-texture depth buffer\n\n\n\t\tfunction setupDepthRenderbuffer(renderTarget) {\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\n\t\t\tif (renderTarget.depthTexture) {\n\t\t\t\tif (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n\t\t\t\tsetupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n\t\t\t} else {\n\t\t\t\tif (isCube) {\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget, false);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t} // Set up GL resources for the render target\n\n\n\t\tfunction setupRenderTarget(renderTarget) {\n\t\t\tconst texture = renderTarget.texture;\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\trenderTarget.addEventListener('dispose', onRenderTargetDispose);\n\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets !== true) {\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\t\ttextureProperties.__version = texture.version;\n\t\t\t\tinfo.memory.textures++;\n\t\t\t}\n\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\t\t\tconst isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true;\n\t\t\tconst isMultisample = renderTarget.isWebGLMultisampleRenderTarget === true;\n\t\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2; // Handles WebGL2 RGBFormat fallback - #18858\n\n\t\t\tif (isWebGL2 && texture.format === RGBFormat && (texture.type === FloatType || texture.type === HalfFloatType)) {\n\t\t\t\ttexture.format = RGBAFormat;\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');\n\t\t\t} // Setup framebuffer\n\n\n\t\t\tif (isCube) {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif (isMultipleRenderTargets) {\n\t\t\t\t\tif (capabilities.drawBuffers) {\n\t\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\t\t\tconst attachmentProperties = properties.get(textures[i]);\n\n\t\t\t\t\t\t\tif (attachmentProperties.__webglTexture === undefined) {\n\t\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\t\t\t\t\t\t\t\tinfo.memory.textures++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.');\n\t\t\t\t\t}\n\t\t\t\t} else if (isMultisample) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\t\t\t\tconst glType = utils.convert(texture.type);\n\t\t\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\t\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\n\t\t\t\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Setup color buffer\n\n\n\t\t\tif (isCube) {\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n\t\t\t\t}\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n\t\t\t} else if (isMultipleRenderTargets) {\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\tconst attachment = textures[i];\n\t\t\t\t\tconst attachmentProperties = properties.get(attachment);\n\t\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, attachmentProperties.__webglTexture);\n\t\t\t\t\tsetTextureParameters(_gl.TEXTURE_2D, attachment, supportsMips);\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D);\n\n\t\t\t\t\tif (textureNeedsGenerateMipmaps(attachment, supportsMips)) {\n\t\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_2D, attachment, renderTarget.width, renderTarget.height);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, null);\n\t\t\t} else {\n\t\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\t\tif (isRenderTarget3D) {\n\t\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\n\t\t\t\t\t\tglTextureType = isTexture3D ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(glTextureType, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(glTextureType, texture, supportsMips);\n\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType);\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_2D, texture, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, null);\n\t\t\t} // Setup depth and stencil buffers\n\n\n\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\tsetupDepthRenderbuffer(renderTarget);\n\t\t\t}\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap(renderTarget) {\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [renderTarget.texture];\n\n\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\tconst texture = textures[i];\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n\t\t\t\t\tconst webglTexture = properties.get(texture).__webglTexture;\n\n\t\t\t\t\tstate.bindTexture(target, webglTexture);\n\t\t\t\t\tgenerateMipmap(target, texture, renderTarget.width, renderTarget.height);\n\t\t\t\t\tstate.bindTexture(target, null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction updateMultisampleRenderTarget(renderTarget) {\n\t\t\tif (renderTarget.isWebGLMultisampleRenderTarget) {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tconst width = renderTarget.width;\n\t\t\t\t\tconst height = renderTarget.height;\n\t\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\t\tif (renderTarget.depthBuffer) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif (renderTarget.stencilBuffer) mask |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\t\t_gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST);\n\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, null);\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction getRenderTargetSamples(renderTarget) {\n\t\t\treturn isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ? Math.min(maxSamples, renderTarget.samples) : 0;\n\t\t}\n\n\t\tfunction updateVideoTexture(texture) {\n\t\t\tconst frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n\t\t\tif (_videoTextures.get(texture) !== frame) {\n\t\t\t\t_videoTextures.set(texture, frame);\n\n\t\t\t\ttexture.update();\n\t\t\t}\n\t\t} // backwards compatibility\n\n\n\t\tlet warnedTexture2D = false;\n\t\tlet warnedTextureCube = false;\n\n\t\tfunction safeSetTexture2D(texture, slot) {\n\t\t\tif (texture && texture.isWebGLRenderTarget) {\n\t\t\t\tif (warnedTexture2D === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTexture2D = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTexture2D(texture, slot);\n\t\t}\n\n\t\tfunction safeSetTextureCube(texture, slot) {\n\t\t\tif (texture && texture.isWebGLCubeRenderTarget) {\n\t\t\t\tif (warnedTextureCube === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTextureCube = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTextureCube(texture, slot);\n\t\t} //\n\n\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\n\t\tthis.resetTextureUnits = resetTextureUnits;\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture2DArray = setTexture2DArray;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\n\t}\n\n\tfunction WebGLUtils(gl, extensions, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction convert(p) {\n\t\t\tlet extension;\n\t\t\tif (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n\t\t\tif (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif (p === UnsignedShort565Type) return gl.UNSIGNED_SHORT_5_6_5;\n\t\t\tif (p === ByteType) return gl.BYTE;\n\t\t\tif (p === ShortType) return gl.SHORT;\n\t\t\tif (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n\t\t\tif (p === IntType) return gl.INT;\n\t\t\tif (p === UnsignedIntType) return gl.UNSIGNED_INT;\n\t\t\tif (p === FloatType) return gl.FLOAT;\n\n\t\t\tif (p === HalfFloatType) {\n\t\t\t\tif (isWebGL2) return gl.HALF_FLOAT;\n\t\t\t\textension = extensions.get('OES_texture_half_float');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === AlphaFormat) return gl.ALPHA;\n\t\t\tif (p === RGBFormat) return gl.RGB;\n\t\t\tif (p === RGBAFormat) return gl.RGBA;\n\t\t\tif (p === LuminanceFormat) return gl.LUMINANCE;\n\t\t\tif (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n\t\t\tif (p === DepthFormat) return gl.DEPTH_COMPONENT;\n\t\t\tif (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n\t\t\tif (p === RedFormat) return gl.RED; // WebGL2 formats.\n\n\t\t\tif (p === RedIntegerFormat) return gl.RED_INTEGER;\n\t\t\tif (p === RGFormat) return gl.RG;\n\t\t\tif (p === RGIntegerFormat) return gl.RG_INTEGER;\n\t\t\tif (p === RGBIntegerFormat) return gl.RGB_INTEGER;\n\t\t\tif (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\n\n\t\t\tif (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_ETC1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc1');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_ETC2_Format) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\t\tif (p === RGBA_ETC2_EAC_Format) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format || p === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format || p === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format || p === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format || p === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format || p === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_astc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\t// TODO Complete?\n\t\t\t\t\treturn p;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGBA_BPTC_Format) {\n\t\t\t\textension = extensions.get('EXT_texture_compression_bptc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\t// TODO Complete?\n\t\t\t\t\treturn p;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === UnsignedInt248Type) {\n\t\t\t\tif (isWebGL2) return gl.UNSIGNED_INT_24_8;\n\t\t\t\textension = extensions.get('WEBGL_depth_texture');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tconvert: convert\n\t\t};\n\t}\n\n\tclass ArrayCamera extends PerspectiveCamera {\n\t\tconstructor(array = []) {\n\t\t\tsuper();\n\t\t\tthis.cameras = array;\n\t\t}\n\n\t}\n\n\tArrayCamera.prototype.isArrayCamera = true;\n\n\tclass Group extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Group';\n\t\t}\n\n\t}\n\n\tGroup.prototype.isGroup = true;\n\n\tconst _moveEvent = {\n\t\ttype: 'move'\n\t};\n\n\tclass WebXRController {\n\t\tconstructor() {\n\t\t\tthis._targetRay = null;\n\t\t\tthis._grip = null;\n\t\t\tthis._hand = null;\n\t\t}\n\n\t\tgetHandSpace() {\n\t\t\tif (this._hand === null) {\n\t\t\t\tthis._hand = new Group();\n\t\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\t\tthis._hand.visible = false;\n\t\t\t\tthis._hand.joints = {};\n\t\t\t\tthis._hand.inputState = {\n\t\t\t\t\tpinching: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn this._hand;\n\t\t}\n\n\t\tgetTargetRaySpace() {\n\t\t\tif (this._targetRay === null) {\n\t\t\t\tthis._targetRay = new Group();\n\t\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\t\t\t}\n\n\t\t\treturn this._targetRay;\n\t\t}\n\n\t\tgetGripSpace() {\n\t\t\tif (this._grip === null) {\n\t\t\t\tthis._grip = new Group();\n\t\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\t\tthis._grip.visible = false;\n\t\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\t\tthis._grip.angularVelocity = new Vector3();\n\t\t\t}\n\n\t\t\treturn this._grip;\n\t\t}\n\n\t\tdispatchEvent(event) {\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.dispatchEvent(event);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tdisconnect(inputSource) {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'disconnected',\n\t\t\t\tdata: inputSource\n\t\t\t});\n\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.visible = false;\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.visible = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tupdate(inputSource, frame, referenceSpace) {\n\t\t\tlet inputPose = null;\n\t\t\tlet gripPose = null;\n\t\t\tlet handPose = null;\n\t\t\tconst targetRay = this._targetRay;\n\t\t\tconst grip = this._grip;\n\t\t\tconst hand = this._hand;\n\n\t\t\tif (inputSource && frame.session.visibilityState !== 'visible-blurred') {\n\t\t\t\tif (targetRay !== null) {\n\t\t\t\t\tinputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n\n\t\t\t\t\tif (inputPose !== null) {\n\t\t\t\t\t\ttargetRay.matrix.fromArray(inputPose.transform.matrix);\n\t\t\t\t\t\ttargetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\n\n\t\t\t\t\t\tif (inputPose.linearVelocity) {\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\t\ttargetRay.linearVelocity.copy(inputPose.linearVelocity);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (inputPose.angularVelocity) {\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\t\ttargetRay.angularVelocity.copy(inputPose.angularVelocity);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.dispatchEvent(_moveEvent);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hand && inputSource.hand) {\n\t\t\t\t\thandPose = true;\n\n\t\t\t\t\tfor (const inputjoint of inputSource.hand.values()) {\n\t\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\t\tconst jointPose = frame.getJointPose(inputjoint, referenceSpace);\n\n\t\t\t\t\t\tif (hand.joints[inputjoint.jointName] === undefined) {\n\t\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\t\thand.joints[inputjoint.jointName] = joint; // ??\n\n\t\t\t\t\t\t\thand.add(joint);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst joint = hand.joints[inputjoint.jointName];\n\n\t\t\t\t\t\tif (jointPose !== null) {\n\t\t\t\t\t\t\tjoint.matrix.fromArray(jointPose.transform.matrix);\n\t\t\t\t\t\t\tjoint.matrix.decompose(joint.position, joint.rotation, joint.scale);\n\t\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjoint.visible = jointPose !== null;\n\t\t\t\t\t} // Custom events\n\t\t\t\t\t// Check pinchz\n\n\n\t\t\t\t\tconst indexTip = hand.joints['index-finger-tip'];\n\t\t\t\t\tconst thumbTip = hand.joints['thumb-tip'];\n\t\t\t\t\tconst distance = indexTip.position.distanceTo(thumbTip.position);\n\t\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\t\tif (hand.inputState.pinching && distance > distanceToPinch + threshold) {\n\t\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\n\t\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (grip !== null && inputSource.gripSpace) {\n\t\t\t\t\t\tgripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\n\n\t\t\t\t\t\tif (gripPose !== null) {\n\t\t\t\t\t\t\tgrip.matrix.fromArray(gripPose.transform.matrix);\n\t\t\t\t\t\t\tgrip.matrix.decompose(grip.position, grip.rotation, grip.scale);\n\n\t\t\t\t\t\t\tif (gripPose.linearVelocity) {\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\t\tgrip.linearVelocity.copy(gripPose.linearVelocity);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (gripPose.angularVelocity) {\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\t\tgrip.angularVelocity.copy(gripPose.angularVelocity);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (targetRay !== null) {\n\t\t\t\ttargetRay.visible = inputPose !== null;\n\t\t\t}\n\n\t\t\tif (grip !== null) {\n\t\t\t\tgrip.visible = gripPose !== null;\n\t\t\t}\n\n\t\t\tif (hand !== null) {\n\t\t\t\thand.visible = handPose !== null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass WebXRManager extends EventDispatcher {\n\t\tconstructor(renderer, gl) {\n\t\t\tsuper();\n\t\t\tconst scope = this;\n\t\t\tconst state = renderer.state;\n\t\t\tlet session = null;\n\t\t\tlet framebufferScaleFactor = 1.0;\n\t\t\tlet referenceSpace = null;\n\t\t\tlet referenceSpaceType = 'local-floor';\n\t\t\tlet pose = null;\n\t\t\tlet glBinding = null;\n\t\t\tlet glFramebuffer = null;\n\t\t\tlet glProjLayer = null;\n\t\t\tconst controllers = [];\n\t\t\tconst inputSourcesMap = new Map(); //\n\n\t\t\tconst cameraL = new PerspectiveCamera();\n\t\t\tcameraL.layers.enable(1);\n\t\t\tcameraL.viewport = new Vector4();\n\t\t\tconst cameraR = new PerspectiveCamera();\n\t\t\tcameraR.layers.enable(2);\n\t\t\tcameraR.viewport = new Vector4();\n\t\t\tconst cameras = [cameraL, cameraR];\n\t\t\tconst cameraVR = new ArrayCamera();\n\t\t\tcameraVR.layers.enable(1);\n\t\t\tcameraVR.layers.enable(2);\n\t\t\tlet _currentDepthNear = null;\n\t\t\tlet _currentDepthFar = null; //\n\n\t\t\tthis.cameraAutoUpdate = true;\n\t\t\tthis.enabled = false;\n\t\t\tthis.isPresenting = false;\n\n\t\t\tthis.getController = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getTargetRaySpace();\n\t\t\t};\n\n\t\t\tthis.getControllerGrip = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getGripSpace();\n\t\t\t};\n\n\t\t\tthis.getHand = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getHandSpace();\n\t\t\t}; //\n\n\n\t\t\tfunction onSessionEvent(event) {\n\t\t\t\tconst controller = inputSourcesMap.get(event.inputSource);\n\n\t\t\t\tif (controller) {\n\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\ttype: event.type,\n\t\t\t\t\t\tdata: event.inputSource\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onSessionEnd() {\n\t\t\t\tinputSourcesMap.forEach(function (controller, inputSource) {\n\t\t\t\t\tcontroller.disconnect(inputSource);\n\t\t\t\t});\n\t\t\t\tinputSourcesMap.clear();\n\t\t\t\t_currentDepthNear = null;\n\t\t\t\t_currentDepthFar = null; // restore framebuffer/rendering state\n\n\t\t\t\tstate.bindXRFramebuffer(null);\n\t\t\t\trenderer.setRenderTarget(renderer.getRenderTarget()); //\n\n\t\t\t\tanimation.stop();\n\t\t\t\tscope.isPresenting = false;\n\t\t\t\tscope.dispatchEvent({\n\t\t\t\t\ttype: 'sessionend'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.setFramebufferScaleFactor = function (value) {\n\t\t\t\tframebufferScaleFactor = value;\n\n\t\t\t\tif (scope.isPresenting === true) {\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.setReferenceSpaceType = function (value) {\n\t\t\t\treferenceSpaceType = value;\n\n\t\t\t\tif (scope.isPresenting === true) {\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.getReferenceSpace = function () {\n\t\t\t\treturn referenceSpace;\n\t\t\t};\n\n\t\t\tthis.getSession = function () {\n\t\t\t\treturn session;\n\t\t\t};\n\n\t\t\tthis.setSession = async function (value) {\n\t\t\t\tsession = value;\n\n\t\t\t\tif (session !== null) {\n\t\t\t\t\tsession.addEventListener('select', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('selectstart', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('selectend', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeeze', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeezestart', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeezeend', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('end', onSessionEnd);\n\t\t\t\t\tsession.addEventListener('inputsourceschange', onInputSourcesChange);\n\t\t\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\t\t\tif (attributes.xrCompatible !== true) {\n\t\t\t\t\t\tawait gl.makeXRCompatible();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (session.renderState.layers === undefined) {\n\t\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t}; // eslint-disable-next-line no-undef\n\n\t\t\t\t\t\tconst baseLayer = new XRWebGLLayer(session, gl, layerInit);\n\t\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\t\tbaseLayer: baseLayer\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet depthFormat = 0;\n\n\t\t\t\t\t\tif (attributes.depth) {\n\t\t\t\t\t\t\tdepthFormat = attributes.stencil ? gl.DEPTH_STENCIL : gl.DEPTH_COMPONENT;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\t\tcolorFormat: attributes.alpha ? gl.RGBA : gl.RGB,\n\t\t\t\t\t\t\tdepthFormat: depthFormat,\n\t\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t}; // eslint-disable-next-line no-undef\n\n\t\t\t\t\t\tglBinding = new XRWebGLBinding(session, gl);\n\t\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer(projectionlayerInit);\n\t\t\t\t\t\tglFramebuffer = gl.createFramebuffer();\n\t\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\t\tlayers: [glProjLayer]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treferenceSpace = await session.requestReferenceSpace(referenceSpaceType);\n\t\t\t\t\tanimation.setContext(session);\n\t\t\t\t\tanimation.start();\n\t\t\t\t\tscope.isPresenting = true;\n\t\t\t\t\tscope.dispatchEvent({\n\t\t\t\t\t\ttype: 'sessionstart'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfunction onInputSourcesChange(event) {\n\t\t\t\tconst inputSources = session.inputSources; // Assign inputSources to available controllers\n\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\n\t\t\t\t\tinputSourcesMap.set(inputSources[i], controllers[i]);\n\t\t\t\t} // Notify disconnected\n\n\n\t\t\t\tfor (let i = 0; i < event.removed.length; i++) {\n\t\t\t\t\tconst inputSource = event.removed[i];\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\n\n\t\t\t\t\tif (controller) {\n\t\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'disconnected',\n\t\t\t\t\t\t\tdata: inputSource\n\t\t\t\t\t\t});\n\t\t\t\t\t\tinputSourcesMap.delete(inputSource);\n\t\t\t\t\t}\n\t\t\t\t} // Notify connected\n\n\n\t\t\t\tfor (let i = 0; i < event.added.length; i++) {\n\t\t\t\t\tconst inputSource = event.added[i];\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\n\n\t\t\t\t\tif (controller) {\n\t\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'connected',\n\t\t\t\t\t\t\tdata: inputSource\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tconst cameraLPos = new Vector3();\n\t\t\tconst cameraRPos = new Vector3();\n\t\t\t/**\n\t\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t\t * the cameras' projection and world matrices have already been set.\n\t\t\t * And that near and far planes are identical for both cameras.\n\t\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t\t */\n\n\t\t\tfunction setProjectionFromUnion(camera, cameraL, cameraR) {\n\t\t\t\tcameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n\t\t\t\tcameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n\t\t\t\tconst ipd = cameraLPos.distanceTo(cameraRPos);\n\t\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\t\tconst projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n\t\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t\t// Use the left camera for these values.\n\n\t\t\t\tconst near = projL[14] / (projL[10] - 1);\n\t\t\t\tconst far = projL[14] / (projL[10] + 1);\n\t\t\t\tconst topFov = (projL[9] + 1) / projL[5];\n\t\t\t\tconst bottomFov = (projL[9] - 1) / projL[5];\n\t\t\t\tconst leftFov = (projL[8] - 1) / projL[0];\n\t\t\t\tconst rightFov = (projR[8] + 1) / projR[0];\n\t\t\t\tconst left = near * leftFov;\n\t\t\t\tconst right = near * rightFov; // Calculate the new camera's position offset from the\n\t\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\n\t\t\t\tconst zOffset = ipd / (-leftFov + rightFov);\n\t\t\t\tconst xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n\t\t\t\tcameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n\t\t\t\tcamera.translateX(xOffset);\n\t\t\t\tcamera.translateZ(zOffset);\n\t\t\t\tcamera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\n\t\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t\t// although must now be relative to the new union camera.\n\n\t\t\t\tconst near2 = near + zOffset;\n\t\t\t\tconst far2 = far + zOffset;\n\t\t\t\tconst left2 = left - xOffset;\n\t\t\t\tconst right2 = right + (ipd - xOffset);\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\t\t\t\tcamera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n\t\t\t}\n\n\t\t\tfunction updateCamera(camera, parent) {\n\t\t\t\tif (parent === null) {\n\t\t\t\t\tcamera.matrixWorld.copy(camera.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tcamera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n\t\t\t\t}\n\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n\t\t\t}\n\n\t\t\tthis.updateCamera = function (camera) {\n\t\t\t\tif (session === null) return;\n\t\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\t\tif (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\n\t\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t\t});\n\t\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t\t_currentDepthFar = cameraVR.far;\n\t\t\t\t}\n\n\t\t\t\tconst parent = camera.parent;\n\t\t\t\tconst cameras = cameraVR.cameras;\n\t\t\t\tupdateCamera(cameraVR, parent);\n\n\t\t\t\tfor (let i = 0; i < cameras.length; i++) {\n\t\t\t\t\tupdateCamera(cameras[i], parent);\n\t\t\t\t}\n\n\t\t\t\tcameraVR.matrixWorld.decompose(cameraVR.position, cameraVR.quaternion, cameraVR.scale); // update user camera and its children\n\n\t\t\t\tcamera.position.copy(cameraVR.position);\n\t\t\t\tcamera.quaternion.copy(cameraVR.quaternion);\n\t\t\t\tcamera.scale.copy(cameraVR.scale);\n\t\t\t\tcamera.matrix.copy(cameraVR.matrix);\n\t\t\t\tcamera.matrixWorld.copy(cameraVR.matrixWorld);\n\t\t\t\tconst children = camera.children;\n\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchildren[i].updateMatrixWorld(true);\n\t\t\t\t} // update projection matrix for proper view frustum culling\n\n\n\t\t\t\tif (cameras.length === 2) {\n\t\t\t\t\tsetProjectionFromUnion(cameraVR, cameraL, cameraR);\n\t\t\t\t} else {\n\t\t\t\t\t// assume single camera setup (AR)\n\t\t\t\t\tcameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.getCamera = function () {\n\t\t\t\treturn cameraVR;\n\t\t\t}; // Animation Loop\n\n\n\t\t\tlet onAnimationFrameCallback = null;\n\n\t\t\tfunction onAnimationFrame(time, frame) {\n\t\t\t\tpose = frame.getViewerPose(referenceSpace);\n\n\t\t\t\tif (pose !== null) {\n\t\t\t\t\tconst views = pose.views;\n\t\t\t\t\tconst baseLayer = session.renderState.baseLayer;\n\n\t\t\t\t\tif (session.renderState.layers === undefined) {\n\t\t\t\t\t\tstate.bindXRFramebuffer(baseLayer.framebuffer);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\t\tif (views.length !== cameraVR.cameras.length) {\n\t\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\t\tcameraVRNeedsUpdate = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < views.length; i++) {\n\t\t\t\t\t\tconst view = views[i];\n\t\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\t\tif (session.renderState.layers === undefined) {\n\t\t\t\t\t\t\tviewport = baseLayer.getViewport(view);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage(glProjLayer, view);\n\t\t\t\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, glFramebuffer);\n\t\t\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glSubImage.colorTexture, 0);\n\n\t\t\t\t\t\t\tif (glSubImage.depthStencilTexture !== undefined) {\n\t\t\t\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, glSubImage.depthStencilTexture, 0);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\t\t\t\tstate.bindXRFramebuffer(glFramebuffer);\n\t\t\t\t\t\t\tviewport = glSubImage.viewport;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst camera = cameras[i];\n\t\t\t\t\t\tcamera.matrix.fromArray(view.transform.matrix);\n\t\t\t\t\t\tcamera.projectionMatrix.fromArray(view.projectionMatrix);\n\t\t\t\t\t\tcamera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\tcameraVR.matrix.copy(camera.matrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (cameraVRNeedsUpdate === true) {\n\t\t\t\t\t\t\tcameraVR.cameras.push(camera);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} //\n\n\n\t\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\n\t\t\t\t\tconst controller = controllers[i];\n\t\t\t\t\tconst inputSource = inputSources[i];\n\t\t\t\t\tcontroller.update(inputSource, frame, referenceSpace);\n\t\t\t\t}\n\n\t\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n\t\t\t}\n\n\t\t\tconst animation = new WebGLAnimation();\n\t\t\tanimation.setAnimationLoop(onAnimationFrame);\n\n\t\t\tthis.setAnimationLoop = function (callback) {\n\t\t\t\tonAnimationFrameCallback = callback;\n\t\t\t};\n\n\t\t\tthis.dispose = function () {};\n\t\t}\n\n\t}\n\n\tfunction WebGLMaterials(properties) {\n\t\tfunction refreshFogUniforms(uniforms, fog) {\n\t\t\tuniforms.fogColor.value.copy(fog.color);\n\n\t\t\tif (fog.isFog) {\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\t\t\t} else if (fog.isFogExp2) {\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshMaterialUniforms(uniforms, material, pixelRatio, height, transmissionRenderTarget) {\n\t\t\tif (material.isMeshBasicMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t} else if (material.isMeshLambertMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsLambert(uniforms, material);\n\t\t\t} else if (material.isMeshToonMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsToon(uniforms, material);\n\t\t\t} else if (material.isMeshPhongMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsPhong(uniforms, material);\n\t\t\t} else if (material.isMeshStandardMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\n\t\t\t\tif (material.isMeshPhysicalMaterial) {\n\t\t\t\t\trefreshUniformsPhysical(uniforms, material, transmissionRenderTarget);\n\t\t\t\t} else {\n\t\t\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isMeshMatcapMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsMatcap(uniforms, material);\n\t\t\t} else if (material.isMeshDepthMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDepth(uniforms, material);\n\t\t\t} else if (material.isMeshDistanceMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDistance(uniforms, material);\n\t\t\t} else if (material.isMeshNormalMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsNormal(uniforms, material);\n\t\t\t} else if (material.isLineBasicMaterial) {\n\t\t\t\trefreshUniformsLine(uniforms, material);\n\n\t\t\t\tif (material.isLineDashedMaterial) {\n\t\t\t\t\trefreshUniformsDash(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isPointsMaterial) {\n\t\t\t\trefreshUniformsPoints(uniforms, material, pixelRatio, height);\n\t\t\t} else if (material.isSpriteMaterial) {\n\t\t\t\trefreshUniformsSprites(uniforms, material);\n\t\t\t} else if (material.isShadowMaterial) {\n\t\t\t\tuniforms.color.value.copy(material.color);\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\t} else if (material.isShaderMaterial) {\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsCommon(uniforms, material) {\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif (material.color) {\n\t\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\t}\n\n\t\t\tif (material.emissive) {\n\t\t\t\tuniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n\t\t\t}\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (material.specularMap) {\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t}\n\n\t\t\tconst envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\tuniforms.envMap.value = envMap;\n\t\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture && envMap._needsFlipEnvMap ? -1 : 1;\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tconst maxMipLevel = properties.get(envMap).__maxMipLevel;\n\n\t\t\t\tif (maxMipLevel !== undefined) {\n\t\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (material.lightMap) {\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\t\t\t}\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. displacementMap map\n\t\t\t// 4. normal map\n\t\t\t// 5. bump map\n\t\t\t// 6. roughnessMap map\n\t\t\t// 7. metalnessMap map\n\t\t\t// 8. alphaMap map\n\t\t\t// 9. emissiveMap map\n\t\t\t// 10. clearcoat map\n\t\t\t// 11. clearcoat normal map\n\t\t\t// 12. clearcoat roughnessMap map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.specularMap) {\n\t\t\t\tuvScaleMap = material.specularMap;\n\t\t\t} else if (material.displacementMap) {\n\t\t\t\tuvScaleMap = material.displacementMap;\n\t\t\t} else if (material.normalMap) {\n\t\t\t\tuvScaleMap = material.normalMap;\n\t\t\t} else if (material.bumpMap) {\n\t\t\t\tuvScaleMap = material.bumpMap;\n\t\t\t} else if (material.roughnessMap) {\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\t\t\t} else if (material.metalnessMap) {\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t} else if (material.emissiveMap) {\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\t\t\t} else if (material.clearcoatMap) {\n\t\t\t\tuvScaleMap = material.clearcoatMap;\n\t\t\t} else if (material.clearcoatNormalMap) {\n\t\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\t\t\t} else if (material.clearcoatRoughnessMap) {\n\t\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uvScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t} // uv repeat and offset setting priorities for uv2\n\t\t\t// 1. ao map\n\t\t\t// 2. light map\n\n\n\t\t\tlet uv2ScaleMap;\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuv2ScaleMap = material.aoMap;\n\t\t\t} else if (material.lightMap) {\n\t\t\t\tuv2ScaleMap = material.lightMap;\n\t\t\t}\n\n\t\t\tif (uv2ScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uv2ScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uv2ScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuv2ScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLine(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t}\n\n\t\tfunction refreshUniformsDash(uniforms, material) {\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\t\t}\n\n\t\tfunction refreshUniformsPoints(uniforms, material, pixelRatio, height) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * pixelRatio;\n\t\t\tuniforms.scale.value = height * 0.5;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsSprites(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLambert(uniforms, material) {\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhong(uniforms, material) {\n\t\t\tuniforms.specular.value.copy(material.specular);\n\t\t\tuniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsToon(uniforms, material) {\n\t\t\tif (material.gradientMap) {\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsStandard(uniforms, material) {\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif (material.roughnessMap) {\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\t\t\t}\n\n\t\t\tif (material.metalnessMap) {\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tconst envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhysical(uniforms, material, transmissionRenderTarget) {\n\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\t\tif (material.sheen) uniforms.sheen.value.copy(material.sheen);\n\n\t\t\tif (material.clearcoatMap) {\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\t\t\t}\n\n\t\t\tif (material.clearcoatRoughnessMap) {\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\t\t\t}\n\n\t\t\tif (material.clearcoatNormalMap) {\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif (material.side === BackSide) {\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\n\t\t\tif (material.transmissionMap) {\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\t\t\t}\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\t\tuniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width, transmissionRenderTarget.height);\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif (material.thicknessMap) {\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy(material.attenuationColor);\n\t\t}\n\n\t\tfunction refreshUniformsMatcap(uniforms, material) {\n\t\t\tif (material.matcap) {\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDepth(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDistance(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy(material.referencePosition);\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\t\t}\n\n\t\tfunction refreshUniformsNormal(uniforms, material) {\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trefreshFogUniforms: refreshFogUniforms,\n\t\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t\t};\n\t}\n\n\tfunction createCanvasElement() {\n\t\tconst canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\t\tcanvas.style.display = 'block';\n\t\treturn canvas;\n\t}\n\n\tfunction WebGLRenderer(parameters = {}) {\n\t\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\t\t\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null; // render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = []; // public properties\n\n\t\tthis.domElement = _canvas; // Debug configuration container\n\n\t\tthis.debug = {\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true\n\t\t}; // clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true; // scene graph\n\n\t\tthis.sortObjects = true; // user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false; // physically based shading\n\n\t\tthis.gammaFactor = 2.0; // for backwards compatibility\n\n\t\tthis.outputEncoding = LinearEncoding; // physical lights\n\n\t\tthis.physicallyCorrectLights = false; // tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0; // internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false; // internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\n\t\tlet _currentMaterialId = -1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\n\t\tconst _currentScissor = new Vector4();\n\n\t\tlet _currentScissorTest = null; //\n\n\t\tlet _width = _canvas.width;\n\t\tlet _height = _canvas.height;\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4(0, 0, _width, _height);\n\n\t\tconst _scissor = new Vector4(0, 0, _width, _height);\n\n\t\tlet _scissorTest = false; //\n\n\t\tconst _currentDrawBuffers = []; // frustum\n\n\t\tconst _frustum = new Frustum(); // clipping\n\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false; // transmission\n\n\t\tlet _transmissionRenderTarget = null; // camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = {\n\t\t\tbackground: null,\n\t\t\tfog: null,\n\t\t\tenvironment: null,\n\t\t\toverrideMaterial: null,\n\t\t\tisScene: true\n\t\t};\n\n\t\tfunction getTargetPixelRatio() {\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\t\t} // initialize\n\n\n\t\tlet _gl = _context;\n\n\t\tfunction getContext(contextNames, contextAttributes) {\n\t\t\tfor (let i = 0; i < contextNames.length; i++) {\n\t\t\t\tconst contextName = contextNames[i];\n\n\t\t\t\tconst context = _canvas.getContext(contextName, contextAttributes);\n\n\t\t\t\tif (context !== null) return context;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\ttry {\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t\tpowerPreference: _powerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t\t}; // event listeners must be registered before WebGL context is created, see #12753\n\n\t\t\t_canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\tif (_gl === null) {\n\t\t\t\tconst contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\n\n\t\t\t\tif (_this.isWebGL1Renderer === true) {\n\t\t\t\t\tcontextNames.shift();\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext(contextNames, contextAttributes);\n\n\t\t\t\tif (_gl === null) {\n\t\t\t\t\tif (getContext(contextNames)) {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context with your selected attributes.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n\t\t\tif (_gl.getShaderPrecisionFormat === undefined) {\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'rangeMin': 1,\n\t\t\t\t\t\t'rangeMax': 1,\n\t\t\t\t\t\t'precision': 1\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('THREE.WebGLRenderer: ' + error.message);\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\t\tlet utils, bindingStates;\n\n\t\tfunction initGLContext() {\n\t\t\textensions = new WebGLExtensions(_gl);\n\t\t\tcapabilities = new WebGLCapabilities(_gl, extensions, parameters);\n\t\t\textensions.init(capabilities);\n\t\t\tutils = new WebGLUtils(_gl, extensions, capabilities);\n\t\t\tstate = new WebGLState(_gl, extensions, capabilities);\n\t\t\t_currentDrawBuffers[0] = _gl.BACK;\n\t\t\tinfo = new WebGLInfo(_gl);\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n\t\t\tcubemaps = new WebGLCubeMaps(_this);\n\t\t\tattributes = new WebGLAttributes(_gl, capabilities);\n\t\t\tbindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);\n\t\t\tgeometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\n\t\t\tobjects = new WebGLObjects(_gl, geometries, attributes, info);\n\t\t\tmorphtargets = new WebGLMorphtargets(_gl);\n\t\t\tclipping = new WebGLClipping(properties);\n\t\t\tprogramCache = new WebGLPrograms(_this, cubemaps, extensions, capabilities, bindingStates, clipping);\n\t\t\tmaterials = new WebGLMaterials(properties);\n\t\t\trenderLists = new WebGLRenderLists(properties);\n\t\t\trenderStates = new WebGLRenderStates(extensions, capabilities);\n\t\t\tbackground = new WebGLBackground(_this, cubemaps, state, objects, _premultipliedAlpha);\n\t\t\tshadowMap = new WebGLShadowMap(_this, objects, capabilities);\n\t\t\tbufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tinfo.programs = programCache.programs;\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\t\t}\n\n\t\tinitGLContext(); // xr\n\n\t\tconst xr = new WebXRManager(_this, _gl);\n\t\tthis.xr = xr; // API\n\n\t\tthis.getContext = function () {\n\t\t\treturn _gl;\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\t\t\treturn _gl.getContextAttributes();\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.loseContext();\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.restoreContext();\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\t\t\treturn _pixelRatio;\n\t\t};\n\n\t\tthis.setPixelRatio = function (value) {\n\t\t\tif (value === undefined) return;\n\t\t\t_pixelRatio = value;\n\t\t\tthis.setSize(_width, _height, false);\n\t\t};\n\n\t\tthis.getSize = function (target) {\n\t\t\treturn target.set(_width, _height);\n\t\t};\n\n\t\tthis.setSize = function (width, height, updateStyle) {\n\t\t\tif (xr.isPresenting) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_canvas.width = Math.floor(width * _pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * _pixelRatio);\n\n\t\t\tif (updateStyle !== false) {\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\t\t\t}\n\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function (target) {\n\t\t\treturn target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function (width, height, pixelRatio) {\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_pixelRatio = pixelRatio;\n\t\t\t_canvas.width = Math.floor(width * pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * pixelRatio);\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getCurrentViewport = function (target) {\n\t\t\treturn target.copy(_currentViewport);\n\t\t};\n\n\t\tthis.getViewport = function (target) {\n\t\t\treturn target.copy(_viewport);\n\t\t};\n\n\t\tthis.setViewport = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_viewport.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_viewport.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissor = function (target) {\n\t\t\treturn target.copy(_scissor);\n\t\t};\n\n\t\tthis.setScissor = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_scissor.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_scissor.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\t\t\treturn _scissorTest;\n\t\t};\n\n\t\tthis.setScissorTest = function (boolean) {\n\t\t\tstate.setScissorTest(_scissorTest = boolean);\n\t\t};\n\n\t\tthis.setOpaqueSort = function (method) {\n\t\t\t_opaqueSort = method;\n\t\t};\n\n\t\tthis.setTransparentSort = function (method) {\n\t\t\t_transparentSort = method;\n\t\t}; // Clearing\n\n\n\t\tthis.getClearColor = function (target) {\n\t\t\treturn target.copy(background.getClearColor());\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\t\t\tbackground.setClearColor.apply(background, arguments);\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\t\t\treturn background.getClearAlpha();\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\t\t\tbackground.setClearAlpha.apply(background, arguments);\n\t\t};\n\n\t\tthis.clear = function (color, depth, stencil) {\n\t\t\tlet bits = 0;\n\t\t\tif (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear(bits);\n\t\t};\n\n\t\tthis.clearColor = function () {\n\t\t\tthis.clear(true, false, false);\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\t\t\tthis.clear(false, true, false);\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\t\t\tthis.clear(false, false, true);\n\t\t}; //\n\n\n\t\tthis.dispose = function () {\n\t\t\t_canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\txr.dispose();\n\t\t\txr.removeEventListener('sessionstart', onXRSessionStart);\n\t\t\txr.removeEventListener('sessionend', onXRSessionEnd);\n\n\t\t\tif (_transmissionRenderTarget) {\n\t\t\t\t_transmissionRenderTarget.dispose();\n\n\t\t\t\t_transmissionRenderTarget = null;\n\t\t\t}\n\n\t\t\tanimation.stop();\n\t\t}; // Events\n\n\n\t\tfunction onContextLost(event) {\n\t\t\tevent.preventDefault();\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Lost.');\n\t\t\t_isContextLost = true;\n\t\t}\n\n\t\tfunction onContextRestore()\n\t\t/* event */\n\t\t{\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Restored.');\n\t\t\t_isContextLost = false;\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\t\t\tinitGLContext();\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\t\t}\n\n\t\tfunction onMaterialDispose(event) {\n\t\t\tconst material = event.target;\n\t\t\tmaterial.removeEventListener('dispose', onMaterialDispose);\n\t\t\tdeallocateMaterial(material);\n\t\t} // Buffer deallocation\n\n\n\t\tfunction deallocateMaterial(material) {\n\t\t\treleaseMaterialProgramReferences(material);\n\t\t\tproperties.remove(material);\n\t\t}\n\n\t\tfunction releaseMaterialProgramReferences(material) {\n\t\t\tconst programs = properties.get(material).programs;\n\n\t\t\tif (programs !== undefined) {\n\t\t\t\tprograms.forEach(function (program) {\n\t\t\t\t\tprogramCache.releaseProgram(program);\n\t\t\t\t});\n\t\t\t}\n\t\t} // Buffer rendering\n\n\n\t\tfunction renderObjectImmediate(object, program) {\n\t\t\tobject.render(function (object) {\n\t\t\t\t_this.renderBufferImmediate(object, program);\n\t\t\t});\n\t\t}\n\n\t\tthis.renderBufferImmediate = function (object, program) {\n\t\t\tbindingStates.initAttributes();\n\t\t\tconst buffers = properties.get(object);\n\t\t\tif (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n\t\t\tif (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n\t\t\tif (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n\t\t\tif (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n\t\t\tconst programAttributes = program.getAttributes();\n\n\t\t\tif (object.hasPositions) {\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\n\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.position);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.position, 3, _gl.FLOAT, false, 0, 0);\n\t\t\t}\n\n\t\t\tif (object.hasNormals) {\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\n\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.normal);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.normal, 3, _gl.FLOAT, false, 0, 0);\n\t\t\t}\n\n\t\t\tif (object.hasUvs) {\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\n\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.uv);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.uv, 2, _gl.FLOAT, false, 0, 0);\n\t\t\t}\n\n\t\t\tif (object.hasColors) {\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\n\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.color);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.color, 3, _gl.FLOAT, false, 0, 0);\n\t\t\t}\n\n\t\t\tbindingStates.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n\t\t\tobject.count = 0;\n\t\t};\n\n\t\tthis.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\n\t\t\tif (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n\t\t\tconst program = setProgram(camera, scene, material, object);\n\t\t\tstate.setMaterial(material, frontFaceCW); //\n\n\t\t\tlet index = geometry.index;\n\t\t\tconst position = geometry.attributes.position; //\n\n\t\t\tif (index === null) {\n\t\t\t\tif (position === undefined || position.count === 0) return;\n\t\t\t} else if (index.count === 0) {\n\t\t\t\treturn;\n\t\t\t} //\n\n\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif (material.wireframe === true) {\n\t\t\t\tindex = geometries.getWireframeAttribute(geometry);\n\t\t\t\trangeFactor = 2;\n\t\t\t}\n\n\t\t\tif (material.morphTargets || material.morphNormals) {\n\t\t\t\tmorphtargets.update(object, geometry, material, program);\n\t\t\t}\n\n\t\t\tbindingStates.setup(object, material, program, geometry, index);\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif (index !== null) {\n\t\t\t\tattribute = attributes.get(index);\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex(attribute);\n\t\t\t} //\n\n\n\t\t\tconst dataCount = index !== null ? index.count : position.count;\n\t\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\t\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\t\t\tconst drawStart = Math.max(rangeStart, groupStart);\n\t\t\tconst drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n\t\t\tconst drawCount = Math.max(0, drawEnd - drawStart + 1);\n\t\t\tif (drawCount === 0) return; //\n\n\t\t\tif (object.isMesh) {\n\t\t\t\tif (material.wireframe === true) {\n\t\t\t\t\tstate.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n\t\t\t\t\trenderer.setMode(_gl.LINES);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(_gl.TRIANGLES);\n\t\t\t\t}\n\t\t\t} else if (object.isLine) {\n\t\t\t\tlet lineWidth = material.linewidth;\n\t\t\t\tif (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth(lineWidth * getTargetPixelRatio());\n\n\t\t\t\tif (object.isLineSegments) {\n\t\t\t\t\trenderer.setMode(_gl.LINES);\n\t\t\t\t} else if (object.isLineLoop) {\n\t\t\t\t\trenderer.setMode(_gl.LINE_LOOP);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(_gl.LINE_STRIP);\n\t\t\t\t}\n\t\t\t} else if (object.isPoints) {\n\t\t\t\trenderer.setMode(_gl.POINTS);\n\t\t\t} else if (object.isSprite) {\n\t\t\t\trenderer.setMode(_gl.TRIANGLES);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, object.count);\n\t\t\t} else if (geometry.isInstancedBufferGeometry) {\n\t\t\t\tconst instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, instanceCount);\n\t\t\t} else {\n\t\t\t\trenderer.render(drawStart, drawCount);\n\t\t\t}\n\t\t}; // Compile\n\n\n\t\tthis.compile = function (scene, camera) {\n\t\t\tcurrentRenderState = renderStates.get(scene);\n\t\t\tcurrentRenderState.init();\n\t\t\tscene.traverseVisible(function (object) {\n\t\t\t\tif (object.isLight && object.layers.test(camera.layers)) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tcurrentRenderState.setupLights();\n\t\t\tscene.traverse(function (object) {\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif (material) {\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0; i < material.length; i++) {\n\t\t\t\t\t\t\tconst material2 = material[i];\n\t\t\t\t\t\t\tgetProgram(material2, scene, object);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgetProgram(material, scene, object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}; // Animation Loop\n\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame(time) {\n\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time);\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\t\t\tanimation.stop();\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\t\t\tanimation.start();\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop(onAnimationFrame);\n\t\tif (typeof window !== 'undefined') animation.setContext(window);\n\n\t\tthis.setAnimationLoop = function (callback) {\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop(callback);\n\t\t\tcallback === null ? animation.stop() : animation.start();\n\t\t};\n\n\t\txr.addEventListener('sessionstart', onXRSessionStart);\n\t\txr.addEventListener('sessionend', onXRSessionEnd); // Rendering\n\n\t\tthis.render = function (scene, camera) {\n\t\t\tif (camera !== undefined && camera.isCamera !== true) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_isContextLost === true) return; // update scene graph\n\n\t\t\tif (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n\t\t\tif (camera.parent === null) camera.updateMatrixWorld();\n\n\t\t\tif (xr.enabled === true && xr.isPresenting === true) {\n\t\t\t\tif (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\t\t\t} //\n\n\n\t\t\tif (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\n\t\t\tcurrentRenderState = renderStates.get(scene, renderStateStack.length);\n\t\t\tcurrentRenderState.init();\n\t\t\trenderStateStack.push(currentRenderState);\n\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\t_frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n\t\t\tcurrentRenderList = renderLists.get(scene, renderListStack.length);\n\t\t\tcurrentRenderList.init();\n\t\t\trenderListStack.push(currentRenderList);\n\t\t\tprojectObject(scene, camera, 0, _this.sortObjects);\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif (_this.sortObjects === true) {\n\t\t\t\tcurrentRenderList.sort(_opaqueSort, _transparentSort);\n\t\t\t} //\n\n\n\t\t\tif (_clippingEnabled === true) clipping.beginShadows();\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tshadowMap.render(shadowsArray, scene, camera);\n\t\t\tcurrentRenderState.setupLights();\n\t\t\tcurrentRenderState.setupLightsView(camera);\n\t\t\tif (_clippingEnabled === true) clipping.endShadows(); //\n\n\t\t\tif (this.info.autoReset === true) this.info.reset(); //\n\n\t\t\tbackground.render(currentRenderList, scene); // render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\t\t\tif (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\n\t\t\tif (transmissiveObjects.length > 0) renderTransmissiveObjects(opaqueObjects, transmissiveObjects, scene, camera);\n\t\t\tif (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera); //\n\n\t\t\tif (_currentRenderTarget !== null) {\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\t\t\t\ttextures.updateMultisampleRenderTarget(_currentRenderTarget); // Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap(_currentRenderTarget);\n\t\t\t} //\n\n\n\t\t\tif (scene.isScene === true) scene.onAfterRender(_this, scene, camera); // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest(true);\n\t\t\tstate.buffers.depth.setMask(true);\n\t\t\tstate.buffers.color.setMask(true);\n\t\t\tstate.setPolygonOffset(false); // _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = -1;\n\t\t\t_currentCamera = null;\n\t\t\trenderStateStack.pop();\n\n\t\t\tif (renderStateStack.length > 0) {\n\t\t\t\tcurrentRenderState = renderStateStack[renderStateStack.length - 1];\n\t\t\t} else {\n\t\t\t\tcurrentRenderState = null;\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif (renderListStack.length > 0) {\n\t\t\t\tcurrentRenderList = renderListStack[renderListStack.length - 1];\n\t\t\t} else {\n\t\t\t\tcurrentRenderList = null;\n\t\t\t}\n\t\t};\n\n\t\tfunction projectObject(object, camera, groupOrder, sortObjects) {\n\t\t\tif (object.visible === false) return;\n\t\t\tconst visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible) {\n\t\t\t\tif (object.isGroup) {\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\t\t\t\t} else if (object.isLOD) {\n\t\t\t\t\tif (object.autoUpdate === true) object.update(camera);\n\t\t\t\t} else if (object.isLight) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isSprite) {\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update(object);\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif (material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isImmediateRenderObject) {\n\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push(object, null, object.material, groupOrder, _vector3.z, null);\n\t\t\t\t} else if (object.isMesh || object.isLine || object.isPoints) {\n\t\t\t\t\tif (object.isSkinnedMesh) {\n\t\t\t\t\t\t// update skeleton only once in a frame\n\t\t\t\t\t\tif (object.skeleton.frame !== info.render.frame) {\n\t\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsObject(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update(object);\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\n\t\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, groupMaterial, groupOrder, _vector3.z, group);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tprojectObject(children[i], camera, groupOrder, sortObjects);\n\t\t\t}\n\t\t}\n\n\t\tfunction renderTransmissiveObjects(opaqueObjects, transmissiveObjects, scene, camera) {\n\t\t\tif (_transmissionRenderTarget === null) {\n\t\t\t\tconst needsAntialias = _antialias === true && capabilities.isWebGL2 === true;\n\t\t\t\tconst renderTargetType = needsAntialias ? WebGLMultisampleRenderTarget : WebGLRenderTarget;\n\t\t\t\t_transmissionRenderTarget = new renderTargetType(1024, 1024, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: utils.convert(HalfFloatType) !== null ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\t\twrapS: ClampToEdgeWrapping,\n\t\t\t\t\twrapT: ClampToEdgeWrapping\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\n\t\t\t_this.setRenderTarget(_transmissionRenderTarget);\n\n\t\t\t_this.clear(); // Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\n\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\t\t\trenderObjects(opaqueObjects, scene, camera);\n\t\t\t_this.toneMapping = currentToneMapping;\n\t\t\ttextures.updateMultisampleRenderTarget(_transmissionRenderTarget);\n\t\t\ttextures.updateRenderTargetMipmap(_transmissionRenderTarget);\n\n\t\t\t_this.setRenderTarget(currentRenderTarget);\n\n\t\t\trenderObjects(transmissiveObjects, scene, camera);\n\t\t}\n\n\t\tfunction renderObjects(renderList, scene, camera) {\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor (let i = 0, l = renderList.length; i < l; i++) {\n\t\t\t\tconst renderItem = renderList[i];\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif (camera.isArrayCamera) {\n\t\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\t\tfor (let j = 0, jl = cameras.length; j < jl; j++) {\n\t\t\t\t\t\tconst camera2 = cameras[j];\n\n\t\t\t\t\t\tif (object.layers.test(camera2.layers)) {\n\t\t\t\t\t\t\tstate.viewport(_currentViewport.copy(camera2.viewport));\n\t\t\t\t\t\t\tcurrentRenderState.setupLightsView(camera2);\n\t\t\t\t\t\t\trenderObject(object, scene, camera2, geometry, material, group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trenderObject(object, scene, camera, geometry, material, group);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction renderObject(object, scene, camera, geometry, material, group) {\n\t\t\tobject.onBeforeRender(_this, scene, camera, geometry, material, group);\n\t\t\tobject.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n\t\t\tobject.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n\t\t\tif (object.isImmediateRenderObject) {\n\t\t\t\tconst program = setProgram(camera, scene, material, object);\n\t\t\t\tstate.setMaterial(material);\n\t\t\t\tbindingStates.reset();\n\t\t\t\trenderObjectImmediate(object, program);\n\t\t\t} else {\n\t\t\t\tif (material.transparent === true && material.side === DoubleSide) {\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n\t\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n\t\t\t\t\tmaterial.side = DoubleSide;\n\t\t\t\t} else {\n\t\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tobject.onAfterRender(_this, scene, camera, geometry, material, group);\n\t\t}\n\n\t\tfunction getProgram(material, scene, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tconst lightsStateVersion = lights.state.version;\n\t\t\tconst parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey(parameters);\n\t\t\tlet programs = materialProperties.programs; // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = cubemaps.get(material.envMap || materialProperties.environment);\n\n\t\t\tif (programs === undefined) {\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener('dispose', onMaterialDispose);\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\t\t\t}\n\n\t\t\tlet program = programs.get(programCacheKey);\n\n\t\t\tif (program !== undefined) {\n\t\t\t\t// early out if program and light state is identical\n\t\t\t\tif (materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion) {\n\t\t\t\t\tupdateCommonMaterialProperties(material, parameters);\n\t\t\t\t\treturn program;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tparameters.uniforms = programCache.getUniforms(material);\n\t\t\t\tmaterial.onBuild(parameters, _this);\n\t\t\t\tmaterial.onBeforeCompile(parameters, _this);\n\t\t\t\tprogram = programCache.acquireProgram(parameters, programCacheKey);\n\t\t\t\tprograms.set(programCacheKey, program);\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties(material, parameters); // store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights(material);\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t// wire up the material to this renderer's lighting state\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties(material, parameters) {\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t}\n\n\t\tfunction setProgram(camera, scene, material, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\t\tconst envMap = cubemaps.get(material.envMap || environment);\n\t\t\tconst vertexAlphas = material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4;\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif (_clippingEnabled === true) {\n\t\t\t\tif (_localClippingEnabled === true || camera !== _currentCamera) {\n\t\t\t\t\tconst useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\n\t\t\t\t\tclipping.setState(material, camera, useCache);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif (material.version === materialProperties.__version) {\n\t\t\t\tif (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.outputEncoding !== encoding) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (object.isInstancedMesh && materialProperties.instancing === false) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (!object.isInstancedMesh && materialProperties.instancing === true) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (object.isSkinnedMesh && materialProperties.skinning === false) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (!object.isSkinnedMesh && materialProperties.skinning === true) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.envMap !== envMap) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (material.fog && materialProperties.fog !== fog) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.vertexAlphas !== vertexAlphas) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\t\t\t} //\n\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif (needsProgramChange === true) {\n\t\t\t\tprogram = getProgram(material, scene, object);\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif (state.useProgram(program.program)) {\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\t\t\t}\n\n\t\t\tif (material.id !== _currentMaterialId) {\n\t\t\t\t_currentMaterialId = material.id;\n\t\t\t\trefreshMaterial = true;\n\t\t\t}\n\n\t\t\tif (refreshProgram || _currentCamera !== camera) {\n\t\t\t\tp_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n\t\t\t\tif (capabilities.logarithmicDepthBuffer) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n\t\t\t\t}\n\n\t\t\t\tif (_currentCamera !== camera) {\n\t\t\t\t\t_currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true; // set to true on material change\n\n\t\t\t\t\trefreshLights = true; // remains set until update done\n\t\t\t\t} // load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\n\t\t\t\tif (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif (uCamPos !== undefined) {\n\t\t\t\t\t\tuCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || object.isSkinnedMesh) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n\t\t\t\t}\n\t\t\t} // skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\n\t\t\tif (object.isSkinnedMesh) {\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrix');\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif (skeleton) {\n\t\t\t\t\tif (capabilities.floatVertexTextures) {\n\t\t\t\t\t\tif (skeleton.boneTexture === null) skeleton.computeBoneTexture();\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\n\t\t\t}\n\n\t\t\tif (refreshMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n\n\t\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t\t// the current material requires lighting info\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n\t\t\t\t} // refresh uniforms common to several materials\n\n\n\t\t\t\tif (fog && material.fog) {\n\t\t\t\t\tmaterials.refreshFogUniforms(m_uniforms, fog);\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget);\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t}\n\n\t\t\tif (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\t\t\t}\n\n\t\t\tif (material.isSpriteMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'center', object.center);\n\t\t\t} // common matrices\n\n\n\t\t\tp_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n\t\t\treturn program;\n\t\t} // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n\t\tfunction markUniformsLightsNeedsUpdate(uniforms, value) {\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\t\t}\n\n\t\tfunction materialNeedsLights(material) {\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\t\t\treturn _currentActiveCubeFace;\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\t\t\treturn _currentActiveMipmapLevel;\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\t\t\treturn _currentRenderTarget;\n\t\t};\n\n\t\tthis.setRenderTarget = function (renderTarget, activeCubeFace = 0, activeMipmapLevel = 0) {\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tif (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n\t\t\t\ttextures.setupRenderTarget(renderTarget);\n\t\t\t}\n\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif (renderTarget) {\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif (texture.isDataTexture3D || texture.isDataTexture2DArray) {\n\t\t\t\t\tisRenderTarget3D = true;\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\t\tframebuffer = __webglFramebuffer[activeCubeFace];\n\t\t\t\t\tisCube = true;\n\t\t\t\t} else if (renderTarget.isWebGLMultisampleRenderTarget) {\n\t\t\t\t\tframebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\n\t\t\t\t} else {\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy(renderTarget.viewport);\n\n\t\t\t\t_currentScissor.copy(renderTarget.scissor);\n\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\t\t\t} else {\n\t\t\t\t_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissorTest = _scissorTest;\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\tif (framebufferBound && capabilities.drawBuffers) {\n\t\t\t\tlet needsUpdate = false;\n\n\t\t\t\tif (renderTarget) {\n\t\t\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\n\t\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== textures.length || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\n\t\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\t\t\t\t_currentDrawBuffers[i] = _gl.COLOR_ATTACHMENT0 + i;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_currentDrawBuffers.length = textures.length;\n\t\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\n\t\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.COLOR_ATTACHMENT0;\n\t\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\t\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.BACK) {\n\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.BACK;\n\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (needsUpdate) {\n\t\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\t\t_gl.drawBuffers(_currentDrawBuffers);\n\t\t\t\t\t} else {\n\t\t\t\t\t\textensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(_currentDrawBuffers);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport);\n\t\t\tstate.scissor(_currentScissor);\n\t\t\tstate.setScissorTest(_currentScissorTest);\n\n\t\t\tif (isCube) {\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\n\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\n\t\t\t} else if (isRenderTarget3D) {\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\n\t\t\t\tconst layer = activeCubeFace || 0;\n\n\t\t\t\t_gl.framebufferTextureLayer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer);\n\t\t\t}\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\n\t\t\tif (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\n\t\t\t\tframebuffer = framebuffer[activeCubeFaceIndex];\n\t\t\t}\n\n\t\t\tif (framebuffer) {\n\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = textureType === HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\n\n\t\t\t\t\tif (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t!(textureType === FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t!halfFloatSupportedByExt) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\t\t\tif (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n\t\t\t\t\t\t\t_gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\t\t\t\t\tconst framebuffer = _currentRenderTarget !== null ? properties.get(_currentRenderTarget).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function (position, texture, level = 0) {\n\t\t\tconst levelScale = Math.pow(2, -level);\n\t\t\tconst width = Math.floor(texture.image.width * levelScale);\n\t\t\tconst height = Math.floor(texture.image.height * levelScale);\n\t\t\tlet glFormat = utils.convert(texture.format);\n\n\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\n\t\t\t\t// Not needed in Chrome 93+\n\t\t\t\tif (glFormat === _gl.RGB) glFormat = _gl.RGB8;\n\t\t\t\tif (glFormat === _gl.RGBA) glFormat = _gl.RGBA8;\n\t\t\t}\n\n\t\t\ttextures.setTexture2D(texture, 0);\n\n\t\t\t_gl.copyTexImage2D(_gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0);\n\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.copyTextureToTexture = function (position, srcTexture, dstTexture, level = 0) {\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\n\t\t\tconst glType = utils.convert(dstTexture.type);\n\t\t\ttextures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n\t\t\tif (srcTexture.isDataTexture) {\n\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n\t\t\t} else {\n\t\t\t\tif (srcTexture.isCompressedTexture) {\n\t\t\t\t\t_gl.compressedTexSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image);\n\t\t\t\t}\n\t\t\t} // Generate mipmaps only when copying level 0\n\n\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(_gl.TEXTURE_2D);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function (sourceBox, position, srcTexture, dstTexture, level = 0) {\n\t\t\tif (_this.isWebGL1Renderer) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\n\t\t\tconst glType = utils.convert(dstTexture.type);\n\t\t\tlet glTarget;\n\n\t\t\tif (dstTexture.isDataTexture3D) {\n\t\t\t\ttextures.setTexture3D(dstTexture, 0);\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\t\t\t} else if (dstTexture.isDataTexture2DArray) {\n\t\t\t\ttextures.setTexture2DArray(dstTexture, 0);\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n\t\t\tconst unpackRowLen = _gl.getParameter(_gl.UNPACK_ROW_LENGTH);\n\n\t\t\tconst unpackImageHeight = _gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT);\n\n\t\t\tconst unpackSkipPixels = _gl.getParameter(_gl.UNPACK_SKIP_PIXELS);\n\n\t\t\tconst unpackSkipRows = _gl.getParameter(_gl.UNPACK_SKIP_ROWS);\n\n\t\t\tconst unpackSkipImages = _gl.getParameter(_gl.UNPACK_SKIP_IMAGES);\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[0] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, image.width);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, image.height);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, sourceBox.min.x);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, sourceBox.min.y);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, sourceBox.min.z);\n\n\t\t\tif (srcTexture.isDataTexture || srcTexture.isDataTexture3D) {\n\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data);\n\t\t\t} else {\n\t\t\t\tif (srcTexture.isCompressedTexture) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.');\n\n\t\t\t\t\t_gl.compressedTexSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, unpackRowLen);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, unpackSkipPixels);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, unpackSkipRows);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, unpackSkipImages); // Generate mipmaps only when copying level 0\n\n\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.initTexture = function (texture) {\n\t\t\ttextures.setTexture2D(texture, 0);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.resetState = function () {\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\t\t};\n\n\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\tdetail: this\n\t\t\t})); // eslint-disable-line no-undef\n\n\t\t}\n\t}\n\n\tclass WebGL1Renderer extends WebGLRenderer {}\n\n\tWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\n\tclass FogExp2 {\n\t\tconstructor(color, density = 0.00025) {\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.density = density;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new FogExp2(this.color, this.density);\n\t\t}\n\n\t\ttoJSON()\n\t\t/* meta */\n\t\t{\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\t\t}\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tclass Fog {\n\t\tconstructor(color, near = 1, far = 1000) {\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Fog(this.color, this.near, this.far);\n\t\t}\n\n\t\ttoJSON()\n\t\t/* meta */\n\t\t{\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\t\t}\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tclass Scene extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Scene';\n\t\t\tthis.background = null;\n\t\t\tthis.environment = null;\n\t\t\tthis.fog = null;\n\t\t\tthis.overrideMaterial = null;\n\t\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\t\tdetail: this\n\t\t\t\t})); // eslint-disable-line no-undef\n\n\t\t\t}\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tif (source.background !== null) this.background = source.background.clone();\n\t\t\tif (source.environment !== null) this.environment = source.environment.clone();\n\t\t\tif (source.fog !== null) this.fog = source.fog.clone();\n\t\t\tif (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tif (this.fog !== null) data.object.fog = this.fog.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tScene.prototype.isScene = true;\n\n\tclass InterleavedBuffer {\n\t\tconstructor(array, stride) {\n\t\t\tthis.array = array;\n\t\t\tthis.stride = stride;\n\t\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = {\n\t\t\t\toffset: 0,\n\t\t\t\tcount: -1\n\t\t\t};\n\t\t\tthis.version = 0;\n\t\t\tthis.uuid = generateUUID();\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor (let i = 0, l = this.stride; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(value, offset = 0) {\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t}\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\n\t\t\t}\n\n\t\t\tconst array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\n\t\t\tconst ib = new this.constructor(array, this.stride);\n\t\t\tib.setUsage(this.usage);\n\t\t\treturn ib;\n\t\t}\n\n\t\tonUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t} // generate UUID for array buffer if necessary\n\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer));\n\t\t\t} //\n\n\n\t\t\treturn {\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tstride: this.stride\n\t\t\t};\n\t\t}\n\n\t}\n\n\tInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\n\tconst _vector$6 = /*@__PURE__*/new Vector3();\n\n\tclass InterleavedBufferAttribute {\n\t\tconstructor(interleavedBuffer, itemSize, offset, normalized = false) {\n\t\t\tthis.name = '';\n\t\t\tthis.data = interleavedBuffer;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.offset = offset;\n\t\t\tthis.normalized = normalized === true;\n\t\t}\n\n\t\tget count() {\n\t\t\treturn this.data.count;\n\t\t}\n\n\t\tget array() {\n\t\t\treturn this.data.array;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tthis.data.needsUpdate = value;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tfor (let i = 0, l = this.data.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.applyNormalMatrix(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.transformDirection(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(index, x) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset] = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(index, y) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(index, z) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetW(index, w) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetX(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset];\n\t\t}\n\n\t\tgetY(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 1];\n\t\t}\n\n\t\tgetZ(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 2];\n\t\t}\n\n\t\tgetW(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 3];\n\t\t}\n\n\t\tsetXY(index, x, y) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZ(index, x, y, z) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZW(index, x, y, z, w) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\tthis.data.array[index + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(new this.array.constructor(array), this.itemSize, this.normalized);\n\t\t\t} else {\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.clone(data);\n\t\t\t\t}\n\n\t\t\t\treturn new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t} // deinterleave data and save it as an ordinary buffer attribute for now\n\n\n\t\t\t\treturn {\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// save as true interlaved attribtue\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\tdata: this.data.uuid,\n\t\t\t\t\toffset: this.offset,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t}\n\n\tInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\trotation: <float>,\n\t *\tsizeAttenuation: <bool>\n\t * }\n\t */\n\n\tclass SpriteMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SpriteMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.rotation = 0;\n\t\t\tthis.sizeAttenuation = true;\n\t\t\tthis.transparent = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.rotation = source.rotation;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tlet _geometry;\n\n\tconst _intersectPoint = /*@__PURE__*/new Vector3();\n\n\tconst _worldScale = /*@__PURE__*/new Vector3();\n\n\tconst _mvPosition = /*@__PURE__*/new Vector3();\n\n\tconst _alignedPosition = /*@__PURE__*/new Vector2();\n\n\tconst _rotatedPosition = /*@__PURE__*/new Vector2();\n\n\tconst _viewWorldMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _vA = /*@__PURE__*/new Vector3();\n\n\tconst _vB = /*@__PURE__*/new Vector3();\n\n\tconst _vC = /*@__PURE__*/new Vector3();\n\n\tconst _uvA = /*@__PURE__*/new Vector2();\n\n\tconst _uvB = /*@__PURE__*/new Vector2();\n\n\tconst _uvC = /*@__PURE__*/new Vector2();\n\n\tclass Sprite extends Object3D {\n\t\tconstructor(material) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Sprite';\n\n\t\t\tif (_geometry === undefined) {\n\t\t\t\t_geometry = new BufferGeometry();\n\t\t\t\tconst float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n\t\t\t\tconst interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n\n\t\t\t\t_geometry.setIndex([0, 1, 2, 0, 2, 3]);\n\n\t\t\t\t_geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n\n\t\t\t\t_geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n\t\t\t}\n\n\t\t\tthis.geometry = _geometry;\n\t\t\tthis.material = material !== undefined ? material : new SpriteMaterial();\n\t\t\tthis.center = new Vector2(0.5, 0.5);\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tif (raycaster.camera === null) {\n\t\t\t\tconsole.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\n\t\t\t}\n\n\t\t\t_worldScale.setFromMatrixScale(this.matrixWorld);\n\n\t\t\t_viewWorldMatrix.copy(raycaster.camera.matrixWorld);\n\n\t\t\tthis.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\n\n\t\t\t_mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n\n\t\t\tif (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\n\t\t\t\t_worldScale.multiplyScalar(-_mvPosition.z);\n\t\t\t}\n\n\t\t\tconst rotation = this.material.rotation;\n\t\t\tlet sin, cos;\n\n\t\t\tif (rotation !== 0) {\n\t\t\t\tcos = Math.cos(rotation);\n\t\t\t\tsin = Math.sin(rotation);\n\t\t\t}\n\n\t\t\tconst center = this.center;\n\t\t\ttransformVertex(_vA.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vB.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vC.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t_uvA.set(0, 0);\n\n\t\t\t_uvB.set(1, 0);\n\n\t\t\t_uvC.set(1, 1); // check first triangle\n\n\n\t\t\tlet intersect = raycaster.ray.intersectTriangle(_vA, _vB, _vC, false, _intersectPoint);\n\n\t\t\tif (intersect === null) {\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex(_vB.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t\t_uvB.set(0, 1);\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle(_vA, _vC, _vB, false, _intersectPoint);\n\n\t\t\t\tif (intersect === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: _intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV(_intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2()),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\t\t\t});\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tif (source.center !== undefined) this.center.copy(source.center);\n\t\t\tthis.material = source.material;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSprite.prototype.isSprite = true;\n\n\tfunction transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n\t\t// compute position in camera space\n\t\t_alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n\n\t\tif (sin !== undefined) {\n\t\t\t_rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\n\t\t\t_rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\n\t\t} else {\n\t\t\t_rotatedPosition.copy(_alignedPosition);\n\t\t}\n\n\t\tvertexPosition.copy(mvPosition);\n\t\tvertexPosition.x += _rotatedPosition.x;\n\t\tvertexPosition.y += _rotatedPosition.y; // transform to world space\n\n\t\tvertexPosition.applyMatrix4(_viewWorldMatrix);\n\t}\n\n\tconst _v1$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$1 = /*@__PURE__*/new Vector3();\n\n\tclass LOD extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis._currentLevel = 0;\n\t\t\tthis.type = 'LOD';\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tlevels: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: []\n\t\t\t\t},\n\t\t\t\tisLOD: {\n\t\t\t\t\tvalue: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.autoUpdate = true;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source, false);\n\t\t\tconst levels = source.levels;\n\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tconst level = levels[i];\n\t\t\t\tthis.addLevel(level.object.clone(), level.distance);\n\t\t\t}\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\treturn this;\n\t\t}\n\n\t\taddLevel(object, distance = 0) {\n\t\t\tdistance = Math.abs(distance);\n\t\t\tconst levels = this.levels;\n\t\t\tlet l;\n\n\t\t\tfor (l = 0; l < levels.length; l++) {\n\t\t\t\tif (distance < levels[l].distance) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels.splice(l, 0, {\n\t\t\t\tdistance: distance,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t\tthis.add(object);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetCurrentLevel() {\n\t\t\treturn this._currentLevel;\n\t\t}\n\n\t\tgetObjectForDistance(distance) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance < levels[i].distance) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn levels[i - 1].object;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\t_v1$2.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(_v1$2);\n\t\t\t\tthis.getObjectForDistance(distance).raycast(raycaster, intersects);\n\t\t\t}\n\t\t}\n\n\t\tupdate(camera) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 1) {\n\t\t\t\t_v1$2.setFromMatrixPosition(camera.matrixWorld);\n\n\t\t\t\t_v2$1.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tconst distance = _v1$2.distanceTo(_v2$1) / camera.zoom;\n\t\t\t\tlevels[0].object.visible = true;\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance >= levels[i].distance) {\n\t\t\t\t\t\tlevels[i - 1].object.visible = false;\n\t\t\t\t\t\tlevels[i].object.visible = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._currentLevel = i - 1;\n\n\t\t\t\tfor (; i < l; i++) {\n\t\t\t\t\tlevels[i].object.visible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tif (this.autoUpdate === false) data.object.autoUpdate = false;\n\t\t\tdata.object.levels = [];\n\t\t\tconst levels = this.levels;\n\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tconst level = levels[i];\n\t\t\t\tdata.object.levels.push({\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tconst _basePosition = /*@__PURE__*/new Vector3();\n\n\tconst _skinIndex = /*@__PURE__*/new Vector4();\n\n\tconst _skinWeight = /*@__PURE__*/new Vector4();\n\n\tconst _vector$5 = /*@__PURE__*/new Vector3();\n\n\tconst _matrix = /*@__PURE__*/new Matrix4();\n\n\tclass SkinnedMesh extends Mesh {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'SkinnedMesh';\n\t\t\tthis.bindMode = 'attached';\n\t\t\tthis.bindMatrix = new Matrix4();\n\t\t\tthis.bindMatrixInverse = new Matrix4();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.bindMode = source.bindMode;\n\t\t\tthis.bindMatrix.copy(source.bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(source.bindMatrixInverse);\n\t\t\tthis.skeleton = source.skeleton;\n\t\t\treturn this;\n\t\t}\n\n\t\tbind(skeleton, bindMatrix) {\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif (bindMatrix === undefined) {\n\t\t\t\tthis.updateMatrixWorld(true);\n\t\t\t\tthis.skeleton.calculateInverses();\n\t\t\t\tbindMatrix = this.matrixWorld;\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy(bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(bindMatrix).invert();\n\t\t}\n\n\t\tpose() {\n\t\t\tthis.skeleton.pose();\n\t\t}\n\n\t\tnormalizeSkinWeights() {\n\t\t\tconst vector = new Vector4();\n\t\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor (let i = 0, l = skinWeight.count; i < l; i++) {\n\t\t\t\tvector.x = skinWeight.getX(i);\n\t\t\t\tvector.y = skinWeight.getY(i);\n\t\t\t\tvector.z = skinWeight.getZ(i);\n\t\t\t\tvector.w = skinWeight.getW(i);\n\t\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\t\tif (scale !== Infinity) {\n\t\t\t\t\tvector.multiplyScalar(scale);\n\t\t\t\t} else {\n\t\t\t\t\tvector.set(1, 0, 0, 0); // do something reasonable\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\n\t\t\t}\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\n\t\t\tif (this.bindMode === 'attached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.matrixWorld).invert();\n\t\t\t} else if (this.bindMode === 'detached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.bindMatrix).invert();\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n\t\t\t}\n\t\t}\n\n\t\tboneTransform(index, target) {\n\t\t\tconst skeleton = this.skeleton;\n\t\t\tconst geometry = this.geometry;\n\n\t\t\t_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\n\n\t\t\t_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\n\n\t\t\t_basePosition.fromBufferAttribute(geometry.attributes.position, index).applyMatrix4(this.bindMatrix);\n\n\t\t\ttarget.set(0, 0, 0);\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tconst weight = _skinWeight.getComponent(i);\n\n\t\t\t\tif (weight !== 0) {\n\t\t\t\t\tconst boneIndex = _skinIndex.getComponent(i);\n\n\t\t\t\t\t_matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld, skeleton.boneInverses[boneIndex]);\n\n\t\t\t\t\ttarget.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix), weight);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn target.applyMatrix4(this.bindMatrixInverse);\n\t\t}\n\n\t}\n\n\tSkinnedMesh.prototype.isSkinnedMesh = true;\n\n\tclass Bone extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Bone';\n\t\t}\n\n\t}\n\n\tBone.prototype.isBone = true;\n\n\tclass DataTexture extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding) {\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.image = {\n\t\t\t\tdata: data,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.magFilter = magFilter;\n\t\t\tthis.minFilter = minFilter;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\tconst _offsetMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _identityMatrix = /*@__PURE__*/new Matrix4();\n\n\tclass Skeleton {\n\t\tconstructor(bones = [], boneInverses = []) {\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.bones = bones.slice(0);\n\t\t\tthis.boneInverses = boneInverses;\n\t\t\tthis.boneMatrices = null;\n\t\t\tthis.boneTexture = null;\n\t\t\tthis.boneTextureSize = 0;\n\t\t\tthis.frame = -1;\n\t\t\tthis.init();\n\t\t}\n\n\t\tinit() {\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\t\t\tthis.boneMatrices = new Float32Array(bones.length * 16); // calculate inverse bone matrices if necessary\n\n\t\t\tif (boneInverses.length === 0) {\n\t\t\t\tthis.calculateInverses();\n\t\t\t} else {\n\t\t\t\t// handle special case\n\t\t\t\tif (bones.length !== boneInverses.length) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');\n\t\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\t\t\tthis.boneInverses.push(new Matrix4());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcalculateInverses() {\n\t\t\tthis.boneInverses.length = 0;\n\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst inverse = new Matrix4();\n\n\t\t\t\tif (this.bones[i]) {\n\t\t\t\t\tinverse.copy(this.bones[i].matrixWorld).invert();\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push(inverse);\n\t\t\t}\n\t\t}\n\n\t\tpose() {\n\t\t\t// recover the bind-time world matrices\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone) {\n\t\t\t\t\tbone.matrixWorld.copy(this.boneInverses[i]).invert();\n\t\t\t\t}\n\t\t\t} // compute the local matrices, positions, rotations and scales\n\n\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone) {\n\t\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\t\tbone.matrix.copy(bone.parent.matrixWorld).invert();\n\t\t\t\t\t\tbone.matrix.multiply(bone.matrixWorld);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbone.matrix.copy(bone.matrixWorld);\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\t\t\tconst boneMatrices = this.boneMatrices;\n\t\t\tconst boneTexture = this.boneTexture; // flatten bone matrices to array\n\n\t\t\tfor (let i = 0, il = bones.length; i < il; i++) {\n\t\t\t\t// compute the offset between the current and the original transform\n\t\t\t\tconst matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\n\n\t\t\t\t_offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n\n\t\t\t\t_offsetMatrix.toArray(boneMatrices, i * 16);\n\t\t\t}\n\n\t\t\tif (boneTexture !== null) {\n\t\t\t\tboneTexture.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Skeleton(this.bones, this.boneInverses);\n\t\t}\n\n\t\tcomputeBoneTexture() {\n\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t//\t\t\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t//\twith\t8x8\tpixel texture max\t 16 bones * 4 pixels =\t(8 * 8)\n\t\t\t//\t\t\t 16x16 pixel texture max\t 64 bones * 4 pixels = (16 * 16)\n\t\t\t//\t\t\t 32x32 pixel texture max\t256 bones * 4 pixels = (32 * 32)\n\t\t\t//\t\t\t 64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\t\t\tlet size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n\n\t\t\tsize = ceilPowerOfTwo(size);\n\t\t\tsize = Math.max(size, 4);\n\t\t\tconst boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n\t\t\tboneMatrices.set(this.boneMatrices); // copy current values\n\n\t\t\tconst boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n\t\t\tthis.boneMatrices = boneMatrices;\n\t\t\tthis.boneTexture = boneTexture;\n\t\t\tthis.boneTextureSize = size;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetBoneByName(name) {\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone.name === name) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tdispose() {\n\t\t\tif (this.boneTexture !== null) {\n\t\t\t\tthis.boneTexture.dispose();\n\t\t\t\tthis.boneTexture = null;\n\t\t\t}\n\t\t}\n\n\t\tfromJSON(json, bones) {\n\t\t\tthis.uuid = json.uuid;\n\n\t\t\tfor (let i = 0, l = json.bones.length; i < l; i++) {\n\t\t\t\tconst uuid = json.bones[i];\n\t\t\t\tlet bone = bones[uuid];\n\n\t\t\t\tif (bone === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: No bone found with UUID:', uuid);\n\t\t\t\t\tbone = new Bone();\n\t\t\t\t}\n\n\t\t\t\tthis.bones.push(bone);\n\t\t\t\tthis.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\n\t\t\t}\n\n\t\t\tthis.init();\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Skeleton',\n\t\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t\t},\n\t\t\t\tbones: [],\n\t\t\t\tboneInverses: []\n\t\t\t};\n\t\t\tdata.uuid = this.uuid;\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\n\t\t\tfor (let i = 0, l = bones.length; i < l; i++) {\n\t\t\t\tconst bone = bones[i];\n\t\t\t\tdata.bones.push(bone.uuid);\n\t\t\t\tconst boneInverse = boneInverses[i];\n\t\t\t\tdata.boneInverses.push(boneInverse.toArray());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tconst _instanceLocalMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _instanceWorldMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _instanceIntersects = [];\n\n\tconst _mesh = /*@__PURE__*/new Mesh();\n\n\tclass InstancedMesh extends Mesh {\n\t\tconstructor(geometry, material, count) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.instanceMatrix = new BufferAttribute(new Float32Array(count * 16), 16);\n\t\t\tthis.instanceColor = null;\n\t\t\tthis.count = count;\n\t\t\tthis.frustumCulled = false;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.instanceMatrix.copy(source.instanceMatrix);\n\t\t\tif (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\n\t\t\tthis.count = source.count;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetColorAt(index, color) {\n\t\t\tcolor.fromArray(this.instanceColor.array, index * 3);\n\t\t}\n\n\t\tgetMatrixAt(index, matrix) {\n\t\t\tmatrix.fromArray(this.instanceMatrix.array, index * 16);\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst raycastTimes = this.count;\n\t\t\t_mesh.geometry = this.geometry;\n\t\t\t_mesh.material = this.material;\n\t\t\tif (_mesh.material === undefined) return;\n\n\t\t\tfor (let instanceId = 0; instanceId < raycastTimes; instanceId++) {\n\t\t\t\t// calculate the world matrix for each instance\n\t\t\t\tthis.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n\t\t\t\t_instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\n\n\n\t\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t\t_mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\n\n\n\t\t\t\tfor (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n\t\t\t\t\tconst intersect = _instanceIntersects[i];\n\t\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\t\tintersect.object = this;\n\t\t\t\t\tintersects.push(intersect);\n\t\t\t\t}\n\n\t\t\t\t_instanceIntersects.length = 0;\n\t\t\t}\n\t\t}\n\n\t\tsetColorAt(index, color) {\n\t\t\tif (this.instanceColor === null) {\n\t\t\t\tthis.instanceColor = new BufferAttribute(new Float32Array(this.count * 3), 3);\n\t\t\t}\n\n\t\t\tcolor.toArray(this.instanceColor.array, index * 3);\n\t\t}\n\n\t\tsetMatrixAt(index, matrix) {\n\t\t\tmatrix.toArray(this.instanceMatrix.array, index * 16);\n\t\t}\n\n\t\tupdateMorphTargets() {}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tInstancedMesh.prototype.isInstancedMesh = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\tlinecap: \"round\",\n\t *\tlinejoin: \"round\"\n\t * }\n\t */\n\n\tclass LineBasicMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineBasicMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.linecap = 'round';\n\t\t\tthis.linejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.linewidth = source.linewidth;\n\t\t\tthis.linecap = source.linecap;\n\t\t\tthis.linejoin = source.linejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tconst _start$1 = /*@__PURE__*/new Vector3();\n\n\tconst _end$1 = /*@__PURE__*/new Vector3();\n\n\tconst _inverseMatrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _ray$1 = /*@__PURE__*/new Ray();\n\n\tconst _sphere$1 = /*@__PURE__*/new Sphere();\n\n\tclass Line extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new LineBasicMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Line';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\tcomputeLineDistances() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\t\tconst lineDistances = [0];\n\n\t\t\t\t\tfor (let i = 1, l = positionAttribute.count; i < l; i++) {\n\t\t\t\t\t\t_start$1.fromBufferAttribute(positionAttribute, i - 1);\n\n\t\t\t\t\t\t_end$1.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\tlineDistances[i] = lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i] += _start$1.distanceTo(_end$1);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Line.threshold;\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$1.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$1.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere$1.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$1) === false) return; //\n\n\t\t\t_inverseMatrix$1.copy(matrixWorld).invert();\n\n\t\t\t_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\n\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\t\t\tconst vStart = new Vector3();\n\t\t\tconst vEnd = new Vector3();\n\t\t\tconst interSegment = new Vector3();\n\t\t\tconst interRay = new Vector3();\n\t\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\n\t\t\t\t\t\tconst a = index.getX(i);\n\t\t\t\t\t\tconst b = index.getX(i + 1);\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, a);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, b);\n\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, i);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, i + 1);\n\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tLine.prototype.isLine = true;\n\n\tconst _start = /*@__PURE__*/new Vector3();\n\n\tconst _end = /*@__PURE__*/new Vector3();\n\n\tclass LineSegments extends Line {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'LineSegments';\n\t\t}\n\n\t\tcomputeLineDistances() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\t\tconst lineDistances = [];\n\n\t\t\t\t\tfor (let i = 0, l = positionAttribute.count; i < l; i += 2) {\n\t\t\t\t\t\t_start.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\t_end.fromBufferAttribute(positionAttribute, i + 1);\n\n\t\t\t\t\t\tlineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i + 1] = lineDistances[i] + _start.distanceTo(_end);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineSegments.prototype.isLineSegments = true;\n\n\tclass LineLoop extends Line {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'LineLoop';\n\t\t}\n\n\t}\n\n\tLineLoop.prototype.isLineLoop = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tsize: <float>,\n\t *\tsizeAttenuation: <bool>\n\t *\n\t *\tmorphTargets: <bool>\n\t * }\n\t */\n\n\tclass PointsMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PointsMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.size = 1;\n\t\t\tthis.sizeAttenuation = true;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.size = source.size;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tconst _inverseMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _ray = /*@__PURE__*/new Ray();\n\n\tconst _sphere = /*@__PURE__*/new Sphere();\n\n\tconst _position$2 = /*@__PURE__*/new Vector3();\n\n\tclass Points extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new PointsMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Points';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Points.threshold;\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy(geometry.boundingSphere);\n\n\t\t\t_sphere.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere) === false) return; //\n\n\t\t\t_inverseMatrix.copy(matrixWorld).invert();\n\n\t\t\t_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, il = end; i < il; i++) {\n\t\t\t\t\t\tconst a = index.getX(i);\n\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, a);\n\n\t\t\t\t\t\ttestPoint(_position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end; i < l; i++) {\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\ttestPoint(_position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tPoints.prototype.isPoints = true;\n\n\tfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n\t\tconst rayPointDistanceSq = _ray.distanceSqToPoint(point);\n\n\t\tif (rayPointDistanceSq < localThresholdSq) {\n\t\t\tconst intersectPoint = new Vector3();\n\n\t\t\t_ray.closestPointToPoint(point, intersectPoint);\n\n\t\t\tintersectPoint.applyMatrix4(matrixWorld);\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tdistanceToRay: Math.sqrt(rayPointDistanceSq),\n\t\t\t\tpoint: intersectPoint,\n\t\t\t\tindex: index,\n\t\t\t\tface: null,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t}\n\t}\n\n\tclass VideoTexture extends Texture {\n\t\tconstructor(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\t\tsuper(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.format = format !== undefined ? format : RGBFormat;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tconst scope = this;\n\n\t\t\tfunction updateVideo() {\n\t\t\t\tscope.needsUpdate = true;\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t\t}\n\n\t\t\tif ('requestVideoFrameCallback' in video) {\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.image).copy(this);\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst video = this.image;\n\t\t\tconst hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\n\n\t\t\tif (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n\t\t\t\tthis.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tVideoTexture.prototype.isVideoTexture = true;\n\n\tclass CompressedTexture extends Texture {\n\t\tconstructor(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.mipmaps = mipmaps; // no flipping for cube textures\n\t\t\t// (also flipping doesn't work for compressed textures )\n\n\t\t\tthis.flipY = false; // can't generate mipmaps for compressed textures\n\t\t\t// mips must be embedded in DDS files\n\n\t\t\tthis.generateMipmaps = false;\n\t\t}\n\n\t}\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\tclass CanvasTexture extends Texture {\n\t\tconstructor(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\t\tsuper(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\tclass DepthTexture extends Texture {\n\t\tconstructor(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n\t\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\t\tif (format !== DepthFormat && format !== DepthStencilFormat) {\n\t\t\t\tthrow new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n\t\t\t}\n\n\t\t\tif (type === undefined && format === DepthFormat) type = UnsignedShortType;\n\t\t\tif (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\t\t\tthis.flipY = false;\n\t\t\tthis.generateMipmaps = false;\n\t\t}\n\n\t}\n\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\tclass CircleGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CircleGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tsegments: segments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tsegments = Math.max(3, segments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // center point\n\n\t\t\tvertices.push(0, 0, 0);\n\t\t\tnormals.push(0, 0, 1);\n\t\t\tuvs.push(0.5, 0.5);\n\n\t\t\tfor (let s = 0, i = 3; s <= segments; s++, i += 3) {\n\t\t\t\tconst segment = thetaStart + s / segments * thetaLength; // vertex\n\n\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\tnormals.push(0, 0, 1); // uvs\n\n\t\t\t\tuv.x = (vertices[i] / radius + 1) / 2;\n\t\t\t\tuv.y = (vertices[i + 1] / radius + 1) / 2;\n\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t} // indices\n\n\n\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\tindices.push(i, i + 1, 0);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new CircleGeometry(data.radius, data.segments, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass CylinderGeometry extends BufferGeometry {\n\t\tconstructor(radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CylinderGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradiusTop: radiusTop,\n\t\t\t\tradiusBottom: radiusBottom,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tconst scope = this;\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\theightSegments = Math.floor(heightSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet index = 0;\n\t\t\tconst indexArray = [];\n\t\t\tconst halfHeight = height / 2;\n\t\t\tlet groupStart = 0; // generate geometry\n\n\t\t\tgenerateTorso();\n\n\t\t\tif (openEnded === false) {\n\t\t\t\tif (radiusTop > 0) generateCap(true);\n\t\t\t\tif (radiusBottom > 0) generateCap(false);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction generateTorso() {\n\t\t\t\tconst normal = new Vector3();\n\t\t\t\tconst vertex = new Vector3();\n\t\t\t\tlet groupCount = 0; // this will be used to calculate the normal\n\n\t\t\t\tconst slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n\t\t\t\tfor (let y = 0; y <= heightSegments; y++) {\n\t\t\t\t\tconst indexRow = [];\n\t\t\t\t\tconst v = y / heightSegments; // calculate the radius of the current row\n\n\t\t\t\t\tconst radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n\t\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\n\t\t\t\t\t\tconst u = x / radialSegments;\n\t\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\t\t\t\t\t\tconst sinTheta = Math.sin(theta);\n\t\t\t\t\t\tconst cosTheta = Math.cos(theta); // vertex\n\n\t\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\t\tvertex.y = -v * height + halfHeight;\n\t\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\t\tnormal.set(sinTheta, slope, cosTheta).normalize();\n\t\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\t\tuvs.push(u, 1 - v); // save index of vertex in respective row\n\n\t\t\t\t\t\tindexRow.push(index++);\n\t\t\t\t\t} // now save vertices of the row in our index array\n\n\n\t\t\t\t\tindexArray.push(indexRow);\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\n\t\t\t\t\tfor (let y = 0; y < heightSegments; y++) {\n\t\t\t\t\t\t// we use the index array to access the correct indices\n\t\t\t\t\t\tconst a = indexArray[y][x];\n\t\t\t\t\t\tconst b = indexArray[y + 1][x];\n\t\t\t\t\t\tconst c = indexArray[y + 1][x + 1];\n\t\t\t\t\t\tconst d = indexArray[y][x + 1]; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // update group counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\n\t\t\tfunction generateCap(top) {\n\t\t\t\t// save the index of the first center vertex\n\t\t\t\tconst centerIndexStart = index;\n\t\t\t\tconst uv = new Vector2();\n\t\t\t\tconst vertex = new Vector3();\n\t\t\t\tlet groupCount = 0;\n\t\t\t\tconst radius = top === true ? radiusTop : radiusBottom;\n\t\t\t\tconst sign = top === true ? 1 : -1; // first we generate the center vertex data of the cap.\n\t\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\t\tfor (let x = 1; x <= radialSegments; x++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertices.push(0, halfHeight * sign, 0); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuvs.push(0.5, 0.5); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // save the index of the last center vertex\n\n\n\t\t\t\tconst centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\n\t\t\t\t\tconst u = x / radialSegments;\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\t\t\t\t\tconst cosTheta = Math.cos(theta);\n\t\t\t\t\tconst sinTheta = Math.sin(theta); // vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuv.x = cosTheta * 0.5 + 0.5;\n\t\t\t\t\tuv.y = sinTheta * 0.5 * sign + 0.5;\n\t\t\t\t\tuvs.push(uv.x, uv.y); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\n\t\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\t\tif (top === true) {\n\t\t\t\t\t\t// face top\n\t\t\t\t\t\tindices.push(i, i + 1, c);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// face bottom\n\t\t\t\t\t\tindices.push(i + 1, i, c);\n\t\t\t\t\t}\n\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass ConeGeometry extends CylinderGeometry {\n\t\tconstructor(radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n\t\t\tthis.type = 'ConeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new ConeGeometry(data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass PolyhedronGeometry extends BufferGeometry {\n\t\tconstructor(vertices, indices, radius = 1, detail = 0) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PolyhedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tvertices: vertices,\n\t\t\t\tindices: indices,\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t}; // default buffer data\n\n\t\t\tconst vertexBuffer = [];\n\t\t\tconst uvBuffer = []; // the subdivision creates the vertex buffer data\n\n\t\t\tsubdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n\t\t\tapplyRadius(radius); // finally, create the uv data\n\n\t\t\tgenerateUVs(); // build non-indexed geometry\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n\t\t\tif (detail === 0) {\n\t\t\t\tthis.computeVertexNormals(); // flat normals\n\t\t\t} else {\n\t\t\t\tthis.normalizeNormals(); // smooth normals\n\t\t\t} // helper functions\n\n\n\t\t\tfunction subdivide(detail) {\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\t\tfor (let i = 0; i < indices.length; i += 3) {\n\t\t\t\t\t// get the vertices of the face\n\t\t\t\t\tgetVertexByIndex(indices[i + 0], a);\n\t\t\t\t\tgetVertexByIndex(indices[i + 1], b);\n\t\t\t\t\tgetVertexByIndex(indices[i + 2], c); // perform subdivision\n\n\t\t\t\t\tsubdivideFace(a, b, c, detail);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction subdivideFace(a, b, c, detail) {\n\t\t\t\tconst cols = detail + 1; // we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\t\tconst v = []; // construct all of the vertices for this subdivision\n\n\t\t\t\tfor (let i = 0; i <= cols; i++) {\n\t\t\t\t\tv[i] = [];\n\t\t\t\t\tconst aj = a.clone().lerp(c, i / cols);\n\t\t\t\t\tconst bj = b.clone().lerp(c, i / cols);\n\t\t\t\t\tconst rows = cols - i;\n\n\t\t\t\t\tfor (let j = 0; j <= rows; j++) {\n\t\t\t\t\t\tif (j === 0 && i === cols) {\n\t\t\t\t\t\t\tv[i][j] = aj;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tv[i][j] = aj.clone().lerp(bj, j / rows);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // construct all of the faces\n\n\n\t\t\t\tfor (let i = 0; i < cols; i++) {\n\t\t\t\t\tfor (let j = 0; j < 2 * (cols - i) - 1; j++) {\n\t\t\t\t\t\tconst k = Math.floor(j / 2);\n\n\t\t\t\t\t\tif (j % 2 === 0) {\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\n\t\t\t\t\t\t\tpushVertex(v[i][k]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction applyRadius(radius) {\n\t\t\t\tconst vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tvertex.normalize().multiplyScalar(radius);\n\t\t\t\t\tvertexBuffer[i + 0] = vertex.x;\n\t\t\t\t\tvertexBuffer[i + 1] = vertex.y;\n\t\t\t\t\tvertexBuffer[i + 2] = vertex.z;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tconst vertex = new Vector3();\n\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tconst u = azimuth(vertex) / 2 / Math.PI + 0.5;\n\t\t\t\t\tconst v = inclination(vertex) / Math.PI + 0.5;\n\t\t\t\t\tuvBuffer.push(u, 1 - v);\n\t\t\t\t}\n\n\t\t\t\tcorrectUVs();\n\t\t\t\tcorrectSeam();\n\t\t\t}\n\n\t\t\tfunction correctSeam() {\n\t\t\t\t// handle case when face straddles the seam, see #3269\n\t\t\t\tfor (let i = 0; i < uvBuffer.length; i += 6) {\n\t\t\t\t\t// uv data of a single face\n\t\t\t\t\tconst x0 = uvBuffer[i + 0];\n\t\t\t\t\tconst x1 = uvBuffer[i + 2];\n\t\t\t\t\tconst x2 = uvBuffer[i + 4];\n\t\t\t\t\tconst max = Math.max(x0, x1, x2);\n\t\t\t\t\tconst min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n\t\t\t\t\tif (max > 0.9 && min < 0.1) {\n\t\t\t\t\t\tif (x0 < 0.2) uvBuffer[i + 0] += 1;\n\t\t\t\t\t\tif (x1 < 0.2) uvBuffer[i + 2] += 1;\n\t\t\t\t\t\tif (x2 < 0.2) uvBuffer[i + 4] += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction pushVertex(vertex) {\n\t\t\t\tvertexBuffer.push(vertex.x, vertex.y, vertex.z);\n\t\t\t}\n\n\t\t\tfunction getVertexByIndex(index, vertex) {\n\t\t\t\tconst stride = index * 3;\n\t\t\t\tvertex.x = vertices[stride + 0];\n\t\t\t\tvertex.y = vertices[stride + 1];\n\t\t\t\tvertex.z = vertices[stride + 2];\n\t\t\t}\n\n\t\t\tfunction correctUVs() {\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3();\n\t\t\t\tconst centroid = new Vector3();\n\t\t\t\tconst uvA = new Vector2();\n\t\t\t\tconst uvB = new Vector2();\n\t\t\t\tconst uvC = new Vector2();\n\n\t\t\t\tfor (let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n\t\t\t\t\ta.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n\t\t\t\t\tb.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n\t\t\t\t\tc.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n\t\t\t\t\tuvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n\t\t\t\t\tuvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n\t\t\t\t\tuvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n\t\t\t\t\tcentroid.copy(a).add(b).add(c).divideScalar(3);\n\t\t\t\t\tconst azi = azimuth(centroid);\n\t\t\t\t\tcorrectUV(uvA, j + 0, a, azi);\n\t\t\t\t\tcorrectUV(uvB, j + 2, b, azi);\n\t\t\t\t\tcorrectUV(uvC, j + 4, c, azi);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction correctUV(uv, stride, vector, azimuth) {\n\t\t\t\tif (azimuth < 0 && uv.x === 1) {\n\t\t\t\t\tuvBuffer[stride] = uv.x - 1;\n\t\t\t\t}\n\n\t\t\t\tif (vector.x === 0 && vector.z === 0) {\n\t\t\t\t\tuvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n\t\t\t\t}\n\t\t\t} // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n\t\t\tfunction azimuth(vector) {\n\t\t\t\treturn Math.atan2(vector.z, -vector.x);\n\t\t\t} // Angle above the XZ plane.\n\n\n\t\t\tfunction inclination(vector) {\n\t\t\t\treturn Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new PolyhedronGeometry(data.vertices, data.indices, data.radius, data.details);\n\t\t}\n\n\t}\n\n\tclass DodecahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\n\t\t\tconst r = 1 / t;\n\t\t\tconst vertices = [// (±1, ±1, ±1)\n\t\t\t-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n\t\t\t0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n\t\t\t-r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n\t\t\t-t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n\t\t\tconst indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'DodecahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new DodecahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tconst _v0 = new Vector3();\n\n\tconst _v1$1 = new Vector3();\n\n\tconst _normal = new Vector3();\n\n\tconst _triangle = new Triangle();\n\n\tclass EdgesGeometry extends BufferGeometry {\n\t\tconstructor(geometry, thresholdAngle) {\n\t\t\tsuper();\n\t\t\tthis.type = 'EdgesGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tthresholdAngle: thresholdAngle\n\t\t\t};\n\t\t\tthresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1;\n\n\t\t\tif (geometry.isGeometry === true) {\n\t\t\t\tconsole.error('THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow(10, precisionPoints);\n\t\t\tconst thresholdDot = Math.cos(DEG2RAD * thresholdAngle);\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute('position');\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\t\t\tconst indexArr = [0, 0, 0];\n\t\t\tconst vertKeys = ['a', 'b', 'c'];\n\t\t\tconst hashes = new Array(3);\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\n\t\t\tfor (let i = 0; i < indexCount; i += 3) {\n\t\t\t\tif (indexAttr) {\n\t\t\t\t\tindexArr[0] = indexAttr.getX(i);\n\t\t\t\t\tindexArr[1] = indexAttr.getX(i + 1);\n\t\t\t\t\tindexArr[2] = indexAttr.getX(i + 2);\n\t\t\t\t} else {\n\t\t\t\t\tindexArr[0] = i;\n\t\t\t\t\tindexArr[1] = i + 1;\n\t\t\t\t\tindexArr[2] = i + 2;\n\t\t\t\t}\n\n\t\t\t\tconst {\n\t\t\t\t\ta,\n\t\t\t\t\tb,\n\t\t\t\t\tc\n\t\t\t\t} = _triangle;\n\t\t\t\ta.fromBufferAttribute(positionAttr, indexArr[0]);\n\t\t\t\tb.fromBufferAttribute(positionAttr, indexArr[1]);\n\t\t\t\tc.fromBufferAttribute(positionAttr, indexArr[2]);\n\n\t\t\t\t_triangle.getNormal(_normal); // create hashes for the edge from the vertices\n\n\n\t\t\t\thashes[0] = `${Math.round(a.x * precision)},${Math.round(a.y * precision)},${Math.round(a.z * precision)}`;\n\t\t\t\thashes[1] = `${Math.round(b.x * precision)},${Math.round(b.y * precision)},${Math.round(b.z * precision)}`;\n\t\t\t\thashes[2] = `${Math.round(c.x * precision)},${Math.round(c.y * precision)},${Math.round(c.z * precision)}`; // skip degenerate triangles\n\n\t\t\t\tif (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} // iterate over every edge\n\n\n\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = (j + 1) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[j];\n\t\t\t\t\tconst vecHash1 = hashes[jNext];\n\t\t\t\t\tconst v0 = _triangle[vertKeys[j]];\n\t\t\t\t\tconst v1 = _triangle[vertKeys[jNext]];\n\t\t\t\t\tconst hash = `${vecHash0}_${vecHash1}`;\n\t\t\t\t\tconst reverseHash = `${vecHash1}_${vecHash0}`;\n\n\t\t\t\t\tif (reverseHash in edgeData && edgeData[reverseHash]) {\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif (_normal.dot(edgeData[reverseHash].normal) <= thresholdDot) {\n\t\t\t\t\t\t\tvertices.push(v0.x, v0.y, v0.z);\n\t\t\t\t\t\t\tvertices.push(v1.x, v1.y, v1.z);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[reverseHash] = null;\n\t\t\t\t\t} else if (!(hash in edgeData)) {\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[hash] = {\n\t\t\t\t\t\t\tindex0: indexArr[j],\n\t\t\t\t\t\t\tindex1: indexArr[jNext],\n\t\t\t\t\t\t\tnormal: _normal.clone()\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // iterate over all remaining, unmatched edges and add them to the vertex array\n\n\n\t\t\tfor (const key in edgeData) {\n\t\t\t\tif (edgeData[key]) {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tindex0,\n\t\t\t\t\t\tindex1\n\t\t\t\t\t} = edgeData[key];\n\n\t\t\t\t\t_v0.fromBufferAttribute(positionAttr, index0);\n\n\t\t\t\t\t_v1$1.fromBufferAttribute(positionAttr, index1);\n\n\t\t\t\t\tvertices.push(_v0.x, _v0.y, _v0.z);\n\t\t\t\t\tvertices.push(_v1$1.x, _v1$1.y, _v1$1.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t}\n\n\t}\n\n\t/**\n\t * Extensible curve object.\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\tclass Curve {\n\t\tconstructor() {\n\t\t\tthis.type = 'Curve';\n\t\t\tthis.arcLengthDivisions = 200;\n\t\t} // Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\n\t\tgetPoint()\n\t\t/* t, optionalTarget */\n\t\t{\n\t\t\tconsole.warn('THREE.Curve: .getPoint() not implemented.');\n\t\t\treturn null;\n\t\t} // Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\tconst t = this.getUtoTmapping(u);\n\t\t\treturn this.getPoint(t, optionalTarget);\n\t\t} // Get sequence of points using getPoint( t )\n\n\n\t\tgetPoints(divisions = 5) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPoint(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t} // Get sequence of points using getPointAt( u )\n\n\n\t\tgetSpacedPoints(divisions = 5) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPointAt(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t} // Get total curve arc length\n\n\n\t\tgetLength() {\n\t\t\tconst lengths = this.getLengths();\n\t\t\treturn lengths[lengths.length - 1];\n\t\t} // Get list of cumulative segment lengths\n\n\n\t\tgetLengths(divisions = this.arcLengthDivisions) {\n\t\t\tif (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n\t\t\t\treturn this.cacheArcLengths;\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\t\t\tconst cache = [];\n\t\t\tlet current,\n\t\t\t\t\tlast = this.getPoint(0);\n\t\t\tlet sum = 0;\n\t\t\tcache.push(0);\n\n\t\t\tfor (let p = 1; p <= divisions; p++) {\n\t\t\t\tcurrent = this.getPoint(p / divisions);\n\t\t\t\tsum += current.distanceTo(last);\n\t\t\t\tcache.push(sum);\n\t\t\t\tlast = current;\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\t\t}\n\n\t\tupdateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\t\t} // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\n\t\tgetUtoTmapping(u, distance) {\n\t\t\tconst arcLengths = this.getLengths();\n\t\t\tlet i = 0;\n\t\t\tconst il = arcLengths.length;\n\t\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\t\tif (distance) {\n\t\t\t\ttargetArcLength = distance;\n\t\t\t} else {\n\t\t\t\ttargetArcLength = u * arcLengths[il - 1];\n\t\t\t} // binary search for the index with largest value smaller than target u distance\n\n\n\t\t\tlet low = 0,\n\t\t\t\t\thigh = il - 1,\n\t\t\t\t\tcomparison;\n\n\t\t\twhile (low <= high) {\n\t\t\t\ti = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[i] - targetArcLength;\n\n\t\t\t\tif (comparison < 0) {\n\t\t\t\t\tlow = i + 1;\n\t\t\t\t} else if (comparison > 0) {\n\t\t\t\t\thigh = i - 1;\n\t\t\t\t} else {\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak; // DONE\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif (arcLengths[i] === targetArcLength) {\n\t\t\t\treturn i / (il - 1);\n\t\t\t} // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n\t\t\tconst lengthBefore = arcLengths[i];\n\t\t\tconst lengthAfter = arcLengths[i + 1];\n\t\t\tconst segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n\t\t\tconst segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n\t\t\tconst t = (i + segmentFraction) / (il - 1);\n\t\t\treturn t;\n\t\t} // Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\n\t\tgetTangent(t, optionalTarget) {\n\t\t\tconst delta = 0.0001;\n\t\t\tlet t1 = t - delta;\n\t\t\tlet t2 = t + delta; // Capping in case of danger\n\n\t\t\tif (t1 < 0) t1 = 0;\n\t\t\tif (t2 > 1) t2 = 1;\n\t\t\tconst pt1 = this.getPoint(t1);\n\t\t\tconst pt2 = this.getPoint(t2);\n\t\t\tconst tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\n\t\t\ttangent.copy(pt2).sub(pt1).normalize();\n\t\t\treturn tangent;\n\t\t}\n\n\t\tgetTangentAt(u, optionalTarget) {\n\t\t\tconst t = this.getUtoTmapping(u);\n\t\t\treturn this.getTangent(t, optionalTarget);\n\t\t}\n\n\t\tcomputeFrenetFrames(segments, closed) {\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\t\t\tconst normal = new Vector3();\n\t\t\tconst tangents = [];\n\t\t\tconst normals = [];\n\t\t\tconst binormals = [];\n\t\t\tconst vec = new Vector3();\n\t\t\tconst mat = new Matrix4(); // compute the tangent vectors for each segment on the curve\n\n\t\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\t\tconst u = i / segments;\n\t\t\t\ttangents[i] = this.getTangentAt(u, new Vector3());\n\t\t\t\ttangents[i].normalize();\n\t\t\t} // select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\n\t\t\tnormals[0] = new Vector3();\n\t\t\tbinormals[0] = new Vector3();\n\t\t\tlet min = Number.MAX_VALUE;\n\t\t\tconst tx = Math.abs(tangents[0].x);\n\t\t\tconst ty = Math.abs(tangents[0].y);\n\t\t\tconst tz = Math.abs(tangents[0].z);\n\n\t\t\tif (tx <= min) {\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set(1, 0, 0);\n\t\t\t}\n\n\t\t\tif (ty <= min) {\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set(0, 1, 0);\n\t\t\t}\n\n\t\t\tif (tz <= min) {\n\t\t\t\tnormal.set(0, 0, 1);\n\t\t\t}\n\n\t\t\tvec.crossVectors(tangents[0], normal).normalize();\n\t\t\tnormals[0].crossVectors(tangents[0], vec);\n\t\t\tbinormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\tnormals[i] = normals[i - 1].clone();\n\t\t\t\tbinormals[i] = binormals[i - 1].clone();\n\t\t\t\tvec.crossVectors(tangents[i - 1], tangents[i]);\n\n\t\t\t\tif (vec.length() > Number.EPSILON) {\n\t\t\t\t\tvec.normalize();\n\t\t\t\t\tconst theta = Math.acos(clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n\t\t\t\t}\n\n\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\n\t\t\t} // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n\t\t\tif (closed === true) {\n\t\t\t\tlet theta = Math.acos(clamp(normals[0].dot(normals[segments]), -1, 1));\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n\t\t\t\t\ttheta = -theta;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n\t\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass EllipseCurve extends Curve {\n\t\tconstructor(aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0) {\n\t\t\tsuper();\n\t\t\tthis.type = 'EllipseCurve';\n\t\t\tthis.aX = aX;\n\t\t\tthis.aY = aY;\n\t\t\tthis.xRadius = xRadius;\n\t\t\tthis.yRadius = yRadius;\n\t\t\tthis.aStartAngle = aStartAngle;\n\t\t\tthis.aEndAngle = aEndAngle;\n\t\t\tthis.aClockwise = aClockwise;\n\t\t\tthis.aRotation = aRotation;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget) {\n\t\t\tconst point = optionalTarget || new Vector2();\n\t\t\tconst twoPi = Math.PI * 2;\n\t\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\t\tconst samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n\t\t\twhile (deltaAngle < 0) deltaAngle += twoPi;\n\n\t\t\twhile (deltaAngle > twoPi) deltaAngle -= twoPi;\n\n\t\t\tif (deltaAngle < Number.EPSILON) {\n\t\t\t\tif (samePoints) {\n\t\t\t\t\tdeltaAngle = 0;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaAngle = twoPi;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.aClockwise === true && !samePoints) {\n\t\t\t\tif (deltaAngle === twoPi) {\n\t\t\t\t\tdeltaAngle = -twoPi;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\t\tlet x = this.aX + this.xRadius * Math.cos(angle);\n\t\t\tlet y = this.aY + this.yRadius * Math.sin(angle);\n\n\t\t\tif (this.aRotation !== 0) {\n\t\t\t\tconst cos = Math.cos(this.aRotation);\n\t\t\t\tconst sin = Math.sin(this.aRotation);\n\t\t\t\tconst tx = x - this.aX;\n\t\t\t\tconst ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n\t\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\t\ty = tx * sin + ty * cos + this.aY;\n\t\t\t}\n\n\t\t\treturn point.set(x, y);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.aX = source.aX;\n\t\t\tthis.aY = source.aY;\n\t\t\tthis.xRadius = source.xRadius;\n\t\t\tthis.yRadius = source.yRadius;\n\t\t\tthis.aStartAngle = source.aStartAngle;\n\t\t\tthis.aEndAngle = source.aEndAngle;\n\t\t\tthis.aClockwise = source.aClockwise;\n\t\t\tthis.aRotation = source.aRotation;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.aX = this.aX;\n\t\t\tdata.aY = this.aY;\n\t\t\tdata.xRadius = this.xRadius;\n\t\t\tdata.yRadius = this.yRadius;\n\t\t\tdata.aStartAngle = this.aStartAngle;\n\t\t\tdata.aEndAngle = this.aEndAngle;\n\t\t\tdata.aClockwise = this.aClockwise;\n\t\t\tdata.aRotation = this.aRotation;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.aX = json.aX;\n\t\t\tthis.aY = json.aY;\n\t\t\tthis.xRadius = json.xRadius;\n\t\t\tthis.yRadius = json.yRadius;\n\t\t\tthis.aStartAngle = json.aStartAngle;\n\t\t\tthis.aEndAngle = json.aEndAngle;\n\t\t\tthis.aClockwise = json.aClockwise;\n\t\t\tthis.aRotation = json.aRotation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tclass ArcCurve extends EllipseCurve {\n\t\tconstructor(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tsuper(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\tthis.type = 'ArcCurve';\n\t\t}\n\n\t}\n\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\t\tlet c0 = 0,\n\t\t\t\tc1 = 0,\n\t\t\t\tc2 = 0,\n\t\t\t\tc3 = 0;\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *\t p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *\t p(0) = x0, p(1) = x1\n\t\t *\tand\n\t\t *\t p'(0) = t0, p'(1) = t1.\n\t\t */\n\n\t\tfunction init(x0, x1, t0, t1) {\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\t\t}\n\n\t\treturn {\n\t\t\tinitCatmullRom: function (x0, x1, x2, x3, tension) {\n\t\t\t\tinit(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n\t\t\t},\n\t\t\tinitNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tlet t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n\t\t\t\tlet t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\t\t\t\tinit(x1, x2, t1, t2);\n\t\t\t},\n\t\t\tcalc: function (t) {\n\t\t\t\tconst t2 = t * t;\n\t\t\t\tconst t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\t\t\t}\n\t\t};\n\t} //\n\n\n\tconst tmp = new Vector3();\n\tconst px = new CubicPoly(),\n\t\t\t\tpy = new CubicPoly(),\n\t\t\t\tpz = new CubicPoly();\n\n\tclass CatmullRomCurve3 extends Curve {\n\t\tconstructor(points = [], closed = false, curveType = 'centripetal', tension = 0.5) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CatmullRomCurve3';\n\t\t\tthis.points = points;\n\t\t\tthis.closed = closed;\n\t\t\tthis.curveType = curveType;\n\t\t\tthis.tension = tension;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst points = this.points;\n\t\t\tconst l = points.length;\n\t\t\tconst p = (l - (this.closed ? 0 : 1)) * t;\n\t\t\tlet intPoint = Math.floor(p);\n\t\t\tlet weight = p - intPoint;\n\n\t\t\tif (this.closed) {\n\t\t\t\tintPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n\t\t\t} else if (weight === 0 && intPoint === l - 1) {\n\t\t\t\tintPoint = l - 2;\n\t\t\t\tweight = 1;\n\t\t\t}\n\n\t\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\t\tif (this.closed || intPoint > 0) {\n\t\t\t\tp0 = points[(intPoint - 1) % l];\n\t\t\t} else {\n\t\t\t\t// extrapolate first point\n\t\t\t\ttmp.subVectors(points[0], points[1]).add(points[0]);\n\t\t\t\tp0 = tmp;\n\t\t\t}\n\n\t\t\tconst p1 = points[intPoint % l];\n\t\t\tconst p2 = points[(intPoint + 1) % l];\n\n\t\t\tif (this.closed || intPoint + 2 < l) {\n\t\t\t\tp3 = points[(intPoint + 2) % l];\n\t\t\t} else {\n\t\t\t\t// extrapolate last point\n\t\t\t\ttmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n\t\t\t\tp3 = tmp;\n\t\t\t}\n\n\t\t\tif (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\t\tlet dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n\t\t\t\tlet dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n\t\t\t\tlet dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n\t\t\t\tif (dt1 < 1e-4) dt1 = 1.0;\n\t\t\t\tif (dt0 < 1e-4) dt0 = dt1;\n\t\t\t\tif (dt2 < 1e-4) dt2 = dt1;\n\t\t\t\tpx.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n\t\t\t\tpy.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n\t\t\t\tpz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n\t\t\t} else if (this.curveType === 'catmullrom') {\n\t\t\t\tpx.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n\t\t\t\tpy.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n\t\t\t\tpz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n\t\t\t}\n\n\t\t\tpoint.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\n\t\t\t\tconst point = source.points[i];\n\t\t\t\tthis.points.push(point.clone());\n\t\t\t}\n\n\t\t\tthis.closed = source.closed;\n\t\t\tthis.curveType = source.curveType;\n\t\t\tthis.tension = source.tension;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.points = [];\n\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\n\t\t\t\tconst point = this.points[i];\n\t\t\t\tdata.points.push(point.toArray());\n\t\t\t}\n\n\t\t\tdata.closed = this.closed;\n\t\t\tdata.curveType = this.curveType;\n\t\t\tdata.tension = this.tension;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\n\t\t\t\tconst point = json.points[i];\n\t\t\t\tthis.points.push(new Vector3().fromArray(point));\n\t\t\t}\n\n\t\t\tthis.closed = json.closed;\n\t\t\tthis.curveType = json.curveType;\n\t\t\tthis.tension = json.tension;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n\t/**\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\tfunction CatmullRom(t, p0, p1, p2, p3) {\n\t\tconst v0 = (p2 - p0) * 0.5;\n\t\tconst v1 = (p3 - p1) * 0.5;\n\t\tconst t2 = t * t;\n\t\tconst t3 = t * t2;\n\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\t} //\n\n\n\tfunction QuadraticBezierP0(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn k * k * p;\n\t}\n\n\tfunction QuadraticBezierP1(t, p) {\n\t\treturn 2 * (1 - t) * t * p;\n\t}\n\n\tfunction QuadraticBezierP2(t, p) {\n\t\treturn t * t * p;\n\t}\n\n\tfunction QuadraticBezier(t, p0, p1, p2) {\n\t\treturn QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n\t} //\n\n\n\tfunction CubicBezierP0(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn k * k * k * p;\n\t}\n\n\tfunction CubicBezierP1(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\t}\n\n\tfunction CubicBezierP2(t, p) {\n\t\treturn 3 * (1 - t) * t * t * p;\n\t}\n\n\tfunction CubicBezierP3(t, p) {\n\t\treturn t * t * t * p;\n\t}\n\n\tfunction CubicBezier(t, p0, p1, p2, p3) {\n\t\treturn CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n\t}\n\n\tclass CubicBezierCurve extends Curve {\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubicBezierCurve';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2,\n\t\t\t\t\t\tv3 = this.v3;\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\tthis.v3.copy(source.v3);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\tthis.v3.fromArray(json.v3);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n\tclass CubicBezierCurve3 extends Curve {\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubicBezierCurve3';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2,\n\t\t\t\t\t\tv3 = this.v3;\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\tthis.v3.copy(source.v3);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\tthis.v3.fromArray(json.v3);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n\tclass LineCurve extends Curve {\n\t\tconstructor(v1 = new Vector2(), v2 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineCurve';\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif (t === 1) {\n\t\t\t\tpoint.copy(this.v2);\n\t\t\t} else {\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t\t}\n\n\t\t\treturn point;\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\treturn this.getPoint(u, optionalTarget);\n\t\t}\n\n\t\tgetTangent(t, optionalTarget) {\n\t\t\tconst tangent = optionalTarget || new Vector2();\n\t\t\ttangent.copy(this.v2).sub(this.v1).normalize();\n\t\t\treturn tangent;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tclass LineCurve3 extends Curve {\n\t\tconstructor(v1 = new Vector3(), v2 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineCurve3';\n\t\t\tthis.isLineCurve3 = true;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif (t === 1) {\n\t\t\t\tpoint.copy(this.v2);\n\t\t\t} else {\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t\t}\n\n\t\t\treturn point;\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\treturn this.getPoint(u, optionalTarget);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass QuadraticBezierCurve extends Curve {\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'QuadraticBezierCurve';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2;\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n\tclass QuadraticBezierCurve3 extends Curve {\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'QuadraticBezierCurve3';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2;\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n\tclass SplineCurve extends Curve {\n\t\tconstructor(points = []) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SplineCurve';\n\t\t\tthis.points = points;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst points = this.points;\n\t\t\tconst p = (points.length - 1) * t;\n\t\t\tconst intPoint = Math.floor(p);\n\t\t\tconst weight = p - intPoint;\n\t\t\tconst p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n\t\t\tconst p1 = points[intPoint];\n\t\t\tconst p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n\t\t\tconst p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n\t\t\tpoint.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\n\t\t\t\tconst point = source.points[i];\n\t\t\t\tthis.points.push(point.clone());\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.points = [];\n\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\n\t\t\t\tconst point = this.points[i];\n\t\t\t\tdata.points.push(point.toArray());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\n\t\t\t\tconst point = json.points[i];\n\t\t\t\tthis.points.push(new Vector2().fromArray(point));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**\n\t * Port from https://github.com/mapbox/earcut (v2.2.2)\n\t */\n\tconst Earcut = {\n\t\ttriangulate: function (data, holeIndices, dim = 2) {\n\t\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\t\tconst outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\t\t\tlet outerNode = linkedList(data, 0, outerLen, dim, true);\n\t\t\tconst triangles = [];\n\t\t\tif (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\t\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\t\t\tif (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\t\tif (data.length > 80 * dim) {\n\t\t\t\tminX = maxX = data[0];\n\t\t\t\tminY = maxY = data[1];\n\n\t\t\t\tfor (let i = dim; i < outerLen; i += dim) {\n\t\t\t\t\tx = data[i];\n\t\t\t\t\ty = data[i + 1];\n\t\t\t\t\tif (x < minX) minX = x;\n\t\t\t\t\tif (y < minY) minY = y;\n\t\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\t} // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n\t\t\t\tinvSize = Math.max(maxX - minX, maxY - minY);\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\t\t\t}\n\n\t\t\tearcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\t\t\treturn triangles;\n\t\t}\n\t}; // create a circular doubly linked list from polygon points in the specified winding order\n\n\tfunction linkedList(data, start, end, dim, clockwise) {\n\t\tlet i, last;\n\n\t\tif (clockwise === signedArea(data, start, end, dim) > 0) {\n\t\t\tfor (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n\t\t} else {\n\t\t\tfor (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n\t\t}\n\n\t\tif (last && equals(last, last.next)) {\n\t\t\tremoveNode(last);\n\t\t\tlast = last.next;\n\t\t}\n\n\t\treturn last;\n\t} // eliminate colinear or duplicate points\n\n\n\tfunction filterPoints(start, end) {\n\t\tif (!start) return start;\n\t\tif (!end) end = start;\n\t\tlet p = start,\n\t\t\t\tagain;\n\n\t\tdo {\n\t\t\tagain = false;\n\n\t\t\tif (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n\t\t\t\tremoveNode(p);\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif (p === p.next) break;\n\t\t\t\tagain = true;\n\t\t\t} else {\n\t\t\t\tp = p.next;\n\t\t\t}\n\t\t} while (again || p !== end);\n\n\t\treturn end;\n\t} // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\n\tfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n\t\tif (!ear) return; // interlink polygon nodes in z-order\n\n\t\tif (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\t\tlet stop = ear,\n\t\t\t\tprev,\n\t\t\t\tnext; // iterate through ears, slicing them one by one\n\n\t\twhile (ear.prev !== ear.next) {\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push(prev.i / dim);\n\t\t\t\ttriangles.push(ear.i / dim);\n\t\t\t\ttriangles.push(next.i / dim);\n\t\t\t\tremoveNode(ear); // skipping the next vertex leads to less sliver triangles\n\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n\t\t\tif (ear === stop) {\n\t\t\t\t// try filtering points and slicing again\n\t\t\t\tif (!pass) {\n\t\t\t\t\tearcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n\t\t\t\t} else if (pass === 1) {\n\t\t\t\t\tear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n\t\t\t\t\tearcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n\t\t\t\t} else if (pass === 2) {\n\t\t\t\t\tsplitEarcut(ear, triangles, dim, minX, minY, invSize);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} // check whether a polygon node forms a valid ear with adjacent nodes\n\n\n\tfunction isEar(ear) {\n\t\tconst a = ear.prev,\n\t\t\t\t\tb = ear,\n\t\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// now make sure we don't have other points inside the potential ear\n\n\t\tlet p = ear.next.next;\n\n\t\twhile (p !== ear.prev) {\n\t\t\tif (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.next;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction isEarHashed(ear, minX, minY, invSize) {\n\t\tconst a = ear.prev,\n\t\t\t\t\tb = ear,\n\t\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// triangle bbox; min & max are calculated like this for speed\n\n\t\tconst minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n\t\t\t\t\tminTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n\t\t\t\t\tmaxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n\t\t\t\t\tmaxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n\t\tconst minZ = zOrder(minTX, minTY, minX, minY, invSize),\n\t\t\t\t\tmaxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\t\tlet p = ear.prevZ,\n\t\t\t\tn = ear.nextZ; // look for points inside the triangle in both directions\n\n\t\twhile (p && p.z >= minZ && n && n.z <= maxZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t} // look for remaining points in decreasing z-order\n\n\n\t\twhile (p && p.z >= minZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t} // look for remaining points in increasing z-order\n\n\n\t\twhile (n && n.z <= maxZ) {\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t}\n\n\t\treturn true;\n\t} // go through all polygon nodes and cure small local self-intersections\n\n\n\tfunction cureLocalIntersections(start, triangles, dim) {\n\t\tlet p = start;\n\n\t\tdo {\n\t\t\tconst a = p.prev,\n\t\t\t\t\t\tb = p.next.next;\n\n\t\t\tif (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\t\t\t\ttriangles.push(a.i / dim);\n\t\t\t\ttriangles.push(p.i / dim);\n\t\t\t\ttriangles.push(b.i / dim); // remove two nodes involved\n\n\t\t\t\tremoveNode(p);\n\t\t\t\tremoveNode(p.next);\n\t\t\t\tp = start = b;\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn filterPoints(p);\n\t} // try splitting polygon into two and triangulate them independently\n\n\n\tfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n\t\t// look for a valid diagonal that divides the polygon into two\n\t\tlet a = start;\n\n\t\tdo {\n\t\t\tlet b = a.next.next;\n\n\t\t\twhile (b !== a.prev) {\n\t\t\t\tif (a.i !== b.i && isValidDiagonal(a, b)) {\n\t\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\t\tlet c = splitPolygon(a, b); // filter colinear points around the cuts\n\n\t\t\t\t\ta = filterPoints(a, a.next);\n\t\t\t\t\tc = filterPoints(c, c.next); // run earcut on each half\n\n\t\t\t\t\tearcutLinked(a, triangles, dim, minX, minY, invSize);\n\t\t\t\t\tearcutLinked(c, triangles, dim, minX, minY, invSize);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\t\t\t}\n\n\t\t\ta = a.next;\n\t\t} while (a !== start);\n\t} // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\n\tfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n\t\tconst queue = [];\n\t\tlet i, len, start, end, list;\n\n\t\tfor (i = 0, len = holeIndices.length; i < len; i++) {\n\t\t\tstart = holeIndices[i] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n\t\t\tlist = linkedList(data, start, end, dim, false);\n\t\t\tif (list === list.next) list.steiner = true;\n\t\t\tqueue.push(getLeftmost(list));\n\t\t}\n\n\t\tqueue.sort(compareX); // process holes from left to right\n\n\t\tfor (i = 0; i < queue.length; i++) {\n\t\t\teliminateHole(queue[i], outerNode);\n\t\t\touterNode = filterPoints(outerNode, outerNode.next);\n\t\t}\n\n\t\treturn outerNode;\n\t}\n\n\tfunction compareX(a, b) {\n\t\treturn a.x - b.x;\n\t} // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\n\tfunction eliminateHole(hole, outerNode) {\n\t\touterNode = findHoleBridge(hole, outerNode);\n\n\t\tif (outerNode) {\n\t\t\tconst b = splitPolygon(outerNode, hole); // filter collinear points around the cuts\n\n\t\t\tfilterPoints(outerNode, outerNode.next);\n\t\t\tfilterPoints(b, b.next);\n\t\t}\n\t} // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\n\tfunction findHoleBridge(hole, outerNode) {\n\t\tlet p = outerNode;\n\t\tconst hx = hole.x;\n\t\tconst hy = hole.y;\n\t\tlet qx = -Infinity,\n\t\t\t\tm; // find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\n\t\tdo {\n\t\t\tif (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n\t\t\t\tconst x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n\t\t\t\tif (x <= hx && x > qx) {\n\t\t\t\t\tqx = x;\n\n\t\t\t\t\tif (x === hx) {\n\t\t\t\t\t\tif (hy === p.y) return p;\n\t\t\t\t\t\tif (hy === p.next.y) return p.next;\n\t\t\t\t\t}\n\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== outerNode);\n\n\t\tif (!m) return null;\n\t\tif (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tconst stop = m,\n\t\t\t\t\tmx = m.x,\n\t\t\t\t\tmy = m.y;\n\t\tlet tanMin = Infinity,\n\t\t\t\ttan;\n\t\tp = m;\n\n\t\tdo {\n\t\t\tif (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\t\t\t\ttan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n\t\t\t\tif (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== stop);\n\n\t\treturn m;\n\t} // whether sector in vertex m contains sector in vertex p in the same coordinates\n\n\n\tfunction sectorContainsSector(m, p) {\n\t\treturn area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n\t} // interlink polygon nodes in z-order\n\n\n\tfunction indexCurve(start, minX, minY, invSize) {\n\t\tlet p = start;\n\n\t\tdo {\n\t\t\tif (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\t\tsortLinked(p);\n\t} // Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\n\tfunction sortLinked(list) {\n\t\tlet i,\n\t\t\t\tp,\n\t\t\t\tq,\n\t\t\t\te,\n\t\t\t\ttail,\n\t\t\t\tnumMerges,\n\t\t\t\tpSize,\n\t\t\t\tqSize,\n\t\t\t\tinSize = 1;\n\n\t\tdo {\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile (p) {\n\t\t\t\tnumMerges++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\n\t\t\t\tfor (i = 0; i < inSize; i++) {\n\t\t\t\t\tpSize++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif (!q) break;\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile (pSize > 0 || qSize > 0 && q) {\n\t\t\t\t\tif (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize--;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tail) tail.nextZ = e;else list = e;\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\t\t} while (numMerges > 1);\n\n\t\treturn list;\n\t} // z-order of a point given coords and inverse of the longer side of data bbox\n\n\n\tfunction zOrder(x, y, minX, minY, invSize) {\n\t\t// coords are transformed into non-negative 15-bit integer range\n\t\tx = 32767 * (x - minX) * invSize;\n\t\ty = 32767 * (y - minY) * invSize;\n\t\tx = (x | x << 8) & 0x00FF00FF;\n\t\tx = (x | x << 4) & 0x0F0F0F0F;\n\t\tx = (x | x << 2) & 0x33333333;\n\t\tx = (x | x << 1) & 0x55555555;\n\t\ty = (y | y << 8) & 0x00FF00FF;\n\t\ty = (y | y << 4) & 0x0F0F0F0F;\n\t\ty = (y | y << 2) & 0x33333333;\n\t\ty = (y | y << 1) & 0x55555555;\n\t\treturn x | y << 1;\n\t} // find the leftmost node of a polygon ring\n\n\n\tfunction getLeftmost(start) {\n\t\tlet p = start,\n\t\t\t\tleftmost = start;\n\n\t\tdo {\n\t\t\tif (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn leftmost;\n\t} // check if a point lies within a convex triangle\n\n\n\tfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n\t\treturn (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n\t} // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\n\tfunction isValidDiagonal(a, b) {\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && ( // dones't intersect other edges\n\t\tlocallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && ( // locally visible\n\t\tarea(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n\t\tequals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n\t} // signed area of a triangle\n\n\n\tfunction area(p, q, r) {\n\t\treturn (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n\t} // check if two points are equal\n\n\n\tfunction equals(p1, p2) {\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\t} // check if two segments intersect\n\n\n\tfunction intersects(p1, q1, p2, q2) {\n\t\tconst o1 = sign(area(p1, q1, p2));\n\t\tconst o2 = sign(area(p1, q1, q2));\n\t\tconst o3 = sign(area(p2, q2, p1));\n\t\tconst o4 = sign(area(p2, q2, q1));\n\t\tif (o1 !== o2 && o3 !== o4) return true; // general case\n\n\t\tif (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\n\t\tif (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\n\t\tif (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\n\t\tif (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\t\treturn false;\n\t} // for collinear points p, q, r, check if point q lies on segment pr\n\n\n\tfunction onSegment(p, q, r) {\n\t\treturn q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n\t}\n\n\tfunction sign(num) {\n\t\treturn num > 0 ? 1 : num < 0 ? -1 : 0;\n\t} // check if a polygon diagonal intersects any polygon segments\n\n\n\tfunction intersectsPolygon(a, b) {\n\t\tlet p = a;\n\n\t\tdo {\n\t\t\tif (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn false;\n\t} // check if a polygon diagonal is locally inside the polygon\n\n\n\tfunction locallyInside(a, b) {\n\t\treturn area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n\t} // check if the middle point of a polygon diagonal is inside the polygon\n\n\n\tfunction middleInside(a, b) {\n\t\tlet p = a,\n\t\t\t\tinside = false;\n\t\tconst px = (a.x + b.x) / 2,\n\t\t\t\t\tpy = (a.y + b.y) / 2;\n\n\t\tdo {\n\t\t\tif (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn inside;\n\t} // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\n\tfunction splitPolygon(a, b) {\n\t\tconst a2 = new Node(a.i, a.x, a.y),\n\t\t\t\t\tb2 = new Node(b.i, b.x, b.y),\n\t\t\t\t\tan = a.next,\n\t\t\t\t\tbp = b.prev;\n\t\ta.next = b;\n\t\tb.prev = a;\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\t\treturn b2;\n\t} // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\n\tfunction insertNode(i, x, y, last) {\n\t\tconst p = new Node(i, x, y);\n\n\t\tif (!last) {\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\t\t} else {\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\t\t}\n\n\t\treturn p;\n\t}\n\n\tfunction removeNode(p) {\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\t\tif (p.prevZ) p.prevZ.nextZ = p.nextZ;\n\t\tif (p.nextZ) p.nextZ.prevZ = p.prevZ;\n\t}\n\n\tfunction Node(i, x, y) {\n\t\t// vertex index in coordinates array\n\t\tthis.i = i; // vertex coordinates\n\n\t\tthis.x = x;\n\t\tthis.y = y; // previous and next vertex nodes in a polygon ring\n\n\t\tthis.prev = null;\n\t\tthis.next = null; // z-order curve value\n\n\t\tthis.z = null; // previous and next nodes in z-order\n\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null; // indicates whether this is a steiner point\n\n\t\tthis.steiner = false;\n\t}\n\n\tfunction signedArea(data, start, end, dim) {\n\t\tlet sum = 0;\n\n\t\tfor (let i = start, j = end - dim; i < end; i += dim) {\n\t\t\tsum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n\t\t\tj = i;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\tclass ShapeUtils {\n\t\t// calculate area of the contour polygon\n\t\tstatic area(contour) {\n\t\t\tconst n = contour.length;\n\t\t\tlet a = 0.0;\n\n\t\t\tfor (let p = n - 1, q = 0; q < n; p = q++) {\n\t\t\t\ta += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\t\t}\n\n\t\tstatic isClockWise(pts) {\n\t\t\treturn ShapeUtils.area(pts) < 0;\n\t\t}\n\n\t\tstatic triangulateShape(contour, holes) {\n\t\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n\t\t\tconst holeIndices = []; // array of hole indices\n\n\t\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts(contour);\n\t\t\taddContour(vertices, contour); //\n\n\t\t\tlet holeIndex = contour.length;\n\t\t\tholes.forEach(removeDupEndPts);\n\n\t\t\tfor (let i = 0; i < holes.length; i++) {\n\t\t\t\tholeIndices.push(holeIndex);\n\t\t\t\tholeIndex += holes[i].length;\n\t\t\t\taddContour(vertices, holes[i]);\n\t\t\t} //\n\n\n\t\t\tconst triangles = Earcut.triangulate(vertices, holeIndices); //\n\n\t\t\tfor (let i = 0; i < triangles.length; i += 3) {\n\t\t\t\tfaces.push(triangles.slice(i, i + 3));\n\t\t\t}\n\n\t\t\treturn faces;\n\t\t}\n\n\t}\n\n\tfunction removeDupEndPts(points) {\n\t\tconst l = points.length;\n\n\t\tif (l > 2 && points[l - 1].equals(points[0])) {\n\t\t\tpoints.pop();\n\t\t}\n\t}\n\n\tfunction addContour(vertices, contour) {\n\t\tfor (let i = 0; i < contour.length; i++) {\n\t\t\tvertices.push(contour[i].x);\n\t\t\tvertices.push(contour[i].y);\n\t\t}\n\t}\n\n\t/**\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *\tcurveSegments: <int>, // number of points on the curves\n\t *\tsteps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *\tdepth: <float>, // Depth to extrude the shape\n\t *\n\t *\tbevelEnabled: <bool>, // turn on bevel\n\t *\tbevelThickness: <float>, // how deep into the original shape bevel goes\n\t *\tbevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n\t *\tbevelOffset: <float>, // how far from shape outline does bevel start\n\t *\tbevelSegments: <int>, // number of bevel layers\n\t *\n\t *\textrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *\tUVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\tclass ExtrudeGeometry extends BufferGeometry {\n\t\tconstructor(shapes, options) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ExtrudeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\toptions: options\n\t\t\t};\n\t\t\tshapes = Array.isArray(shapes) ? shapes : [shapes];\n\t\t\tconst scope = this;\n\t\t\tconst verticesArray = [];\n\t\t\tconst uvArray = [];\n\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\taddShape(shape);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n\t\t\tthis.computeVertexNormals(); // functions\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tconst placeholder = []; // options\n\n\t\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\t\tlet depth = options.depth !== undefined ? options.depth : 100;\n\t\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\t\t\t\tconst extrudePath = options.extrudePath;\n\t\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n\t\t\t\tif (options.amount !== undefined) {\n\t\t\t\t\tconsole.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n\t\t\t\t\tdepth = options.amount;\n\t\t\t\t} //\n\n\n\t\t\t\tlet extrudePts,\n\t\t\t\t\t\textrudeByPath = false;\n\t\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\t\tif (extrudePath) {\n\t\t\t\t\textrudePts = extrudePath.getSpacedPoints(steps);\n\t\t\t\t\textrudeByPath = true;\n\t\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\t\t\t\t\t// SETUP TNB variables\n\t\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\t\tsplineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\t\tbinormal = new Vector3();\n\t\t\t\t\tnormal = new Vector3();\n\t\t\t\t\tposition2 = new Vector3();\n\t\t\t\t} // Safeguards if bevels are not enabled\n\n\n\t\t\t\tif (!bevelEnabled) {\n\t\t\t\t\tbevelSegments = 0;\n\t\t\t\t\tbevelThickness = 0;\n\t\t\t\t\tbevelSize = 0;\n\t\t\t\t\tbevelOffset = 0;\n\t\t\t\t} // Variables initialization\n\n\n\t\t\t\tconst shapePoints = shape.extractPoints(curveSegments);\n\t\t\t\tlet vertices = shapePoints.shape;\n\t\t\t\tconst holes = shapePoints.holes;\n\t\t\t\tconst reverse = !ShapeUtils.isClockWise(vertices);\n\n\t\t\t\tif (reverse) {\n\t\t\t\t\tvertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\n\t\t\t\t\t\tif (ShapeUtils.isClockWise(ahole)) {\n\t\t\t\t\t\t\tholes[h] = ahole.reverse();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(vertices, holes);\n\t\t\t\t/* Vertices */\n\n\t\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\tvertices = vertices.concat(ahole);\n\t\t\t\t}\n\n\t\t\t\tfunction scalePt2(pt, vec, size) {\n\t\t\t\t\tif (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\n\t\t\t\t\treturn vec.clone().multiplyScalar(size).add(pt);\n\t\t\t\t}\n\n\t\t\t\tconst vlen = vertices.length,\n\t\t\t\t\t\t\tflen = faces.length; // Find directions for point movement\n\n\t\t\t\tfunction getBevelVec(inPt, inPrev, inNext) {\n\t\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t\t//\t shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t\t//\n\t\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t\t//\tadjacent edges of inPt at a distance of 1 unit on the left side.\n\t\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\t\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\t\t\t\t\tconst v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n\t\t\t\t\tconst collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n\t\t\t\t\tif (Math.abs(collinear0) > Number.EPSILON) {\n\t\t\t\t\t\t// not collinear\n\t\t\t\t\t\t// length of vectors for normalizing\n\t\t\t\t\t\tconst v_prev_len = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\tconst v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n\t\t\t\t\t\tconst ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n\t\t\t\t\t\tconst ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n\t\t\t\t\t\tconst ptNextShift_x = inNext.x - v_next_y / v_next_len;\n\t\t\t\t\t\tconst ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n\t\t\t\t\t\tconst sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n\t\t\t\t\t\tv_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n\t\t\t\t\t\tv_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t\t//\tbut prevent crazy spikes\n\n\t\t\t\t\t\tconst v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n\t\t\t\t\t\tif (v_trans_lensq <= 2) {\n\t\t\t\t\t\t\treturn new Vector2(v_trans_x, v_trans_y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_trans_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// handle special case of collinear edges\n\t\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\t\tif (v_prev_x > Number.EPSILON) {\n\t\t\t\t\t\t\tif (v_next_x > Number.EPSILON) {\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (v_prev_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\tif (v_next_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (direction_eq) {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\t\tv_trans_x = -v_prev_y;\n\t\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n\t\t\t\t}\n\n\t\t\t\tconst contourMovements = [];\n\n\t\t\t\tfor (let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n\t\t\t\t\tif (j === il) j = 0;\n\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\n\t\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\t\tcontourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n\t\t\t\t}\n\n\t\t\t\tconst holesMovements = [];\n\t\t\t\tlet oneHoleMovements,\n\t\t\t\t\t\tverticesMovements = contourMovements.concat();\n\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\toneHoleMovements = [];\n\n\t\t\t\t\tfor (let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n\t\t\t\t\t\tif (j === il) j = 0;\n\t\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\n\n\t\t\t\t\t\toneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n\t\t\t\t\t}\n\n\t\t\t\t\tholesMovements.push(oneHoleMovements);\n\t\t\t\t\tverticesMovements = verticesMovements.concat(oneHoleMovements);\n\t\t\t\t} // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n\t\t\t\tfor (let b = 0; b < bevelSegments; b++) {\n\t\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\n\t\t\t\t\t\tv(vert.x, vert.y, -z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\n\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\t\t\t\t\t\t\tv(vert.x, vert.y, -z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst bs = bevelSize + bevelOffset; // Back facing vertices\n\n\t\t\t\tfor (let i = 0; i < vlen; i++) {\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\tv(vert.x, vert.y, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\t\t\t\t\t\tnormal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n\t\t\t\t\t\tbinormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n\t\t\t\t\t\tposition2.copy(extrudePts[0]).add(normal).add(binormal);\n\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t}\n\t\t\t\t} // Add stepped vertices...\n\t\t\t\t// Including front facing vertices\n\n\n\t\t\t\tfor (let s = 1; s <= steps; s++) {\n\t\t\t\t\tfor (let i = 0; i < vlen; i++) {\n\t\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\tv(vert.x, vert.y, depth / steps * s);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\t\t\t\t\t\t\tnormal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n\t\t\t\t\t\t\tbinormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n\t\t\t\t\t\t\tposition2.copy(extrudePts[s]).add(normal).add(binormal);\n\t\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // Add bevel segments planes\n\t\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n\t\t\t\tfor (let b = bevelSegments - 1; b >= 0; b--) {\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\n\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\n\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n\t\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tv(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* Faces */\n\t\t\t\t// Top and bottom faces\n\n\n\t\t\t\tbuildLidFaces(); // Sides faces\n\n\t\t\t\tbuildSideFaces(); /////\tInternal functions\n\n\t\t\t\tfunction buildLidFaces() {\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\t\tif (bevelEnabled) {\n\t\t\t\t\t\tlet layer = 0; // steps + 1\n\n\t\t\t\t\t\tlet offset = vlen * layer; // Bottom faces\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[2] + offset, face[1] + offset, face[0] + offset);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\t\toffset = vlen * layer; // Top faces\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[0] + offset, face[1] + offset, face[2] + offset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Bottom faces\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[2], face[1], face[0]);\n\t\t\t\t\t\t} // Top faces\n\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 0);\n\t\t\t\t} // Create faces for the z-sides of the shape\n\n\n\t\t\t\tfunction buildSideFaces() {\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\t\tlet layeroffset = 0;\n\t\t\t\t\tsidewalls(contour, layeroffset);\n\t\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\tsidewalls(ahole, layeroffset); //, true\n\n\t\t\t\t\t\tlayeroffset += ahole.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 1);\n\t\t\t\t}\n\n\t\t\t\tfunction sidewalls(contour, layeroffset) {\n\t\t\t\t\tlet i = contour.length;\n\n\t\t\t\t\twhile (--i >= 0) {\n\t\t\t\t\t\tconst j = i;\n\t\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\t\tif (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\t\tfor (let s = 0, sl = steps + bevelSegments * 2; s < sl; s++) {\n\t\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\t\tconst slen2 = vlen * (s + 1);\n\t\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\t\t\t\t\t\t\tf4(a, b, c, d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction v(x, y, z) {\n\t\t\t\t\tplaceholder.push(x);\n\t\t\t\t\tplaceholder.push(y);\n\t\t\t\t\tplaceholder.push(z);\n\t\t\t\t}\n\n\t\t\t\tfunction f3(a, b, c) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t}\n\n\t\t\t\tfunction f4(a, b, c, d) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t}\n\n\t\t\t\tfunction addVertex(index) {\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 0]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 1]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 2]);\n\t\t\t\t}\n\n\t\t\t\tfunction addUV(vector2) {\n\t\t\t\t\tuvArray.push(vector2.x);\n\t\t\t\t\tuvArray.push(vector2.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tconst shapes = this.parameters.shapes;\n\t\t\tconst options = this.parameters.options;\n\t\t\treturn toJSON$1(shapes, options, data);\n\t\t}\n\n\t\tstatic fromJSON(data, shapes) {\n\t\t\tconst geometryShapes = [];\n\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\n\t\t\t\tconst shape = shapes[data.shapes[j]];\n\t\t\t\tgeometryShapes.push(shape);\n\t\t\t}\n\n\t\t\tconst extrudePath = data.options.extrudePath;\n\n\t\t\tif (extrudePath !== undefined) {\n\t\t\t\tdata.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n\t\t\t}\n\n\t\t\treturn new ExtrudeGeometry(geometryShapes, data.options);\n\t\t}\n\n\t}\n\n\tconst WorldUVGenerator = {\n\t\tgenerateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\n\t\t\tconst a_x = vertices[indexA * 3];\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\n\t\t\tconst b_x = vertices[indexB * 3];\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\n\t\t\tconst c_x = vertices[indexC * 3];\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\n\t\t\treturn [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n\t\t},\n\t\tgenerateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\n\t\t\tconst a_x = vertices[indexA * 3];\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\n\t\t\tconst a_z = vertices[indexA * 3 + 2];\n\t\t\tconst b_x = vertices[indexB * 3];\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\n\t\t\tconst b_z = vertices[indexB * 3 + 2];\n\t\t\tconst c_x = vertices[indexC * 3];\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\n\t\t\tconst c_z = vertices[indexC * 3 + 2];\n\t\t\tconst d_x = vertices[indexD * 3];\n\t\t\tconst d_y = vertices[indexD * 3 + 1];\n\t\t\tconst d_z = vertices[indexD * 3 + 2];\n\n\t\t\tif (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\n\t\t\t\treturn [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n\t\t\t} else {\n\t\t\t\treturn [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction toJSON$1(shapes, options, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\tif (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n\t\treturn data;\n\t}\n\n\tclass IcosahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\n\t\t\tconst vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n\t\t\tconst indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'IcosahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new IcosahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tclass LatheGeometry extends BufferGeometry {\n\t\tconstructor(points, segments = 12, phiStart = 0, phiLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LatheGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tpoints: points,\n\t\t\t\tsegments: segments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength\n\t\t\t};\n\t\t\tsegments = Math.floor(segments); // clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\t\tphiLength = clamp(phiLength, 0, Math.PI * 2); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst inverseSegments = 1.0 / segments;\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // generate vertices and uvs\n\n\t\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\t\t\t\tconst sin = Math.sin(phi);\n\t\t\t\tconst cos = Math.cos(phi);\n\n\t\t\t\tfor (let j = 0; j <= points.length - 1; j++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertex.x = points[j].x * sin;\n\t\t\t\t\tvertex.y = points[j].y;\n\t\t\t\t\tvertex.z = points[j].x * cos;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n\t\t\t\t\tuv.x = i / segments;\n\t\t\t\t\tuv.y = j / (points.length - 1);\n\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t}\n\t\t\t} // indices\n\n\n\t\t\tfor (let i = 0; i < segments; i++) {\n\t\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\t\tconst base = j + i * points.length;\n\t\t\t\t\tconst a = base;\n\t\t\t\t\tconst b = base + points.length;\n\t\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\t\tconst d = base + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n\t\t\tthis.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n\t\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\t\tif (phiLength === Math.PI * 2) {\n\t\t\t\tconst normals = this.attributes.normal.array;\n\t\t\t\tconst n1 = new Vector3();\n\t\t\t\tconst n2 = new Vector3();\n\t\t\t\tconst n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n\t\t\t\tconst base = segments * points.length * 3;\n\n\t\t\t\tfor (let i = 0, j = 0; i < points.length; i++, j += 3) {\n\t\t\t\t\t// select the normal of the vertex in the first line\n\t\t\t\t\tn1.x = normals[j + 0];\n\t\t\t\t\tn1.y = normals[j + 1];\n\t\t\t\t\tn1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n\t\t\t\t\tn2.x = normals[base + j + 0];\n\t\t\t\t\tn2.y = normals[base + j + 1];\n\t\t\t\t\tn2.z = normals[base + j + 2]; // average normals\n\n\t\t\t\t\tn.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n\t\t\t\t\tnormals[j + 0] = normals[base + j + 0] = n.x;\n\t\t\t\t\tnormals[j + 1] = normals[base + j + 1] = n.y;\n\t\t\t\t\tnormals[j + 2] = normals[base + j + 2] = n.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new LatheGeometry(data.points, data.segments, data.phiStart, data.phiLength);\n\t\t}\n\n\t}\n\n\tclass OctahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n\t\t\tconst indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'OctahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new OctahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\t/**\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n\t */\n\n\tclass ParametricGeometry extends BufferGeometry {\n\t\tconstructor(func, slices, stacks) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ParametricGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tfunc: func,\n\t\t\t\tslices: slices,\n\t\t\t\tstacks: stacks\n\t\t\t}; // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\t\t\tconst EPS = 0.00001;\n\t\t\tconst normal = new Vector3();\n\t\t\tconst p0 = new Vector3(),\n\t\t\t\t\t\tp1 = new Vector3();\n\t\t\tconst pu = new Vector3(),\n\t\t\t\t\t\tpv = new Vector3();\n\n\t\t\tif (func.length < 3) {\n\t\t\t\tconsole.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');\n\t\t\t} // generate vertices, normals and uvs\n\n\n\t\t\tconst sliceCount = slices + 1;\n\n\t\t\tfor (let i = 0; i <= stacks; i++) {\n\t\t\t\tconst v = i / stacks;\n\n\t\t\t\tfor (let j = 0; j <= slices; j++) {\n\t\t\t\t\tconst u = j / slices; // vertex\n\n\t\t\t\t\tfunc(u, v, p0);\n\t\t\t\t\tvertices.push(p0.x, p0.y, p0.z); // normal\n\t\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\t\tif (u - EPS >= 0) {\n\t\t\t\t\t\tfunc(u - EPS, v, p1);\n\t\t\t\t\t\tpu.subVectors(p0, p1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunc(u + EPS, v, p1);\n\t\t\t\t\t\tpu.subVectors(p1, p0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (v - EPS >= 0) {\n\t\t\t\t\t\tfunc(u, v - EPS, p1);\n\t\t\t\t\t\tpv.subVectors(p0, p1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunc(u, v + EPS, p1);\n\t\t\t\t\t\tpv.subVectors(p1, p0);\n\t\t\t\t\t} // cross product of tangent vectors returns surface normal\n\n\n\t\t\t\t\tnormal.crossVectors(pu, pv).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(u, v);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let i = 0; i < stacks; i++) {\n\t\t\t\tfor (let j = 0; j < slices; j++) {\n\t\t\t\t\tconst a = i * sliceCount + j;\n\t\t\t\t\tconst b = i * sliceCount + j + 1;\n\t\t\t\t\tconst c = (i + 1) * sliceCount + j + 1;\n\t\t\t\t\tconst d = (i + 1) * sliceCount + j; // faces one and two\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t}\n\n\tclass RingGeometry extends BufferGeometry {\n\t\tconstructor(innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'RingGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tthetaSegments: thetaSegments,\n\t\t\t\tphiSegments: phiSegments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tthetaSegments = Math.max(3, thetaSegments);\n\t\t\tphiSegments = Math.max(1, phiSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // some helper variables\n\n\t\t\tlet radius = innerRadius;\n\t\t\tconst radiusStep = (outerRadius - innerRadius) / phiSegments;\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // generate vertices, normals and uvs\n\n\t\t\tfor (let j = 0; j <= phiSegments; j++) {\n\t\t\t\tfor (let i = 0; i <= thetaSegments; i++) {\n\t\t\t\t\t// values are generate from the inside of the ring to the outside\n\t\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n\t\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, 0, 1); // uv\n\n\t\t\t\t\tuv.x = (vertex.x / outerRadius + 1) / 2;\n\t\t\t\t\tuv.y = (vertex.y / outerRadius + 1) / 2;\n\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t} // increase the radius for next row of vertices\n\n\n\t\t\t\tradius += radiusStep;\n\t\t\t} // indices\n\n\n\t\t\tfor (let j = 0; j < phiSegments; j++) {\n\t\t\t\tconst thetaSegmentLevel = j * (thetaSegments + 1);\n\n\t\t\t\tfor (let i = 0; i < thetaSegments; i++) {\n\t\t\t\t\tconst segment = i + thetaSegmentLevel;\n\t\t\t\t\tconst a = segment;\n\t\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\t\tconst d = segment + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new RingGeometry(data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass ShapeGeometry extends BufferGeometry {\n\t\tconstructor(shapes, curveSegments = 12) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShapeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\tcurveSegments: curveSegments\n\t\t\t}; // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet groupStart = 0;\n\t\t\tlet groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n\t\t\tif (Array.isArray(shapes) === false) {\n\t\t\t\taddShape(shapes);\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < shapes.length; i++) {\n\t\t\t\t\taddShape(shapes[i]);\n\t\t\t\t\tthis.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n\t\t\t\t\tgroupStart += groupCount;\n\t\t\t\t\tgroupCount = 0;\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\t\tconst points = shape.extractPoints(curveSegments);\n\t\t\t\tlet shapeVertices = points.shape;\n\t\t\t\tconst shapeHoles = points.holes; // check direction of vertices\n\n\t\t\t\tif (ShapeUtils.isClockWise(shapeVertices) === false) {\n\t\t\t\t\tshapeVertices = shapeVertices.reverse();\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\n\n\t\t\t\t\tif (ShapeUtils.isClockWise(shapeHole) === true) {\n\t\t\t\t\t\tshapeHoles[i] = shapeHole.reverse();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\n\t\t\t\t\tshapeVertices = shapeVertices.concat(shapeHole);\n\t\t\t\t} // vertices, normals, uvs\n\n\n\t\t\t\tfor (let i = 0, l = shapeVertices.length; i < l; i++) {\n\t\t\t\t\tconst vertex = shapeVertices[i];\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(vertex.x, vertex.y); // world uvs\n\t\t\t\t} // incides\n\n\n\t\t\t\tfor (let i = 0, l = faces.length; i < l; i++) {\n\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\tconst a = face[0] + indexOffset;\n\t\t\t\t\tconst b = face[1] + indexOffset;\n\t\t\t\t\tconst c = face[2] + indexOffset;\n\t\t\t\t\tindices.push(a, b, c);\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tconst shapes = this.parameters.shapes;\n\t\t\treturn toJSON(shapes, data);\n\t\t}\n\n\t\tstatic fromJSON(data, shapes) {\n\t\t\tconst geometryShapes = [];\n\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\n\t\t\t\tconst shape = shapes[data.shapes[j]];\n\t\t\t\tgeometryShapes.push(shape);\n\t\t\t}\n\n\t\t\treturn new ShapeGeometry(geometryShapes, data.curveSegments);\n\t\t}\n\n\t}\n\n\tfunction toJSON(shapes, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tclass SphereGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, widthSegments = 8, heightSegments = 6, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SphereGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\twidthSegments = Math.max(3, Math.floor(widthSegments));\n\t\t\theightSegments = Math.max(2, Math.floor(heightSegments));\n\t\t\tconst thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n\t\t\tlet index = 0;\n\t\t\tconst grid = [];\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3(); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // generate vertices, normals and uvs\n\n\t\t\tfor (let iy = 0; iy <= heightSegments; iy++) {\n\t\t\t\tconst verticesRow = [];\n\t\t\t\tconst v = iy / heightSegments; // special case for the poles\n\n\t\t\t\tlet uOffset = 0;\n\n\t\t\t\tif (iy == 0 && thetaStart == 0) {\n\t\t\t\t\tuOffset = 0.5 / widthSegments;\n\t\t\t\t} else if (iy == heightSegments && thetaEnd == Math.PI) {\n\t\t\t\t\tuOffset = -0.5 / widthSegments;\n\t\t\t\t}\n\n\t\t\t\tfor (let ix = 0; ix <= widthSegments; ix++) {\n\t\t\t\t\tconst u = ix / widthSegments; // vertex\n\n\t\t\t\t\tvertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormal.copy(vertex).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(u + uOffset, 1 - v);\n\t\t\t\t\tverticesRow.push(index++);\n\t\t\t\t}\n\n\t\t\t\tgrid.push(verticesRow);\n\t\t\t} // indices\n\n\n\t\t\tfor (let iy = 0; iy < heightSegments; iy++) {\n\t\t\t\tfor (let ix = 0; ix < widthSegments; ix++) {\n\t\t\t\t\tconst a = grid[iy][ix + 1];\n\t\t\t\t\tconst b = grid[iy][ix];\n\t\t\t\t\tconst c = grid[iy + 1][ix];\n\t\t\t\t\tconst d = grid[iy + 1][ix + 1];\n\t\t\t\t\tif (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n\t\t\t\t\tif (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new SphereGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass TetrahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n\t\t\tconst indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'TetrahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TetrahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\t/**\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *\tfont: <THREE.Font>, // font\n\t *\n\t *\tsize: <float>, // size of the text\n\t *\theight: <float>, // thickness to extrude text\n\t *\tcurveSegments: <int>, // number of points on the curves\n\t *\n\t *\tbevelEnabled: <bool>, // turn on bevel\n\t *\tbevelThickness: <float>, // how deep into text bevel goes\n\t *\tbevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n\t *\tbevelOffset: <float> // how far from text outline does bevel start\n\t * }\n\t */\n\n\tclass TextGeometry extends ExtrudeGeometry {\n\t\tconstructor(text, parameters = {}) {\n\t\t\tconst font = parameters.font;\n\n\t\t\tif (!(font && font.isFont)) {\n\t\t\t\tconsole.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n\t\t\t\treturn new BufferGeometry();\n\t\t\t}\n\n\t\t\tconst shapes = font.generateShapes(text, parameters.size); // translate parameters to ExtrudeGeometry API\n\n\t\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n\t\t\tif (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n\t\t\tif (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n\t\t\tif (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n\t\t\tsuper(shapes, parameters);\n\t\t\tthis.type = 'TextGeometry';\n\t\t}\n\n\t}\n\n\tclass TorusGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TorusGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tarc: arc\n\t\t\t};\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\ttubularSegments = Math.floor(tubularSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst center = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2; // vertex\n\n\t\t\t\t\tvertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n\t\t\t\t\tvertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n\t\t\t\t\tvertex.z = tube * Math.sin(v);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tcenter.x = radius * Math.cos(u);\n\t\t\t\t\tcenter.y = radius * Math.sin(u);\n\t\t\t\t\tnormal.subVectors(vertex, center).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let j = 1; j <= radialSegments; j++) {\n\t\t\t\tfor (let i = 1; i <= tubularSegments; i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tconst a = (tubularSegments + 1) * j + i - 1;\n\t\t\t\t\tconst b = (tubularSegments + 1) * (j - 1) + i - 1;\n\t\t\t\t\tconst c = (tubularSegments + 1) * (j - 1) + i;\n\t\t\t\t\tconst d = (tubularSegments + 1) * j + i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TorusGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n\t\t}\n\n\t}\n\n\tclass TorusKnotGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TorusKnotGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tp: p,\n\t\t\t\tq: q\n\t\t\t};\n\t\t\ttubularSegments = Math.floor(tubularSegments);\n\t\t\tradialSegments = Math.floor(radialSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst P1 = new Vector3();\n\t\t\tconst P2 = new Vector3();\n\t\t\tconst B = new Vector3();\n\t\t\tconst T = new Vector3();\n\t\t\tconst N = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (let i = 0; i <= tubularSegments; ++i) {\n\t\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\t\t\t\tconst u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\t\tcalculatePositionOnCurve(u, p, q, radius, P1);\n\t\t\t\tcalculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n\t\t\t\tT.subVectors(P2, P1);\n\t\t\t\tN.addVectors(P2, P1);\n\t\t\t\tB.crossVectors(T, N);\n\t\t\t\tN.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n\t\t\t\tB.normalize();\n\t\t\t\tN.normalize();\n\n\t\t\t\tfor (let j = 0; j <= radialSegments; ++j) {\n\t\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tconst cx = -tube * Math.cos(v);\n\t\t\t\t\tconst cy = tube * Math.sin(v); // now calculate the final vertex position.\n\t\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\t\tvertex.x = P1.x + (cx * N.x + cy * B.x);\n\t\t\t\t\tvertex.y = P1.y + (cx * N.y + cy * B.y);\n\t\t\t\t\tvertex.z = P1.z + (cx * N.z + cy * B.z);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\t\tnormal.subVectors(vertex, P1).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\n\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\n\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\n\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\n\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n\t\t\tfunction calculatePositionOnCurve(u, p, q, radius, position) {\n\t\t\t\tconst cu = Math.cos(u);\n\t\t\t\tconst su = Math.sin(u);\n\t\t\t\tconst quOverP = q / p * u;\n\t\t\t\tconst cs = Math.cos(quOverP);\n\t\t\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\n\t\t\t\tposition.y = radius * (2 + cs) * su * 0.5;\n\t\t\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TorusKnotGeometry(data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n\t\t}\n\n\t}\n\n\tclass TubeGeometry extends BufferGeometry {\n\t\tconstructor(path, tubularSegments = 64, radius = 1, radialSegments = 8, closed = false) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TubeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tpath: path,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradius: radius,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tclosed: closed\n\t\t\t};\n\t\t\tconst frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n\t\t\tthis.tangents = frames.tangents;\n\t\t\tthis.normals = frames.normals;\n\t\t\tthis.binormals = frames.binormals; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst uv = new Vector2();\n\t\t\tlet P = new Vector3(); // buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\t\t\tconst indices = []; // create buffer data\n\n\t\t\tgenerateBufferData(); // build geometry\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n\t\t\tfunction generateBufferData() {\n\t\t\t\tfor (let i = 0; i < tubularSegments; i++) {\n\t\t\t\t\tgenerateSegment(i);\n\t\t\t\t} // if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t\t// at the regular position on the given path\n\t\t\t\t//\n\t\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n\t\t\t\tgenerateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n\t\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\t\tgenerateUVs(); // finally create faces\n\n\t\t\t\tgenerateIndices();\n\t\t\t}\n\n\t\t\tfunction generateSegment(i) {\n\t\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\t\t\t\tP = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n\t\t\t\tconst N = frames.normals[i];\n\t\t\t\tconst B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tconst sin = Math.sin(v);\n\t\t\t\t\tconst cos = -Math.cos(v); // normal\n\n\t\t\t\t\tnormal.x = cos * N.x + sin * B.x;\n\t\t\t\t\tnormal.y = cos * N.y + sin * B.y;\n\t\t\t\t\tnormal.z = cos * N.z + sin * B.z;\n\t\t\t\t\tnormal.normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // vertex\n\n\t\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\t\tvertex.z = P.z + radius * normal.z;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateIndices() {\n\t\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\n\t\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\n\t\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\n\t\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\n\t\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\n\t\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\t\tuv.y = j / radialSegments;\n\t\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.path = this.parameters.path.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\treturn new TubeGeometry(new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n\t\t}\n\n\t}\n\n\tclass WireframeGeometry extends BufferGeometry {\n\t\tconstructor(geometry) {\n\t\t\tsuper();\n\t\t\tthis.type = 'WireframeGeometry';\n\n\t\t\tif (geometry.isGeometry === true) {\n\t\t\t\tconsole.error('THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\treturn;\n\t\t\t} // buffer\n\n\n\t\t\tconst vertices = []; // helper variables\n\n\t\t\tconst edge = [0, 0],\n\t\t\t\t\t\tedges = {};\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tif (geometry.index !== null) {\n\t\t\t\t// indexed BufferGeometry\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif (groups.length === 0) {\n\t\t\t\t\tgroups = [{\n\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\tcount: indices.count,\n\t\t\t\t\t\tmaterialIndex: 0\n\t\t\t\t\t}];\n\t\t\t\t} // create a data structure that contains all eges without duplicates\n\n\n\t\t\t\tfor (let o = 0, ol = groups.length; o < ol; ++o) {\n\t\t\t\t\tconst group = groups[o];\n\t\t\t\t\tconst start = group.start;\n\t\t\t\t\tconst count = group.count;\n\n\t\t\t\t\tfor (let i = start, l = start + count; i < l; i += 3) {\n\t\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t\tconst edge1 = indices.getX(i + j);\n\t\t\t\t\t\t\tconst edge2 = indices.getX(i + (j + 1) % 3);\n\t\t\t\t\t\t\tedge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n\t\t\t\t\t\t\tedge[1] = Math.max(edge1, edge2);\n\t\t\t\t\t\t\tconst key = edge[0] + ',' + edge[1];\n\n\t\t\t\t\t\t\tif (edges[key] === undefined) {\n\t\t\t\t\t\t\t\tedges[key] = {\n\t\t\t\t\t\t\t\t\tindex1: edge[0],\n\t\t\t\t\t\t\t\t\tindex2: edge[1]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // generate vertices\n\n\n\t\t\t\tfor (const key in edges) {\n\t\t\t\t\tconst e = edges[key];\n\t\t\t\t\tvertex.fromBufferAttribute(position, e.index1);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t\tvertex.fromBufferAttribute(position, e.index2);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// non-indexed BufferGeometry\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor (let i = 0, l = position.count / 3; i < l; i++) {\n\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tvertex.fromBufferAttribute(position, index1);\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t\t\tconst index2 = 3 * i + (j + 1) % 3;\n\t\t\t\t\t\tvertex.fromBufferAttribute(position, index2);\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t}\n\n\t}\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeGeometry,\n\t\tWireframeGeometry: WireframeGeometry\n\t});\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <THREE.Color>\n\t * }\n\t */\n\n\tclass ShadowMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShadowMaterial';\n\t\t\tthis.color = new Color(0x000000);\n\t\t\tthis.transparent = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\tclass RawShaderMaterial extends ShaderMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper(parameters);\n\t\t\tthis.type = 'RawShaderMaterial';\n\t\t}\n\n\t}\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\troughness: <float>,\n\t *\tmetalness: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\troughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmetalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tenvMapIntensity: <float>\n\t *\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshStandardMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshStandardMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.roughness = 1.0;\n\t\t\tthis.metalness = 0.0;\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.roughnessMap = null;\n\t\t\tthis.metalnessMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.envMapIntensity = 1.0;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.vertexTangents = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': ''\n\t\t\t};\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.roughness = source.roughness;\n\t\t\tthis.metalness = source.metalness;\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.roughnessMap = source.roughnessMap;\n\t\t\tthis.metalnessMap = source.metalnessMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.envMapIntensity = source.envMapIntensity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\tthis.vertexTangents = source.vertexTangents;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tclearcoat: <float>,\n\t *\tclearcoatMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatRoughness: <float>,\n\t *\tclearcoatRoughnessMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatNormalScale: <Vector2>,\n\t *\tclearcoatNormalMap: new THREE.Texture( <Image> ),\n\t *\n\t *\treflectivity: <float>,\n\t *\tior: <float>,\n\t *\n\t *\tsheen: <Color>,\n\t *\n\t *\ttransmission: <float>,\n\t *\ttransmissionMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tthickness: <float>,\n\t *\tthicknessMap: new THREE.Texture( <Image> ),\n\t *\tattenuationDistance: <float>,\n\t *\tattenuationColor: <Color>\n\t * }\n\t */\n\n\tclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshPhysicalMaterial';\n\t\t\tthis.clearcoat = 0.0;\n\t\t\tthis.clearcoatMap = null;\n\t\t\tthis.clearcoatRoughness = 0.0;\n\t\t\tthis.clearcoatRoughnessMap = null;\n\t\t\tthis.clearcoatNormalScale = new Vector2(1, 1);\n\t\t\tthis.clearcoatNormalMap = null;\n\t\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\t\tObject.defineProperty(this, 'ior', {\n\t\t\t\tget: function () {\n\t\t\t\t\treturn (1 + 0.4 * this.reflectivity) / (1 - 0.4 * this.reflectivity);\n\t\t\t\t},\n\t\t\t\tset: function (ior) {\n\t\t\t\t\tthis.reflectivity = clamp(2.5 * (ior - 1) / (ior + 1), 0, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.sheen = null; // null will disable sheen bsdf\n\n\t\t\tthis.transmission = 0.0;\n\t\t\tthis.transmissionMap = null;\n\t\t\tthis.thickness = 0.01;\n\t\t\tthis.thicknessMap = null;\n\t\t\tthis.attenuationDistance = 0.0;\n\t\t\tthis.attenuationColor = new Color(1, 1, 1);\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\t\t\t};\n\t\t\tthis.clearcoat = source.clearcoat;\n\t\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\t\tthis.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n\t\t\tthis.reflectivity = source.reflectivity;\n\n\t\t\tif (source.sheen) {\n\t\t\t\tthis.sheen = (this.sheen || new Color()).copy(source.sheen);\n\t\t\t} else {\n\t\t\t\tthis.sheen = null;\n\t\t\t}\n\n\t\t\tthis.transmission = source.transmission;\n\t\t\tthis.transmissionMap = source.transmissionMap;\n\t\t\tthis.thickness = source.thickness;\n\t\t\tthis.thicknessMap = source.thicknessMap;\n\t\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\t\tthis.attenuationColor.copy(source.attenuationColor);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tspecular: <hex>,\n\t *\tshininess: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.MultiplyOperation,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshPhongMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshPhongMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.specular = new Color(0x111111);\n\t\t\tthis.shininess = 30;\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.specular.copy(source.specular);\n\t\t\tthis.shininess = source.shininess;\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\tgradientMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tclass MeshToonMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'TOON': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshToonMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.gradientMap = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.gradientMap = source.gradientMap;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\topacity: <float>,\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshNormalMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshNormalMaterial';\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tclass MeshLambertMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshLambertMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmatcap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshMatcapMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'MATCAP': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshMatcapMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.matcap = null;\n\t\t\tthis.map = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'MATCAP': ''\n\t\t\t};\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.matcap = source.matcap;\n\t\t\tthis.map = source.map;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\n\t *\tscale: <float>,\n\t *\tdashSize: <float>,\n\t *\tgapSize: <float>\n\t * }\n\t */\n\n\tclass LineDashedMaterial extends LineBasicMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineDashedMaterial';\n\t\t\tthis.scale = 1;\n\t\t\tthis.dashSize = 3;\n\t\t\tthis.gapSize = 1;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.scale = source.scale;\n\t\t\tthis.dashSize = source.dashSize;\n\t\t\tthis.gapSize = source.gapSize;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\tconst AnimationUtils = {\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function (array, from, to) {\n\t\t\tif (AnimationUtils.isTypedArray(array)) {\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n\t\t\t}\n\n\t\t\treturn array.slice(from, to);\n\t\t},\n\t\t// converts an array to a specific type\n\t\tconvertArray: function (array, type, forceClone) {\n\t\t\tif (!array || // let 'undefined' and 'null' pass\n\t\t\t!forceClone && array.constructor === type) return array;\n\n\t\t\tif (typeof type.BYTES_PER_ELEMENT === 'number') {\n\t\t\t\treturn new type(array); // create typed array\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call(array); // create Array\n\t\t},\n\t\tisTypedArray: function (object) {\n\t\t\treturn ArrayBuffer.isView(object) && !(object instanceof DataView);\n\t\t},\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function (times) {\n\t\t\tfunction compareTime(i, j) {\n\t\t\t\treturn times[i] - times[j];\n\t\t\t}\n\n\t\t\tconst n = times.length;\n\t\t\tconst result = new Array(n);\n\n\t\t\tfor (let i = 0; i !== n; ++i) result[i] = i;\n\n\t\t\tresult.sort(compareTime);\n\t\t\treturn result;\n\t\t},\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function (values, stride, order) {\n\t\t\tconst nValues = values.length;\n\t\t\tconst result = new values.constructor(nValues);\n\n\t\t\tfor (let i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n\t\t\t\tconst srcOffset = order[i] * stride;\n\n\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\tresult[dstOffset++] = values[srcOffset + j];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n\t\t\tlet i = 1,\n\t\t\t\t\tkey = jsonKeys[0];\n\n\t\t\twhile (key !== undefined && key[valuePropertyName] === undefined) {\n\t\t\t\tkey = jsonKeys[i++];\n\t\t\t}\n\n\t\t\tif (key === undefined) return; // no data\n\n\t\t\tlet value = key[valuePropertyName];\n\t\t\tif (value === undefined) return; // no data\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push.apply(values, value); // push all elements\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else if (value.toArray !== undefined) {\n\t\t\t\t// ...assume THREE.Math-ish\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalue.toArray(values, values.length);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else {\n\t\t\t\t// otherwise push as-is\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t}\n\t\t},\n\t\tsubclip: function (sourceClip, name, startFrame, endFrame, fps = 30) {\n\t\t\tconst clip = sourceClip.clone();\n\t\t\tclip.name = name;\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tconst track = clip.tracks[i];\n\t\t\t\tconst valueSize = track.getValueSize();\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (let j = 0; j < track.times.length; ++j) {\n\t\t\t\t\tconst frame = track.times[j] * fps;\n\t\t\t\t\tif (frame < startFrame || frame >= endFrame) continue;\n\t\t\t\t\ttimes.push(track.times[j]);\n\n\t\t\t\t\tfor (let k = 0; k < valueSize; ++k) {\n\t\t\t\t\t\tvalues.push(track.values[j * valueSize + k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (times.length === 0) continue;\n\t\t\t\ttrack.times = AnimationUtils.convertArray(times, track.times.constructor);\n\t\t\t\ttrack.values = AnimationUtils.convertArray(values, track.values.constructor);\n\t\t\t\ttracks.push(track);\n\t\t\t}\n\n\t\t\tclip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\n\n\t\t\tlet minStartTime = Infinity;\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tif (minStartTime > clip.tracks[i].times[0]) {\n\t\t\t\t\tminStartTime = clip.tracks[i].times[0];\n\t\t\t\t}\n\t\t\t} // shift all tracks such that clip begins at t=0\n\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tclip.tracks[i].shift(-1 * minStartTime);\n\t\t\t}\n\n\t\t\tclip.resetDuration();\n\t\t\treturn clip;\n\t\t},\n\t\tmakeClipAdditive: function (targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30) {\n\t\t\tif (fps <= 0) fps = 30;\n\t\t\tconst numTracks = referenceClip.tracks.length;\n\t\t\tconst referenceTime = referenceFrame / fps; // Make each track's values relative to the values at the reference frame\n\n\t\t\tfor (let i = 0; i < numTracks; ++i) {\n\t\t\t\tconst referenceTrack = referenceClip.tracks[i];\n\t\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName; // Skip this track if it's non-numeric\n\n\t\t\t\tif (referenceTrackType === 'bool' || referenceTrackType === 'string') continue; // Find the track in the target clip whose name and type matches the reference track\n\n\t\t\t\tconst targetTrack = targetClip.tracks.find(function (track) {\n\t\t\t\t\treturn track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\n\t\t\t\t});\n\t\t\t\tif (targetTrack === undefined) continue;\n\t\t\t\tlet referenceOffset = 0;\n\t\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\t\tif (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\treferenceOffset = referenceValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tlet targetOffset = 0;\n\t\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\t\tif (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\ttargetOffset = targetValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\t\tlet referenceValue; // Find the value to subtract out of the track\n\n\t\t\t\tif (referenceTime <= referenceTrack.times[0]) {\n\t\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n\t\t\t\t} else if (referenceTime >= referenceTrack.times[lastIndex]) {\n\t\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n\t\t\t\t} else {\n\t\t\t\t\t// Interpolate to the reference value\n\t\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t\tinterpolant.evaluate(referenceTime);\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(interpolant.resultBuffer, startIndex, endIndex);\n\t\t\t\t} // Conjugate the quaternion\n\n\n\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\tconst referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\n\t\t\t\t\treferenceQuat.toArray(referenceValue);\n\t\t\t\t} // Subtract the reference value from all of the track values\n\n\n\t\t\t\tconst numTimes = targetTrack.times.length;\n\n\t\t\t\tfor (let j = 0; j < numTimes; ++j) {\n\t\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(targetTrack.values, valueStart, referenceValue, 0, targetTrack.values, valueStart);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2; // Subtract each value for all other numeric track types\n\n\t\t\t\t\t\tfor (let k = 0; k < valueEnd; ++k) {\n\t\t\t\t\t\t\ttargetTrack.values[valueStart + k] -= referenceValue[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\t\t\treturn targetClip;\n\t\t}\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t */\n\tclass Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tthis.parameterPositions = parameterPositions;\n\t\t\tthis._cachedIndex = 0;\n\t\t\tthis.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n\t\t\tthis.sampleValues = sampleValues;\n\t\t\tthis.valueSize = sampleSize;\n\t\t\tthis.settings = null;\n\t\t\tthis.DefaultSettings_ = {};\n\t\t}\n\n\t\tevaluate(t) {\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet i1 = this._cachedIndex,\n\t\t\t\t\tt1 = pp[i1],\n\t\t\t\t\tt0 = pp[i1 - 1];\n\n\t\t\tvalidate_interval: {\n\t\t\t\tseek: {\n\t\t\t\t\tlet right;\n\n\t\t\t\t\tlinear_scan: {\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if (!(t < t1)) {\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 + 2;;) {\n\t\t\t\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\t\t\t\tif (t < t0) break forward_scan; // after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t, t0);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[++i1];\n\n\t\t\t\t\t\t\t\tif (t < t1) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the right side of the index\n\n\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} //- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n\t\t\t\t\t\tif (!(t >= t0)) {\n\t\t\t\t\t\t\t// looping?\n\t\t\t\t\t\t\tconst t1global = pp[1];\n\n\t\t\t\t\t\t\tif (t < t1global) {\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\n\t\t\t\t\t\t\t\tt0 = t1global;\n\t\t\t\t\t\t\t} // linear reverse scan\n\n\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 - 2;;) {\n\t\t\t\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\t\t\t\t// before start\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[--i1 - 1];\n\n\t\t\t\t\t\t\t\tif (t >= t0) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the left side of the index\n\n\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} // the interval is valid\n\n\n\t\t\t\t\t\tbreak validate_interval;\n\t\t\t\t\t} // linear scan\n\t\t\t\t\t// binary search\n\n\n\t\t\t\t\twhile (i1 < right) {\n\t\t\t\t\t\tconst mid = i1 + right >>> 1;\n\n\t\t\t\t\t\tif (t < pp[mid]) {\n\t\t\t\t\t\t\tright = mid;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ti1 = mid + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[i1];\n\t\t\t\t\tt0 = pp[i1 - 1]; // check boundary cases, again\n\n\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t0, t);\n\t\t\t\t\t}\n\t\t\t\t} // seek\n\n\n\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\tthis.intervalChanged_(i1, t0, t1);\n\t\t\t} // validate_interval\n\n\n\t\t\treturn this.interpolate_(i1, t0, t, t1);\n\t\t}\n\n\t\tgetSettings_() {\n\t\t\treturn this.settings || this.DefaultSettings_;\n\t\t}\n\n\t\tcopySampleValue_(index) {\n\t\t\t// copies a sample value to the result buffer\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = index * stride;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} // Template methods for derived classes:\n\n\n\t\tinterpolate_()\n\t\t/* i1, t0, t, t1 */\n\t\t{\n\t\t\tthrow new Error('call to abstract method'); // implementations shall return this.resultBuffer\n\t\t}\n\n\t\tintervalChanged_()\n\t\t/* i1, t0, t1 */\n\t\t{// empty\n\t\t}\n\n\t} // ALIAS DEFINITIONS\n\n\n\tInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\n\tInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t */\n\n\tclass CubicInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t\tthis._weightPrev = -0;\n\t\t\tthis._offsetPrev = -0;\n\t\t\tthis._weightNext = -0;\n\t\t\tthis._offsetNext = -0;\n\t\t\tthis.DefaultSettings_ = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\t\t}\n\n\t\tintervalChanged_(i1, t0, t1) {\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet iPrev = i1 - 2,\n\t\t\t\t\tiNext = i1 + 1,\n\t\t\t\t\ttPrev = pp[iPrev],\n\t\t\t\t\ttNext = pp[iNext];\n\n\t\t\tif (tPrev === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingStart) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tNext === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingEnd) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[1] - pp[0];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst halfDt = (t1 - t0) * 0.5,\n\t\t\t\t\t\tstride = this.valueSize;\n\t\t\tthis._weightPrev = halfDt / (t0 - tPrev);\n\t\t\tthis._weightNext = halfDt / (tNext - t1);\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\to1 = i1 * stride,\n\t\t\t\t\t\to0 = o1 - stride,\n\t\t\t\t\t\toP = this._offsetPrev,\n\t\t\t\t\t\toN = this._offsetNext,\n\t\t\t\t\t\twP = this._weightPrev,\n\t\t\t\t\t\twN = this._weightNext,\n\t\t\t\t\t\tp = (t - t0) / (t1 - t0),\n\t\t\t\t\t\tpp = p * p,\n\t\t\t\t\t\tppp = pp * p; // evaluate polynomials\n\n\t\t\tconst sP = -wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tconst s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n\t\t\tconst s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n\t\t\tconst sN = wN * ppp - wN * pp; // combine data linearly\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\tclass LinearInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset1 = i1 * stride,\n\t\t\t\t\t\toffset0 = offset1 - stride,\n\t\t\t\t\t\tweight1 = (t - t0) / (t1 - t0),\n\t\t\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t */\n\n\tclass DiscreteInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1\n\t\t/*, t0, t, t1 */\n\t\t) {\n\t\t\treturn this.copySampleValue_(i1 - 1);\n\t\t}\n\n\t}\n\n\tclass KeyframeTrack {\n\t\tconstructor(name, times, values, interpolation) {\n\t\t\tif (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n\t\t\tif (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n\t\t\tthis.name = name;\n\t\t\tthis.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n\t\t\tthis.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n\t\t\tthis.setInterpolation(interpolation || this.DefaultInterpolation);\n\t\t} // Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\n\t\tstatic toJSON(track) {\n\t\t\tconst trackType = track.constructor;\n\t\t\tlet json; // derived classes can define a static toJSON method\n\n\t\t\tif (trackType.toJSON !== this.toJSON) {\n\t\t\t\tjson = trackType.toJSON(track);\n\t\t\t} else {\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray(track.times, Array),\n\t\t\t\t\t'values': AnimationUtils.convertArray(track.values, Array)\n\t\t\t\t};\n\t\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\t\tif (interpolation !== track.DefaultInterpolation) {\n\t\t\t\t\tjson.interpolation = interpolation;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\t\t}\n\n\t\tInterpolantFactoryMethodDiscrete(result) {\n\t\t\treturn new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tInterpolantFactoryMethodLinear(result) {\n\t\t\treturn new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tInterpolantFactoryMethodSmooth(result) {\n\t\t\treturn new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tsetInterpolation(interpolation) {\n\t\t\tlet factoryMethod;\n\n\t\t\tswitch (interpolation) {\n\t\t\t\tcase InterpolateDiscrete:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (factoryMethod === undefined) {\n\t\t\t\tconst message = 'unsupported interpolation for ' + this.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\t\tif (this.createInterpolant === undefined) {\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif (interpolation !== this.DefaultInterpolation) {\n\t\t\t\t\t\tthis.setInterpolation(this.DefaultInterpolation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(message); // fatal, in this case\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconsole.warn('THREE.KeyframeTrack:', message);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetInterpolation() {\n\t\t\tswitch (this.createInterpolant) {\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\t\t\t\t\treturn InterpolateSmooth;\n\t\t\t}\n\t\t}\n\n\t\tgetValueSize() {\n\t\t\treturn this.values.length / this.times.length;\n\t\t} // move all keyframes either forwards or backwards in time\n\n\n\t\tshift(timeOffset) {\n\t\t\tif (timeOffset !== 0.0) {\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] += timeOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\n\n\t\tscale(timeScale) {\n\t\t\tif (timeScale !== 1.0) {\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] *= timeScale;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\n\n\t\ttrim(startTime, endTime) {\n\t\t\tconst times = this.times,\n\t\t\t\t\t\tnKeys = times.length;\n\t\t\tlet from = 0,\n\t\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile (from !== nKeys && times[from] < startTime) {\n\t\t\t\t++from;\n\t\t\t}\n\n\t\t\twhile (to !== -1 && times[to] > endTime) {\n\t\t\t\t--to;\n\t\t\t}\n\n\t\t\t++to; // inclusive -> exclusive bound\n\n\t\t\tif (from !== 0 || to !== nKeys) {\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif (from >= to) {\n\t\t\t\t\tto = Math.max(to, 1);\n\t\t\t\t\tfrom = to - 1;\n\t\t\t\t}\n\n\t\t\t\tconst stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, from, to);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\n\n\t\tvalidate() {\n\t\t\tlet valid = true;\n\t\t\tconst valueSize = this.getValueSize();\n\n\t\t\tif (valueSize - Math.floor(valueSize) !== 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tconst times = this.times,\n\t\t\t\t\t\tvalues = this.values,\n\t\t\t\t\t\tnKeys = times.length;\n\n\t\t\tif (nKeys === 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Track is empty.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tlet prevTime = null;\n\n\t\t\tfor (let i = 0; i !== nKeys; i++) {\n\t\t\t\tconst currTime = times[i];\n\n\t\t\t\tif (typeof currTime === 'number' && isNaN(currTime)) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (prevTime !== null && prevTime > currTime) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\t\t\t}\n\n\t\t\tif (values !== undefined) {\n\t\t\t\tif (AnimationUtils.isTypedArray(values)) {\n\t\t\t\t\tfor (let i = 0, n = values.length; i !== n; ++i) {\n\t\t\t\t\t\tconst value = values[i];\n\n\t\t\t\t\t\tif (isNaN(value)) {\n\t\t\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t} // removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\n\n\t\toptimize() {\n\t\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\t\tconst times = AnimationUtils.arraySlice(this.times),\n\t\t\t\t\t\tvalues = AnimationUtils.arraySlice(this.values),\n\t\t\t\t\t\tstride = this.getValueSize(),\n\t\t\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\t\t\t\t\t\tlastIndex = times.length - 1;\n\t\t\tlet writeIndex = 1;\n\n\t\t\tfor (let i = 1; i < lastIndex; ++i) {\n\t\t\t\tlet keep = false;\n\t\t\t\tconst time = times[i];\n\t\t\t\tconst timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif (time !== timeNext && (i !== 1 || time !== times[0])) {\n\t\t\t\t\tif (!smoothInterpolation) {\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\t\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\t\t\tconst value = values[offset + j];\n\n\t\t\t\t\t\t\tif (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t}\n\t\t\t\t} // in-place compaction\n\n\n\t\t\t\tif (keep) {\n\t\t\t\t\tif (i !== writeIndex) {\n\t\t\t\t\t\ttimes[writeIndex] = times[i];\n\t\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t++writeIndex;\n\t\t\t\t}\n\t\t\t} // flush last keyframe (compaction looks ahead)\n\n\n\t\t\tif (lastIndex > 0) {\n\t\t\t\ttimes[writeIndex] = times[lastIndex];\n\n\t\t\t\tfor (let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) {\n\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\n\t\t\t\t}\n\n\t\t\t\t++writeIndex;\n\t\t\t}\n\n\t\t\tif (writeIndex !== times.length) {\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n\t\t\t} else {\n\t\t\t\tthis.times = times;\n\t\t\t\tthis.values = values;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst times = AnimationUtils.arraySlice(this.times, 0);\n\t\t\tconst values = AnimationUtils.arraySlice(this.values, 0);\n\t\t\tconst TypedKeyframeTrack = this.constructor;\n\t\t\tconst track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\n\n\t\t\ttrack.createInterpolant = this.createInterpolant;\n\t\t\treturn track;\n\t\t}\n\n\t}\n\n\tKeyframeTrack.prototype.TimeBufferType = Float32Array;\n\tKeyframeTrack.prototype.ValueBufferType = Float32Array;\n\tKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n\t/**\n\t * A Track of Boolean keyframe values.\n\t */\n\n\tclass BooleanKeyframeTrack extends KeyframeTrack {}\n\n\tBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\n\tBooleanKeyframeTrack.prototype.ValueBufferType = Array;\n\tBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined; // Note: Actually this track could have a optimized / compressed\n\n\t/**\n\t * A Track of keyframe values that represent color.\n\t */\n\n\tclass ColorKeyframeTrack extends KeyframeTrack {}\n\n\tColorKeyframeTrack.prototype.ValueTypeName = 'color'; // ValueBufferType is inherited\n\n\t/**\n\t * A Track of numeric keyframe values.\n\t */\n\n\tclass NumberKeyframeTrack extends KeyframeTrack {}\n\n\tNumberKeyframeTrack.prototype.ValueTypeName = 'number'; // ValueBufferType is inherited\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t */\n\n\tclass QuaternionLinearInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\talpha = (t - t0) / (t1 - t0);\n\t\t\tlet offset = i1 * stride;\n\n\t\t\tfor (let end = offset + stride; offset !== end; offset += 4) {\n\t\t\t\tQuaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\t/**\n\t * A Track of quaternion keyframe values.\n\t */\n\n\tclass QuaternionKeyframeTrack extends KeyframeTrack {\n\t\tInterpolantFactoryMethodLinear(result) {\n\t\t\treturn new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion'; // ValueBufferType is inherited\n\n\tQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\tQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track that interpolates Strings\n\t */\n\n\tclass StringKeyframeTrack extends KeyframeTrack {}\n\n\tStringKeyframeTrack.prototype.ValueTypeName = 'string';\n\tStringKeyframeTrack.prototype.ValueBufferType = Array;\n\tStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track of vectored keyframe values.\n\t */\n\n\tclass VectorKeyframeTrack extends KeyframeTrack {}\n\n\tVectorKeyframeTrack.prototype.ValueTypeName = 'vector'; // ValueBufferType is inherited\n\n\tclass AnimationClip {\n\t\tconstructor(name, duration = -1, tracks, blendMode = NormalAnimationBlendMode) {\n\t\t\tthis.name = name;\n\t\t\tthis.tracks = tracks;\n\t\t\tthis.duration = duration;\n\t\t\tthis.blendMode = blendMode;\n\t\t\tthis.uuid = generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n\t\t\tif (this.duration < 0) {\n\t\t\t\tthis.resetDuration();\n\t\t\t}\n\t\t}\n\n\t\tstatic parse(json) {\n\t\t\tconst tracks = [],\n\t\t\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\t\t\tframeTime = 1.0 / (json.fps || 1.0);\n\n\t\t\tfor (let i = 0, n = jsonTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n\t\t\t}\n\n\t\t\tconst clip = new this(json.name, json.duration, tracks, json.blendMode);\n\t\t\tclip.uuid = json.uuid;\n\t\t\treturn clip;\n\t\t}\n\n\t\tstatic toJSON(clip) {\n\t\t\tconst tracks = [],\n\t\t\t\t\t\tclipTracks = clip.tracks;\n\t\t\tconst json = {\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid,\n\t\t\t\t'blendMode': clip.blendMode\n\t\t\t};\n\n\t\t\tfor (let i = 0, n = clipTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n\t\t\t}\n\n\t\t\treturn json;\n\t\t}\n\n\t\tstatic CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n\t\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < numMorphTargets; i++) {\n\t\t\t\tlet times = [];\n\t\t\t\tlet values = [];\n\t\t\t\ttimes.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n\t\t\t\tvalues.push(0, 1, 0);\n\t\t\t\tconst order = AnimationUtils.getKeyframeOrder(times);\n\t\t\t\ttimes = AnimationUtils.sortedArray(times, 1, order);\n\t\t\t\tvalues = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\n\t\t\t\tif (!noLoop && times[0] === 0) {\n\t\t\t\t\ttimes.push(numMorphTargets);\n\t\t\t\t\tvalues.push(values[0]);\n\t\t\t\t}\n\n\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n\t\t\t}\n\n\t\t\treturn new this(name, -1, tracks);\n\t\t}\n\n\t\tstatic findByName(objectOrClipArray, name) {\n\t\t\tlet clipArray = objectOrClipArray;\n\n\t\t\tif (!Array.isArray(objectOrClipArray)) {\n\t\t\t\tconst o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < clipArray.length; i++) {\n\t\t\t\tif (clipArray[i].name === name) {\n\t\t\t\t\treturn clipArray[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tstatic CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n\t\t\tconst animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n\t\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\n\t\t\tfor (let i = 0, il = morphTargets.length; i < il; i++) {\n\t\t\t\tconst morphTarget = morphTargets[i];\n\t\t\t\tconst parts = morphTarget.name.match(pattern);\n\n\t\t\t\tif (parts && parts.length > 1) {\n\t\t\t\t\tconst name = parts[1];\n\t\t\t\t\tlet animationMorphTargets = animationToMorphTargets[name];\n\n\t\t\t\t\tif (!animationMorphTargets) {\n\t\t\t\t\t\tanimationToMorphTargets[name] = animationMorphTargets = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push(morphTarget);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst clips = [];\n\n\t\t\tfor (const name in animationToMorphTargets) {\n\t\t\t\tclips.push(this.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n\t\t\t}\n\n\t\t\treturn clips;\n\t\t} // parse the animation.hierarchy format\n\n\n\t\tstatic parseAnimation(animation, bones) {\n\t\t\tif (!animation) {\n\t\t\t\tconsole.error('THREE.AnimationClip: No animation in JSONLoader data.');\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif (animationKeys.length !== 0) {\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\t\t\t\t\tAnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n\t\t\t\t\tif (times.length !== 0) {\n\t\t\t\t\t\tdestTracks.push(new trackType(trackName, times, values));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst tracks = [];\n\t\t\tconst clipName = animation.name || 'default';\n\t\t\tconst fps = animation.fps || 30;\n\t\t\tconst blendMode = animation.blendMode; // automatic length determination in AnimationClip.\n\n\t\t\tlet duration = animation.length || -1;\n\t\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor (let h = 0; h < hierarchyTracks.length; h++) {\n\t\t\t\tconst animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n\t\t\t\tif (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n\t\t\t\tif (animationKeys[0].morphTargets) {\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tconst morphTargetNames = {};\n\t\t\t\t\tlet k;\n\n\t\t\t\t\tfor (k = 0; k < animationKeys.length; k++) {\n\t\t\t\t\t\tif (animationKeys[k].morphTargets) {\n\t\t\t\t\t\t\tfor (let m = 0; m < animationKeys[k].morphTargets.length; m++) {\n\t\t\t\t\t\t\t\tmorphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} // create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\n\n\t\t\t\t\tfor (const morphTargetName in morphTargetNames) {\n\t\t\t\t\t\tconst times = [];\n\t\t\t\t\t\tconst values = [];\n\n\t\t\t\t\t\tfor (let m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n\t\t\t\t\t\t\tconst animationKey = animationKeys[k];\n\t\t\t\t\t\t\ttimes.push(animationKey.time);\n\t\t\t\t\t\t\tvalues.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * (fps || 1.0);\n\t\t\t\t} else {\n\t\t\t\t\t// ...assume skeletal animation\n\t\t\t\t\tconst boneName = '.bones[' + bones[h].name + ']';\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n\t\t\t\t\taddNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tracks.length === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst clip = new this(clipName, duration, tracks, blendMode);\n\t\t\treturn clip;\n\t\t}\n\n\t\tresetDuration() {\n\t\t\tconst tracks = this.tracks;\n\t\t\tlet duration = 0;\n\n\t\t\tfor (let i = 0, n = tracks.length; i !== n; ++i) {\n\t\t\t\tconst track = this.tracks[i];\n\t\t\t\tduration = Math.max(duration, track.times[track.times.length - 1]);\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\t\t\treturn this;\n\t\t}\n\n\t\ttrim() {\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].trim(0, this.duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tvalidate() {\n\t\t\tlet valid = true;\n\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tvalid = valid && this.tracks[i].validate();\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t}\n\n\t\toptimize() {\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].optimize();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\ttracks.push(this.tracks[i].clone());\n\t\t\t}\n\n\t\t\treturn new this.constructor(this.name, this.duration, tracks, this.blendMode);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.constructor.toJSON(this);\n\t\t}\n\n\t}\n\n\tfunction getTrackTypeForValueTypeName(typeName) {\n\t\tswitch (typeName.toLowerCase()) {\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\t\t\t\treturn StringKeyframeTrack;\n\t\t}\n\n\t\tthrow new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n\t}\n\n\tfunction parseKeyframeTrack(json) {\n\t\tif (json.type === undefined) {\n\t\t\tthrow new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n\t\t}\n\n\t\tconst trackType = getTrackTypeForValueTypeName(json.type);\n\n\t\tif (json.times === undefined) {\n\t\t\tconst times = [],\n\t\t\t\t\t\tvalues = [];\n\t\t\tAnimationUtils.flattenJSON(json.keys, times, values, 'value');\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\t\t} // derived classes can define a static parse method\n\n\n\t\tif (trackType.parse !== undefined) {\n\t\t\treturn trackType.parse(json);\n\t\t} else {\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType(json.name, json.times, json.values, json.interpolation);\n\t\t}\n\t}\n\n\tconst Cache = {\n\t\tenabled: false,\n\t\tfiles: {},\n\t\tadd: function (key, file) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[key] = file;\n\t\t},\n\t\tget: function (key) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[key];\n\t\t},\n\t\tremove: function (key) {\n\t\t\tdelete this.files[key];\n\t\t},\n\t\tclear: function () {\n\t\t\tthis.files = {};\n\t\t}\n\t};\n\n\tclass LoadingManager {\n\t\tconstructor(onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tlet isLoading = false;\n\t\t\tlet itemsLoaded = 0;\n\t\t\tlet itemsTotal = 0;\n\t\t\tlet urlModifier = undefined;\n\t\t\tconst handlers = []; // Refer to #5689 for the reason why we don't set .onStart\n\t\t\t// in the constructor\n\n\t\t\tthis.onStart = undefined;\n\t\t\tthis.onLoad = onLoad;\n\t\t\tthis.onProgress = onProgress;\n\t\t\tthis.onError = onError;\n\n\t\t\tthis.itemStart = function (url) {\n\t\t\t\titemsTotal++;\n\n\t\t\t\tif (isLoading === false) {\n\t\t\t\t\tif (scope.onStart !== undefined) {\n\t\t\t\t\t\tscope.onStart(url, itemsLoaded, itemsTotal);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tisLoading = true;\n\t\t\t};\n\n\t\t\tthis.itemEnd = function (url) {\n\t\t\t\titemsLoaded++;\n\n\t\t\t\tif (scope.onProgress !== undefined) {\n\t\t\t\t\tscope.onProgress(url, itemsLoaded, itemsTotal);\n\t\t\t\t}\n\n\t\t\t\tif (itemsLoaded === itemsTotal) {\n\t\t\t\t\tisLoading = false;\n\n\t\t\t\t\tif (scope.onLoad !== undefined) {\n\t\t\t\t\t\tscope.onLoad();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.itemError = function (url) {\n\t\t\t\tif (scope.onError !== undefined) {\n\t\t\t\t\tscope.onError(url);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.resolveURL = function (url) {\n\t\t\t\tif (urlModifier) {\n\t\t\t\t\treturn urlModifier(url);\n\t\t\t\t}\n\n\t\t\t\treturn url;\n\t\t\t};\n\n\t\t\tthis.setURLModifier = function (transform) {\n\t\t\t\turlModifier = transform;\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.addHandler = function (regex, loader) {\n\t\t\t\thandlers.push(regex, loader);\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.removeHandler = function (regex) {\n\t\t\t\tconst index = handlers.indexOf(regex);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\thandlers.splice(index, 2);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.getHandler = function (file) {\n\t\t\t\tfor (let i = 0, l = handlers.length; i < l; i += 2) {\n\t\t\t\t\tconst regex = handlers[i];\n\t\t\t\t\tconst loader = handlers[i + 1];\n\t\t\t\t\tif (regex.global) regex.lastIndex = 0; // see #17920\n\n\t\t\t\t\tif (regex.test(file)) {\n\t\t\t\t\t\treturn loader;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\t\t}\n\n\t}\n\n\tconst DefaultLoadingManager = new LoadingManager();\n\n\tclass Loader {\n\t\tconstructor(manager) {\n\t\t\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\t\t\tthis.crossOrigin = 'anonymous';\n\t\t\tthis.withCredentials = false;\n\t\t\tthis.path = '';\n\t\t\tthis.resourcePath = '';\n\t\t\tthis.requestHeader = {};\n\t\t}\n\n\t\tload()\n\t\t/* url, onLoad, onProgress, onError */\n\t\t{}\n\n\t\tloadAsync(url, onProgress) {\n\t\t\tconst scope = this;\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tscope.load(url, resolve, onProgress, reject);\n\t\t\t});\n\t\t}\n\n\t\tparse()\n\t\t/* data */\n\t\t{}\n\n\t\tsetCrossOrigin(crossOrigin) {\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetWithCredentials(value) {\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetPath(path) {\n\t\t\tthis.path = path;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetResourcePath(resourcePath) {\n\t\t\tthis.resourcePath = resourcePath;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRequestHeader(requestHeader) {\n\t\t\tthis.requestHeader = requestHeader;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tconst loading = {};\n\n\tclass FileLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t} // Check if request is duplicate\n\n\n\t\t\tif (loading[url] !== undefined) {\n\t\t\t\tloading[url].push({\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} // Check for data: URI\n\n\n\t\t\tconst dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tconst dataUriRegexResult = url.match(dataUriRegex);\n\t\t\tlet request; // Safari can not handle Data URIs through XMLHttpRequest so process manually\n\n\t\t\tif (dataUriRegexResult) {\n\t\t\t\tconst mimeType = dataUriRegexResult[1];\n\t\t\t\tconst isBase64 = !!dataUriRegexResult[2];\n\t\t\t\tlet data = dataUriRegexResult[3];\n\t\t\t\tdata = decodeURIComponent(data);\n\t\t\t\tif (isBase64) data = atob(data);\n\n\t\t\t\ttry {\n\t\t\t\t\tlet response;\n\t\t\t\t\tconst responseType = (this.responseType || '').toLowerCase();\n\n\t\t\t\t\tswitch (responseType) {\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\t\t\t\t\t\t\tconst view = new Uint8Array(data.length);\n\n\t\t\t\t\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\t\t\t\t\tview[i] = data.charCodeAt(i);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (responseType === 'blob') {\n\t\t\t\t\t\t\t\tresponse = new Blob([view.buffer], {\n\t\t\t\t\t\t\t\t\ttype: mimeType\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponse = view.buffer;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString(data, mimeType);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\t\t\t\t\t\t\tresponse = JSON.parse(data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// 'text' or other\n\t\t\t\t\t\t\tresponse = data;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\n\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tif (onLoad) onLoad(response);\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t}, 0);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tif (onError) onError(error);\n\t\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Initialise array for duplicate requests\n\t\t\t\tloading[url] = [];\n\t\t\t\tloading[url].push({\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t\trequest = new XMLHttpRequest();\n\t\t\t\trequest.open('GET', url, true);\n\t\t\t\trequest.addEventListener('load', function (event) {\n\t\t\t\t\tconst response = this.response;\n\t\t\t\t\tconst callbacks = loading[url];\n\t\t\t\t\tdelete loading[url];\n\n\t\t\t\t\tif (this.status === 200 || this.status === 0) {\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\t\t\t\t\t\tif (this.status === 0) console.warn('THREE.FileLoader: HTTP Status 0 received.'); // Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t\t// error response bodies as proper responses to requests.\n\n\t\t\t\t\t\tCache.add(url, response);\n\n\t\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\t\tif (callback.onLoad) callback.onLoad(response);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\t\tif (callback.onError) callback.onError(event);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\trequest.addEventListener('progress', function (event) {\n\t\t\t\t\tconst callbacks = loading[url];\n\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\tif (callback.onProgress) callback.onProgress(event);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\trequest.addEventListener('error', function (event) {\n\t\t\t\t\tconst callbacks = loading[url];\n\t\t\t\t\tdelete loading[url];\n\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\tif (callback.onError) callback.onError(event);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, false);\n\t\t\t\trequest.addEventListener('abort', function (event) {\n\t\t\t\t\tconst callbacks = loading[url];\n\t\t\t\t\tdelete loading[url];\n\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\tif (callback.onError) callback.onError(event);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, false);\n\t\t\t\tif (this.responseType !== undefined) request.responseType = this.responseType;\n\t\t\t\tif (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n\t\t\t\tif (request.overrideMimeType) request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\n\n\t\t\t\tfor (const header in this.requestHeader) {\n\t\t\t\t\trequest.setRequestHeader(header, this.requestHeader[header]);\n\t\t\t\t}\n\n\t\t\t\trequest.send(null);\n\t\t\t}\n\n\t\t\tscope.manager.itemStart(url);\n\t\t\treturn request;\n\t\t}\n\n\t\tsetResponseType(value) {\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMimeType(value) {\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AnimationLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst animations = [];\n\n\t\t\tfor (let i = 0; i < json.length; i++) {\n\t\t\t\tconst clip = AnimationClip.parse(json[i]);\n\t\t\t\tanimations.push(clip);\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass CompressedTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst images = [];\n\t\t\tconst texture = new CompressedTexture();\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(url[i], function (buffer) {\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\n\t\t\t\t\timages[i] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\tif (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\tif (Array.isArray(url)) {\n\t\t\t\tfor (let i = 0, il = url.length; i < il; ++i) {\n\t\t\t\t\tloadTexture(i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\t\t\t\tloader.load(url, function (buffer) {\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\n\n\t\t\t\t\tif (texDatas.isCubemap) {\n\t\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor (let f = 0; f < faces; f++) {\n\t\t\t\t\t\t\timages[f] = {\n\t\t\t\t\t\t\t\tmipmaps: []\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tfor (let i = 0; i < texDatas.mipmapCount; i++) {\n\t\t\t\t\t\t\t\timages[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n\t\t\t\t\t\t\t\timages[f].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[f].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[f].height = texDatas.height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (texDatas.mipmapCount === 1) {\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass ImageLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tconst image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n\n\t\t\tfunction onImageLoad() {\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\n\t\t\t\timage.removeEventListener('error', onImageError, false);\n\t\t\t\tCache.add(url, this);\n\t\t\t\tif (onLoad) onLoad(this);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\tfunction onImageError(event) {\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\n\t\t\t\timage.removeEventListener('error', onImageError, false);\n\t\t\t\tif (onError) onError(event);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\timage.addEventListener('load', onImageLoad, false);\n\t\t\timage.addEventListener('error', onImageError, false);\n\n\t\t\tif (url.substr(0, 5) !== 'data:') {\n\t\t\t\tif (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n\t\t\t}\n\n\t\t\tscope.manager.itemStart(url);\n\t\t\timage.src = url;\n\t\t\treturn image;\n\t\t}\n\n\t}\n\n\tclass CubeTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(urls, onLoad, onProgress, onError) {\n\t\t\tconst texture = new CubeTexture();\n\t\t\tconst loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(urls[i], function (image) {\n\t\t\t\t\ttexture.images[i] = image;\n\t\t\t\t\tloaded++;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, undefined, onError);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < urls.length; ++i) {\n\t\t\t\tloadTexture(i);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass DataTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst texture = new DataTexture();\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\tconst texData = scope.parse(buffer);\n\t\t\t\tif (!texData) return;\n\n\t\t\t\tif (texData.image !== undefined) {\n\t\t\t\t\ttexture.image = texData.image;\n\t\t\t\t} else if (texData.data !== undefined) {\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\t\tif (texData.encoding !== undefined) {\n\t\t\t\t\ttexture.encoding = texData.encoding;\n\t\t\t\t}\n\n\t\t\t\tif (texData.flipY !== undefined) {\n\t\t\t\t\ttexture.flipY = texData.flipY;\n\t\t\t\t}\n\n\t\t\t\tif (texData.format !== undefined) {\n\t\t\t\t\ttexture.format = texData.format;\n\t\t\t\t}\n\n\t\t\t\tif (texData.type !== undefined) {\n\t\t\t\t\ttexture.type = texData.type;\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmaps !== undefined) {\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmapCount === 1) {\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t}\n\n\t\t\t\tif (texData.generateMipmaps !== undefined) {\n\t\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\tif (onLoad) onLoad(texture, texData);\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass TextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst texture = new Texture();\n\t\t\tconst loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.load(url, function (image) {\n\t\t\t\ttexture.image = image; // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\n\t\t\t\tconst isJPEG = url.search(/\\.jpe?g($|\\?)/i) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif (onLoad !== undefined) {\n\t\t\t\t\tonLoad(texture);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *\tcurves, but retains the api of a curve\n\t **************************************************************/\n\n\tclass CurvePath extends Curve {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'CurvePath';\n\t\t\tthis.curves = [];\n\t\t\tthis.autoClose = false; // Automatically closes the path\n\t\t}\n\n\t\tadd(curve) {\n\t\t\tthis.curves.push(curve);\n\t\t}\n\n\t\tclosePath() {\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tconst startPoint = this.curves[0].getPoint(0);\n\t\t\tconst endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n\t\t\tif (!startPoint.equals(endPoint)) {\n\t\t\t\tthis.curves.push(new LineCurve(endPoint, startPoint));\n\t\t\t}\n\t\t} // To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\n\t\tgetPoint(t) {\n\t\t\tconst d = t * this.getLength();\n\t\t\tconst curveLengths = this.getCurveLengths();\n\t\t\tlet i = 0; // To think about boundaries points.\n\n\t\t\twhile (i < curveLengths.length) {\n\t\t\t\tif (curveLengths[i] >= d) {\n\t\t\t\t\tconst diff = curveLengths[i] - d;\n\t\t\t\t\tconst curve = this.curves[i];\n\t\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\t\t\t\t\treturn curve.getPointAt(u);\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\treturn null; // loop where sum != 0, sum > d , sum+1 <d\n\t\t} // We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\n\t\tgetLength() {\n\t\t\tconst lens = this.getCurveLengths();\n\t\t\treturn lens[lens.length - 1];\n\t\t} // cacheLengths must be recalculated.\n\n\n\t\tupdateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\t\t} // Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\n\t\tgetCurveLengths() {\n\t\t\t// We use cache values if curves and cache array are same length\n\t\t\tif (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n\t\t\t\treturn this.cacheLengths;\n\t\t\t} // Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\n\t\t\tconst lengths = [];\n\t\t\tlet sums = 0;\n\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tsums += this.curves[i].getLength();\n\t\t\t\tlengths.push(sums);\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\t\t\treturn lengths;\n\t\t}\n\n\t\tgetSpacedPoints(divisions = 40) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let i = 0; i <= divisions; i++) {\n\t\t\t\tpoints.push(this.getPoint(i / divisions));\n\t\t\t}\n\n\t\t\tif (this.autoClose) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t}\n\n\t\tgetPoints(divisions = 12) {\n\t\t\tconst points = [];\n\t\t\tlet last;\n\n\t\t\tfor (let i = 0, curves = this.curves; i < curves.length; i++) {\n\t\t\t\tconst curve = curves[i];\n\t\t\t\tconst resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n\t\t\t\tconst pts = curve.getPoints(resolution);\n\n\t\t\t\tfor (let j = 0; j < pts.length; j++) {\n\t\t\t\t\tconst point = pts[j];\n\t\t\t\t\tif (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tlast = point;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.curves = [];\n\n\t\t\tfor (let i = 0, l = source.curves.length; i < l; i++) {\n\t\t\t\tconst curve = source.curves[i];\n\t\t\t\tthis.curves.push(curve.clone());\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tconst curve = this.curves[i];\n\t\t\t\tdata.curves.push(curve.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor (let i = 0, l = json.curves.length; i < l; i++) {\n\t\t\t\tconst curve = json.curves[i];\n\t\t\t\tthis.curves.push(new Curves[curve.type]().fromJSON(curve));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Path extends CurvePath {\n\t\tconstructor(points) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Path';\n\t\t\tthis.currentPoint = new Vector2();\n\n\t\t\tif (points) {\n\t\t\t\tthis.setFromPoints(points);\n\t\t\t}\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.moveTo(points[0].x, points[0].y);\n\n\t\t\tfor (let i = 1, l = points.length; i < l; i++) {\n\t\t\t\tthis.lineTo(points[i].x, points[i].y);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tmoveTo(x, y) {\n\t\t\tthis.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n\n\t\t\treturn this;\n\t\t}\n\n\t\tlineTo(x, y) {\n\t\t\tconst curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tconst curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tconst curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tsplineThru(pts\n\t\t/*Array of Vector*/\n\t\t) {\n\t\t\tconst npts = [this.currentPoint.clone()].concat(pts);\n\t\t\tconst curve = new SplineCurve(npts);\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.copy(pts[pts.length - 1]);\n\t\t\treturn this;\n\t\t}\n\n\t\tarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\t\t\tthis.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t}\n\n\t\tabsarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t}\n\n\t\tellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\t\t\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\t\t\treturn this;\n\t\t}\n\n\t\tabsellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tconst curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n\t\t\tif (this.curves.length > 0) {\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tconst firstPoint = curve.getPoint(0);\n\n\t\t\t\tif (!firstPoint.equals(this.currentPoint)) {\n\t\t\t\t\tthis.lineTo(firstPoint.x, firstPoint.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.curves.push(curve);\n\t\t\tconst lastPoint = curve.getPoint(1);\n\t\t\tthis.currentPoint.copy(lastPoint);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.currentPoint.copy(source.currentPoint);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.currentPoint.fromArray(json.currentPoint);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Shape extends Path {\n\t\tconstructor(points) {\n\t\t\tsuper(points);\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.type = 'Shape';\n\t\t\tthis.holes = [];\n\t\t}\n\n\t\tgetPointsHoles(divisions) {\n\t\t\tconst holesPts = [];\n\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tholesPts[i] = this.holes[i].getPoints(divisions);\n\t\t\t}\n\n\t\t\treturn holesPts;\n\t\t} // get points of shape and holes (keypoints based on segments parameter)\n\n\n\t\textractPoints(divisions) {\n\t\t\treturn {\n\t\t\t\tshape: this.getPoints(divisions),\n\t\t\t\tholes: this.getPointsHoles(divisions)\n\t\t\t};\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.holes = [];\n\n\t\t\tfor (let i = 0, l = source.holes.length; i < l; i++) {\n\t\t\t\tconst hole = source.holes[i];\n\t\t\t\tthis.holes.push(hole.clone());\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tconst hole = this.holes[i];\n\t\t\t\tdata.holes.push(hole.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor (let i = 0, l = json.holes.length; i < l; i++) {\n\t\t\t\tconst hole = json.holes[i];\n\t\t\t\tthis.holes.push(new Path().fromJSON(hole));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Light extends Object3D {\n\t\tconstructor(color, intensity = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Light';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.intensity = intensity;\n\t\t}\n\n\t\tdispose() {// Empty here in base class; some subclasses override.\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.intensity = source.intensity;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\t\t\tif (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n\t\t\tif (this.distance !== undefined) data.object.distance = this.distance;\n\t\t\tif (this.angle !== undefined) data.object.angle = this.angle;\n\t\t\tif (this.decay !== undefined) data.object.decay = this.decay;\n\t\t\tif (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n\t\t\tif (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tLight.prototype.isLight = true;\n\n\tclass HemisphereLight extends Light {\n\t\tconstructor(skyColor, groundColor, intensity) {\n\t\t\tsuper(skyColor, intensity);\n\t\t\tthis.type = 'HemisphereLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.groundColor = new Color(groundColor);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tLight.prototype.copy.call(this, source);\n\t\t\tthis.groundColor.copy(source.groundColor);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tHemisphereLight.prototype.isHemisphereLight = true;\n\n\tconst _projScreenMatrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _lightPositionWorld$1 = /*@__PURE__*/new Vector3();\n\n\tconst _lookTarget$1 = /*@__PURE__*/new Vector3();\n\n\tclass LightShadow {\n\t\tconstructor(camera) {\n\t\t\tthis.camera = camera;\n\t\t\tthis.bias = 0;\n\t\t\tthis.normalBias = 0;\n\t\t\tthis.radius = 1;\n\t\t\tthis.mapSize = new Vector2(512, 512);\n\t\t\tthis.map = null;\n\t\t\tthis.mapPass = null;\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.autoUpdate = true;\n\t\t\tthis.needsUpdate = false;\n\t\t\tthis._frustum = new Frustum();\n\t\t\tthis._frameExtents = new Vector2(1, 1);\n\t\t\tthis._viewportCount = 1;\n\t\t\tthis._viewports = [new Vector4(0, 0, 1, 1)];\n\t\t}\n\n\t\tgetViewportCount() {\n\t\t\treturn this._viewportCount;\n\t\t}\n\n\t\tgetFrustum() {\n\t\t\treturn this._frustum;\n\t\t}\n\n\t\tupdateMatrices(light) {\n\t\t\tconst shadowCamera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\n\t\t\t_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\tshadowCamera.position.copy(_lightPositionWorld$1);\n\n\t\t\t_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);\n\n\t\t\tshadowCamera.lookAt(_lookTarget$1);\n\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix$1);\n\n\t\t\tshadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n\t\t\tshadowMatrix.multiply(shadowCamera.projectionMatrix);\n\t\t\tshadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n\t\t}\n\n\t\tgetViewport(viewportIndex) {\n\t\t\treturn this._viewports[viewportIndex];\n\t\t}\n\n\t\tgetFrameExtents() {\n\t\t\treturn this._frameExtents;\n\t\t}\n\n\t\tdispose() {\n\t\t\tif (this.map) {\n\t\t\t\tthis.map.dispose();\n\t\t\t}\n\n\t\t\tif (this.mapPass) {\n\t\t\t\tthis.mapPass.dispose();\n\t\t\t}\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.camera = source.camera.clone();\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\t\t\tthis.mapSize.copy(source.mapSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst object = {};\n\t\t\tif (this.bias !== 0) object.bias = this.bias;\n\t\t\tif (this.normalBias !== 0) object.normalBias = this.normalBias;\n\t\t\tif (this.radius !== 1) object.radius = this.radius;\n\t\t\tif (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n\t\t\tobject.camera = this.camera.toJSON(false).object;\n\t\t\tdelete object.camera.matrix;\n\t\t\treturn object;\n\t\t}\n\n\t}\n\n\tclass SpotLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new PerspectiveCamera(50, 1, 0.5, 500));\n\t\t\tthis.focus = 1;\n\t\t}\n\n\t\tupdateMatrices(light) {\n\t\t\tconst camera = this.camera;\n\t\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t}\n\n\t\t\tsuper.updateMatrices(light);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.focus = source.focus;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpotLightShadow.prototype.isSpotLightShadow = true;\n\n\tclass SpotLight extends Light {\n\t\tconstructor(color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'SpotLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.target = new Object3D();\n\t\t\tthis.distance = distance;\n\t\t\tthis.angle = angle;\n\t\t\tthis.penumbra = penumbra;\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\t\tthis.shadow = new SpotLightShadow();\n\t\t}\n\n\t\tget power() {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpotLight.prototype.isSpotLight = true;\n\n\tconst _projScreenMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _lightPositionWorld = /*@__PURE__*/new Vector3();\n\n\tconst _lookTarget = /*@__PURE__*/new Vector3();\n\n\tclass PointLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new PerspectiveCamera(90, 1, 0.5, 500));\n\t\t\tthis._frameExtents = new Vector2(4, 2);\n\t\t\tthis._viewportCount = 6;\n\t\t\tthis._viewports = [// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//\txzXZ\n\t\t\t//\t y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\t\t\t// positive X\n\t\t\tnew Vector4(2, 1, 1, 1), // negative X\n\t\t\tnew Vector4(0, 1, 1, 1), // positive Z\n\t\t\tnew Vector4(3, 1, 1, 1), // negative Z\n\t\t\tnew Vector4(1, 1, 1, 1), // positive Y\n\t\t\tnew Vector4(3, 0, 1, 1), // negative Y\n\t\t\tnew Vector4(1, 0, 1, 1)];\n\t\t\tthis._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n\t\t\tthis._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n\t\t}\n\n\t\tupdateMatrices(light, viewportIndex = 0) {\n\t\t\tconst camera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif (far !== camera.far) {\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t}\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\tcamera.position.copy(_lightPositionWorld);\n\n\t\t\t_lookTarget.copy(camera.position);\n\n\t\t\t_lookTarget.add(this._cubeDirections[viewportIndex]);\n\n\t\t\tcamera.up.copy(this._cubeUps[viewportIndex]);\n\t\t\tcamera.lookAt(_lookTarget);\n\t\t\tcamera.updateMatrixWorld();\n\t\t\tshadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix);\n\t\t}\n\n\t}\n\n\tPointLightShadow.prototype.isPointLightShadow = true;\n\n\tclass PointLight extends Light {\n\t\tconstructor(color, intensity, distance = 0, decay = 1) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'PointLight';\n\t\t\tthis.distance = distance;\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\t\tthis.shadow = new PointLightShadow();\n\t\t}\n\n\t\tget power() {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / (4 * Math.PI);\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tPointLight.prototype.isPointLight = true;\n\n\tclass OrthographicCamera extends Camera {\n\t\tconstructor(left = -1, right = 1, top = 1, bottom = -1, near = 0.1, far = 2000) {\n\t\t\tsuper();\n\t\t\tthis.type = 'OrthographicCamera';\n\t\t\tthis.zoom = 1;\n\t\t\tthis.view = null;\n\t\t\tthis.left = left;\n\t\t\tthis.right = right;\n\t\t\tthis.top = top;\n\t\t\tthis.bottom = bottom;\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tclearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\t\t\tconst dx = (this.right - this.left) / (2 * this.zoom);\n\t\t\tconst dy = (this.top - this.bottom) / (2 * this.zoom);\n\t\t\tconst cx = (this.right + this.left) / 2;\n\t\t\tconst cy = (this.top + this.bottom) / 2;\n\t\t\tlet left = cx - dx;\n\t\t\tlet right = cx + dx;\n\t\t\tlet top = cy + dy;\n\t\t\tlet bottom = cy - dy;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tconst scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n\t\t\t\tconst scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n\t\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\t\tright = left + scaleW * this.view.width;\n\t\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\t\tbottom = top - scaleH * this.view.height;\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tOrthographicCamera.prototype.isOrthographicCamera = true;\n\n\tclass DirectionalLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n\t\t}\n\n\t}\n\n\tDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\n\tclass DirectionalLight extends Light {\n\t\tconstructor(color, intensity) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'DirectionalLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.target = new Object3D();\n\t\t\tthis.shadow = new DirectionalLightShadow();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tDirectionalLight.prototype.isDirectionalLight = true;\n\n\tclass AmbientLight extends Light {\n\t\tconstructor(color, intensity) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'AmbientLight';\n\t\t}\n\n\t}\n\n\tAmbientLight.prototype.isAmbientLight = true;\n\n\tclass RectAreaLight extends Light {\n\t\tconstructor(color, intensity, width = 10, height = 10) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'RectAreaLight';\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tRectAreaLight.prototype.isRectAreaLight = true;\n\n\t/**\n\t * Primary reference:\n\t *\t https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t *\n\t * Secondary reference:\n\t *\t https://www.ppsloan.org/publications/StupidSH36.pdf\n\t */\n\t// 3-band SH defined by 9 coefficients\n\n\tclass SphericalHarmonics3 {\n\t\tconstructor() {\n\t\t\tthis.coefficients = [];\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients.push(new Vector3());\n\t\t\t}\n\t\t}\n\n\t\tset(coefficients) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].copy(coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tzero() {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].set(0, 0, 0);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // get the radiance in the direction of the normal\n\t\t// target is a Vector3\n\n\n\t\tgetAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z;\n\t\t\tconst coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.282095); // band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 0.488603 * y);\n\t\t\ttarget.addScaledVector(coeff[2], 0.488603 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 0.488603 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 1.092548 * (x * y));\n\t\t\ttarget.addScaledVector(coeff[5], 1.092548 * (y * z));\n\t\t\ttarget.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\n\t\t\ttarget.addScaledVector(coeff[7], 1.092548 * (x * z));\n\t\t\ttarget.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\n\t\t\treturn target;\n\t\t} // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t\t// target is a Vector3\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\n\n\t\tgetIrradianceAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z;\n\t\t\tconst coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\n\t\t\t// band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\n\n\t\t\ttarget.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 2.0 * 0.511664 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\n\n\t\t\ttarget.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\n\t\t\ttarget.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\n\n\t\t\ttarget.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\n\t\t\ttarget.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\n\n\t\t\treturn target;\n\t\t}\n\n\t\tadd(sh) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].add(sh.coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledSH(sh, s) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].addScaledVector(sh.coefficients[i], s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(s) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].multiplyScalar(s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tlerp(sh, alpha) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].lerp(sh.coefficients[i], alpha);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(sh) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tif (!this.coefficients[i].equals(sh.coefficients[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tcopy(sh) {\n\t\t\treturn this.set(sh.coefficients);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].fromArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].toArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn array;\n\t\t} // evaluate the basis functions\n\t\t// shBasis is an Array[ 9 ]\n\n\n\t\tstatic getBasisAt(normal, shBasis) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z; // band 0\n\n\t\t\tshBasis[0] = 0.282095; // band 1\n\n\t\t\tshBasis[1] = 0.488603 * y;\n\t\t\tshBasis[2] = 0.488603 * z;\n\t\t\tshBasis[3] = 0.488603 * x; // band 2\n\n\t\t\tshBasis[4] = 1.092548 * x * y;\n\t\t\tshBasis[5] = 1.092548 * y * z;\n\t\t\tshBasis[6] = 0.315392 * (3 * z * z - 1);\n\t\t\tshBasis[7] = 1.092548 * x * z;\n\t\t\tshBasis[8] = 0.546274 * (x * x - y * y);\n\t\t}\n\n\t}\n\n\tSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\n\tclass LightProbe extends Light {\n\t\tconstructor(sh = new SphericalHarmonics3(), intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tthis.sh = sh;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.sh.copy(source.sh);\n\t\t\treturn this;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\n\t\t\tthis.sh.fromArray(json.sh);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.sh = this.sh.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tLightProbe.prototype.isLightProbe = true;\n\n\tclass MaterialLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t\tthis.textures = {};\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst textures = this.textures;\n\n\t\t\tfunction getTexture(name) {\n\t\t\t\tif (textures[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.MaterialLoader: Undefined texture', name);\n\t\t\t\t}\n\n\t\t\t\treturn textures[name];\n\t\t\t}\n\n\t\t\tconst material = new Materials[json.type]();\n\t\t\tif (json.uuid !== undefined) material.uuid = json.uuid;\n\t\t\tif (json.name !== undefined) material.name = json.name;\n\t\t\tif (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\n\t\t\tif (json.roughness !== undefined) material.roughness = json.roughness;\n\t\t\tif (json.metalness !== undefined) material.metalness = json.metalness;\n\t\t\tif (json.sheen !== undefined) material.sheen = new Color().setHex(json.sheen);\n\t\t\tif (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\n\t\t\tif (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\n\t\t\tif (json.shininess !== undefined) material.shininess = json.shininess;\n\t\t\tif (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n\t\t\tif (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\t\tif (json.transmission !== undefined) material.transmission = json.transmission;\n\t\t\tif (json.thickness !== undefined) material.thickness = json.thickness;\n\t\t\tif (json.attenuationDistance !== undefined) material.attenuationDistance = json.attenuationDistance;\n\t\t\tif (json.attenuationColor !== undefined && material.attenuationColor !== undefined) material.attenuationColor.setHex(json.attenuationColor);\n\t\t\tif (json.fog !== undefined) material.fog = json.fog;\n\t\t\tif (json.flatShading !== undefined) material.flatShading = json.flatShading;\n\t\t\tif (json.blending !== undefined) material.blending = json.blending;\n\t\t\tif (json.combine !== undefined) material.combine = json.combine;\n\t\t\tif (json.side !== undefined) material.side = json.side;\n\t\t\tif (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\n\t\t\tif (json.opacity !== undefined) material.opacity = json.opacity;\n\t\t\tif (json.transparent !== undefined) material.transparent = json.transparent;\n\t\t\tif (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n\t\t\tif (json.depthTest !== undefined) material.depthTest = json.depthTest;\n\t\t\tif (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n\t\t\tif (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n\t\t\tif (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\n\t\t\tif (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\n\t\t\tif (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n\t\t\tif (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n\t\t\tif (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\n\t\t\tif (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n\t\t\tif (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\n\t\t\tif (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\n\t\t\tif (json.wireframe !== undefined) material.wireframe = json.wireframe;\n\t\t\tif (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\t\tif (json.rotation !== undefined) material.rotation = json.rotation;\n\t\t\tif (json.linewidth !== 1) material.linewidth = json.linewidth;\n\t\t\tif (json.dashSize !== undefined) material.dashSize = json.dashSize;\n\t\t\tif (json.gapSize !== undefined) material.gapSize = json.gapSize;\n\t\t\tif (json.scale !== undefined) material.scale = json.scale;\n\t\t\tif (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n\t\t\tif (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\t\tif (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\t\t\tif (json.morphTargets !== undefined) material.morphTargets = json.morphTargets;\n\t\t\tif (json.morphNormals !== undefined) material.morphNormals = json.morphNormals;\n\t\t\tif (json.dithering !== undefined) material.dithering = json.dithering;\n\t\t\tif (json.alphaToCoverage !== undefined) material.alphaToCoverage = json.alphaToCoverage;\n\t\t\tif (json.premultipliedAlpha !== undefined) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\t\tif (json.vertexTangents !== undefined) material.vertexTangents = json.vertexTangents;\n\t\t\tif (json.visible !== undefined) material.visible = json.visible;\n\t\t\tif (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n\t\t\tif (json.userData !== undefined) material.userData = json.userData;\n\n\t\t\tif (json.vertexColors !== undefined) {\n\t\t\t\tif (typeof json.vertexColors === 'number') {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors > 0 ? true : false;\n\t\t\t\t} else {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\t\t\t\t}\n\t\t\t} // Shader Material\n\n\n\t\t\tif (json.uniforms !== undefined) {\n\t\t\t\tfor (const name in json.uniforms) {\n\t\t\t\t\tconst uniform = json.uniforms[name];\n\t\t\t\t\tmaterial.uniforms[name] = {};\n\n\t\t\t\t\tswitch (uniform.type) {\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = getTexture(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Color().setHex(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector2().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = uniform.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json.defines !== undefined) material.defines = json.defines;\n\t\t\tif (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n\t\t\tif (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n\n\t\t\tif (json.extensions !== undefined) {\n\t\t\t\tfor (const key in json.extensions) {\n\t\t\t\t\tmaterial.extensions[key] = json.extensions[key];\n\t\t\t\t}\n\t\t\t} // Deprecated\n\n\n\t\t\tif (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n\t\t\t// for PointsMaterial\n\n\t\t\tif (json.size !== undefined) material.size = json.size;\n\t\t\tif (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n\t\t\tif (json.map !== undefined) material.map = getTexture(json.map);\n\t\t\tif (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n\t\t\tif (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\n\t\t\tif (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n\t\t\tif (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n\t\t\tif (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n\t\t\tif (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n\t\t\tif (json.normalScale !== undefined) {\n\t\t\t\tlet normalScale = json.normalScale;\n\n\t\t\t\tif (Array.isArray(normalScale) === false) {\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\t\t\t\t\tnormalScale = [normalScale, normalScale];\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray(normalScale);\n\t\t\t}\n\n\t\t\tif (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n\t\t\tif (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n\t\t\tif (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n\t\t\tif (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n\t\t\tif (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n\t\t\tif (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n\t\t\tif (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n\t\t\tif (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n\t\t\tif (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n\t\t\tif (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n\t\t\tif (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n\t\t\tif (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\n\t\t\tif (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n\t\t\tif (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n\t\t\tif (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n\t\t\tif (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n\t\t\tif (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n\t\t\tif (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\n\t\t\tif (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n\t\t\tif (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n\t\t\tif (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n\t\t\tif (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\n\t\t\tif (json.thicknessMap !== undefined) material.thicknessMap = getTexture(json.thicknessMap);\n\t\t\treturn material;\n\t\t}\n\n\t\tsetTextures(value) {\n\t\t\tthis.textures = value;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass LoaderUtils {\n\t\tstatic decodeText(array) {\n\t\t\tif (typeof TextDecoder !== 'undefined') {\n\t\t\t\treturn new TextDecoder().decode(array);\n\t\t\t} // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n\t\t\tlet s = '';\n\n\t\t\tfor (let i = 0, il = array.length; i < il; i++) {\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode(array[i]);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// merges multi-byte utf-8 characters.\n\t\t\t\treturn decodeURIComponent(escape(s));\n\t\t\t} catch (e) {\n\t\t\t\t// see #16358\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\n\t\tstatic extractUrlBase(url) {\n\t\t\tconst index = url.lastIndexOf('/');\n\t\t\tif (index === -1) return './';\n\t\t\treturn url.substr(0, index + 1);\n\t\t}\n\n\t}\n\n\tclass InstancedBufferGeometry extends BufferGeometry {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'InstancedBufferGeometry';\n\t\t\tthis.instanceCount = Infinity;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.instanceCount = source.instanceCount;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON(this);\n\t\t\tdata.instanceCount = this.instanceCount;\n\t\t\tdata.isInstancedBufferGeometry = true;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\n\tclass InstancedBufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized, meshPerAttribute = 1) {\n\t\t\tif (typeof normalized === 'number') {\n\t\t\t\tmeshPerAttribute = normalized;\n\t\t\t\tnormalized = false;\n\t\t\t\tconsole.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\n\t\t\t}\n\n\t\t\tsuper(array, itemSize, normalized);\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\t\t\tdata.isInstancedBufferAttribute = true;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\n\tclass BufferGeometryLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst interleavedBufferMap = {};\n\t\t\tconst arrayBufferMap = {};\n\n\t\t\tfunction getInterleavedBuffer(json, uuid) {\n\t\t\t\tif (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\n\t\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\t\tconst interleavedBuffer = interleavedBuffers[uuid];\n\t\t\t\tconst buffer = getArrayBuffer(json, interleavedBuffer.buffer);\n\t\t\t\tconst array = getTypedArray(interleavedBuffer.type, buffer);\n\t\t\t\tconst ib = new InterleavedBuffer(array, interleavedBuffer.stride);\n\t\t\t\tib.uuid = interleavedBuffer.uuid;\n\t\t\t\tinterleavedBufferMap[uuid] = ib;\n\t\t\t\treturn ib;\n\t\t\t}\n\n\t\t\tfunction getArrayBuffer(json, uuid) {\n\t\t\t\tif (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\n\t\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\t\tconst arrayBuffer = arrayBuffers[uuid];\n\t\t\t\tconst ab = new Uint32Array(arrayBuffer).buffer;\n\t\t\t\tarrayBufferMap[uuid] = ab;\n\t\t\t\treturn ab;\n\t\t\t}\n\n\t\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\t\t\tconst index = json.data.index;\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tconst typedArray = getTypedArray(index.type, index.array);\n\t\t\t\tgeometry.setIndex(new BufferAttribute(typedArray, 1));\n\t\t\t}\n\n\t\t\tconst attributes = json.data.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tlet bufferAttribute;\n\n\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n\t\t\t\t} else {\n\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\n\t\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\t\tbufferAttribute = new bufferAttributeConstr(typedArray, attribute.itemSize, attribute.normalized);\n\t\t\t\t}\n\n\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n\t\t\t\tif (attribute.usage !== undefined) bufferAttribute.setUsage(attribute.usage);\n\n\t\t\t\tif (attribute.updateRange !== undefined) {\n\t\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute(key, bufferAttribute);\n\t\t\t}\n\n\t\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\t\tif (morphAttributes) {\n\t\t\t\tfor (const key in morphAttributes) {\n\t\t\t\t\tconst attributeArray = morphAttributes[key];\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\t\tconst attribute = attributeArray[i];\n\t\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n\t\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\n\t\t\t\t\t\t\tbufferAttribute = new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n\t\t\t\t\t\tarray.push(bufferAttribute);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.morphAttributes[key] = array;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\t\tif (morphTargetsRelative) {\n\t\t\t\tgeometry.morphTargetsRelative = true;\n\t\t\t}\n\n\t\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif (groups !== undefined) {\n\t\t\t\tfor (let i = 0, n = groups.length; i !== n; ++i) {\n\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\tgeometry.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\t\tif (boundingSphere !== undefined) {\n\t\t\t\tconst center = new Vector3();\n\n\t\t\t\tif (boundingSphere.center !== undefined) {\n\t\t\t\t\tcenter.fromArray(boundingSphere.center);\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n\t\t\t}\n\n\t\t\tif (json.name) geometry.name = json.name;\n\t\t\tif (json.userData) geometry.userData = json.userData;\n\t\t\treturn geometry;\n\t\t}\n\n\t}\n\n\tclass ObjectLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\tlet json = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(text);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (onError !== undefined) onError(error);\n\t\t\t\t\tconsole.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst metadata = json.metadata;\n\n\t\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n\t\t\t\t\tconsole.error('THREE.ObjectLoader: Can\\'t load ' + url);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tscope.parse(json, onLoad);\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tasync loadAsync(url, onProgress) {\n\t\t\tconst scope = this;\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tconst text = await loader.loadAsync(url, onProgress);\n\t\t\tconst json = JSON.parse(text);\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n\t\t\t\tthrow new Error('THREE.ObjectLoader: Can\\'t load ' + url);\n\t\t\t}\n\n\t\t\treturn await scope.parseAsync(json);\n\t\t}\n\n\t\tparse(json, onLoad) {\n\t\t\tconst animations = this.parseAnimations(json.animations);\n\t\t\tconst shapes = this.parseShapes(json.shapes);\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\n\t\t\tconst images = this.parseImages(json.images, function () {\n\t\t\t\tif (onLoad !== undefined) onLoad(object);\n\t\t\t});\n\t\t\tconst textures = this.parseTextures(json.textures, images);\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\n\t\t\tthis.bindSkeletons(object, skeletons); //\n\n\t\t\tif (onLoad !== undefined) {\n\t\t\t\tlet hasImages = false;\n\n\t\t\t\tfor (const uuid in images) {\n\t\t\t\t\tif (images[uuid] instanceof HTMLImageElement) {\n\t\t\t\t\t\thasImages = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hasImages === false) onLoad(object);\n\t\t\t}\n\n\t\t\treturn object;\n\t\t}\n\n\t\tasync parseAsync(json) {\n\t\t\tconst animations = this.parseAnimations(json.animations);\n\t\t\tconst shapes = this.parseShapes(json.shapes);\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\n\t\t\tconst images = await this.parseImagesAsync(json.images);\n\t\t\tconst textures = this.parseTextures(json.textures, images);\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\n\t\t\tthis.bindSkeletons(object, skeletons);\n\t\t\treturn object;\n\t\t}\n\n\t\tparseShapes(json) {\n\t\t\tconst shapes = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst shape = new Shape().fromJSON(json[i]);\n\t\t\t\t\tshapes[shape.uuid] = shape;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn shapes;\n\t\t}\n\n\t\tparseSkeletons(json, object) {\n\t\t\tconst skeletons = {};\n\t\t\tconst bones = {}; // generate bone lookup table\n\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isBone) bones[child.uuid] = child;\n\t\t\t}); // create skeletons\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst skeleton = new Skeleton().fromJSON(json[i], bones);\n\t\t\t\t\tskeletons[skeleton.uuid] = skeleton;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn skeletons;\n\t\t}\n\n\t\tparseGeometries(json, shapes) {\n\t\t\tconst geometries = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tlet geometry;\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tswitch (data.type) {\n\t\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse(data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\t\t\t\t\t\t\tconsole.error('THREE.ObjectLoader: The legacy Geometry type is no longer supported.');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif (data.type in Geometries) {\n\t\t\t\t\t\t\t\tgeometry = Geometries[data.type].fromJSON(data, shapes);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.warn(`THREE.ObjectLoader: Unsupported geometry type \"${data.type}\"`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) geometry.name = data.name;\n\t\t\t\t\tif (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n\t\t\t\t\tgeometries[data.uuid] = geometry;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn geometries;\n\t\t}\n\n\t\tparseMaterials(json, textures) {\n\t\t\tconst cache = {}; // MultiMaterial\n\n\t\t\tconst materials = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tconst loader = new MaterialLoader();\n\t\t\t\tloader.setTextures(textures);\n\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tif (data.type === 'MultiMaterial') {\n\t\t\t\t\t\t// Deprecated\n\t\t\t\t\t\tconst array = [];\n\n\t\t\t\t\t\tfor (let j = 0; j < data.materials.length; j++) {\n\t\t\t\t\t\t\tconst material = data.materials[j];\n\n\t\t\t\t\t\t\tif (cache[material.uuid] === undefined) {\n\t\t\t\t\t\t\t\tcache[material.uuid] = loader.parse(material);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push(cache[material.uuid]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = array;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (cache[data.uuid] === undefined) {\n\t\t\t\t\t\t\tcache[data.uuid] = loader.parse(data);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = cache[data.uuid];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn materials;\n\t\t}\n\n\t\tparseAnimations(json) {\n\t\t\tconst animations = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0; i < json.length; i++) {\n\t\t\t\t\tconst data = json[i];\n\t\t\t\t\tconst clip = AnimationClip.parse(data);\n\t\t\t\t\tanimations[clip.uuid] = clip;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t}\n\n\t\tparseImages(json, onLoad) {\n\t\t\tconst scope = this;\n\t\t\tconst images = {};\n\t\t\tlet loader;\n\n\t\t\tfunction loadImage(url) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\treturn loader.load(url, function () {\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, undefined, function () {\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction deserializeImage(image) {\n\t\t\t\tif (typeof image === 'string') {\n\t\t\t\t\tconst url = image;\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n\t\t\t\t\treturn loadImage(path);\n\t\t\t\t} else {\n\t\t\t\t\tif (image.data) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json !== undefined && json.length > 0) {\n\t\t\t\tconst manager = new LoadingManager(onLoad);\n\t\t\t\tloader = new ImageLoader(manager);\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\n\t\t\t\t\tconst image = json[i];\n\t\t\t\t\tconst url = image.url;\n\n\t\t\t\t\tif (Array.isArray(url)) {\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\t\t\t\t\t\timages[image.uuid] = [];\n\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\n\t\t\t\t\t\t\tconst currentUrl = url[j];\n\t\t\t\t\t\t\tconst deserializedImage = deserializeImage(currentUrl);\n\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// load single image\n\t\t\t\t\t\tconst deserializedImage = deserializeImage(image.url);\n\n\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn images;\n\t\t}\n\n\t\tasync parseImagesAsync(json) {\n\t\t\tconst scope = this;\n\t\t\tconst images = {};\n\t\t\tlet loader;\n\n\t\t\tasync function deserializeImage(image) {\n\t\t\t\tif (typeof image === 'string') {\n\t\t\t\t\tconst url = image;\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n\t\t\t\t\treturn await loader.loadAsync(path);\n\t\t\t\t} else {\n\t\t\t\t\tif (image.data) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json !== undefined && json.length > 0) {\n\t\t\t\tloader = new ImageLoader(this.manager);\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\n\t\t\t\t\tconst image = json[i];\n\t\t\t\t\tconst url = image.url;\n\n\t\t\t\t\tif (Array.isArray(url)) {\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\t\t\t\t\t\timages[image.uuid] = [];\n\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\n\t\t\t\t\t\t\tconst currentUrl = url[j];\n\t\t\t\t\t\t\tconst deserializedImage = await deserializeImage(currentUrl);\n\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// load single image\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage(image.url);\n\n\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn images;\n\t\t}\n\n\t\tparseTextures(json, images) {\n\t\t\tfunction parseConstant(value, type) {\n\t\t\t\tif (typeof value === 'number') return value;\n\t\t\t\tconsole.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n\t\t\t\treturn type[value];\n\t\t\t}\n\n\t\t\tconst textures = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tif (data.image === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (images[data.image] === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined image', data.image);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet texture;\n\t\t\t\t\tconst image = images[data.image];\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\ttexture = new CubeTexture(image);\n\t\t\t\t\t\tif (image.length === 6) texture.needsUpdate = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (image && image.data) {\n\t\t\t\t\t\t\ttexture = new DataTexture(image.data, image.width, image.height);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexture = new Texture(image);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (image) texture.needsUpdate = true; // textures can have undefined image data\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) texture.name = data.name;\n\t\t\t\t\tif (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n\t\t\t\t\tif (data.offset !== undefined) texture.offset.fromArray(data.offset);\n\t\t\t\t\tif (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n\t\t\t\t\tif (data.center !== undefined) texture.center.fromArray(data.center);\n\t\t\t\t\tif (data.rotation !== undefined) texture.rotation = data.rotation;\n\n\t\t\t\t\tif (data.wrap !== undefined) {\n\t\t\t\t\t\ttexture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n\t\t\t\t\t\ttexture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.format !== undefined) texture.format = data.format;\n\t\t\t\t\tif (data.type !== undefined) texture.type = data.type;\n\t\t\t\t\tif (data.encoding !== undefined) texture.encoding = data.encoding;\n\t\t\t\t\tif (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n\t\t\t\t\tif (data.flipY !== undefined) texture.flipY = data.flipY;\n\t\t\t\t\tif (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\t\tif (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\t\ttextures[data.uuid] = texture;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn textures;\n\t\t}\n\n\t\tparseObject(data, geometries, materials, textures, animations) {\n\t\t\tlet object;\n\n\t\t\tfunction getGeometry(name) {\n\t\t\t\tif (geometries[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined geometry', name);\n\t\t\t\t}\n\n\t\t\t\treturn geometries[name];\n\t\t\t}\n\n\t\t\tfunction getMaterial(name) {\n\t\t\t\tif (name === undefined) return undefined;\n\n\t\t\t\tif (Array.isArray(name)) {\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor (let i = 0, l = name.length; i < l; i++) {\n\t\t\t\t\t\tconst uuid = name[i];\n\n\t\t\t\t\t\tif (materials[uuid] === undefined) {\n\t\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', uuid);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push(materials[uuid]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\t\t\t\t}\n\n\t\t\t\tif (materials[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', name);\n\t\t\t\t}\n\n\t\t\t\treturn materials[name];\n\t\t\t}\n\n\t\t\tfunction getTexture(uuid) {\n\t\t\t\tif (textures[uuid] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined texture', uuid);\n\t\t\t\t}\n\n\t\t\t\treturn textures[uuid];\n\t\t\t}\n\n\t\t\tlet geometry, material;\n\n\t\t\tswitch (data.type) {\n\t\t\t\tcase 'Scene':\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif (data.background !== undefined) {\n\t\t\t\t\t\tif (Number.isInteger(data.background)) {\n\t\t\t\t\t\t\tobject.background = new Color(data.background);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobject.background = getTexture(data.background);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.environment !== undefined) object.environment = getTexture(data.environment);\n\n\t\t\t\t\tif (data.fog !== undefined) {\n\t\t\t\t\t\tif (data.fog.type === 'Fog') {\n\t\t\t\t\t\t\tobject.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n\t\t\t\t\t\t} else if (data.fog.type === 'FogExp2') {\n\t\t\t\t\t\t\tobject.fog = new FogExp2(data.fog.color, data.fog.density);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\t\t\t\t\tobject = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n\t\t\t\t\tif (data.focus !== undefined) object.focus = data.focus;\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\t\t\t\t\tobject = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\t\t\t\t\tobject = new AmbientLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tobject = new DirectionalLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tobject = new PointLight(data.color, data.intensity, data.distance, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tobject = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tobject = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tobject = new HemisphereLight(data.color, data.groundColor, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LightProbe':\n\t\t\t\t\tobject = new LightProbe().fromJSON(data);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new SkinnedMesh(geometry, material);\n\t\t\t\t\tif (data.bindMode !== undefined) object.bindMode = data.bindMode;\n\t\t\t\t\tif (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\n\t\t\t\t\tif (data.skeleton !== undefined) object.skeleton = data.skeleton;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new Mesh(geometry, material);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstancedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tconst count = data.count;\n\t\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\t\tconst instanceColor = data.instanceColor;\n\t\t\t\t\tobject = new InstancedMesh(geometry, material, count);\n\t\t\t\t\tobject.instanceMatrix = new BufferAttribute(new Float32Array(instanceMatrix.array), 16);\n\t\t\t\t\tif (instanceColor !== undefined) object.instanceColor = new BufferAttribute(new Float32Array(instanceColor.array), instanceColor.itemSize);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\t\t\t\t\tobject = new LOD();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\t\t\t\t\tobject = new Line(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\t\t\t\t\tobject = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\t\t\t\t\tobject = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\t\t\t\t\tobject = new Points(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\t\t\t\t\tobject = new Sprite(getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\t\t\t\t\tobject = new Group();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Bone':\n\t\t\t\t\tobject = new Bone();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tobject = new Object3D();\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\t\t\tif (data.name !== undefined) object.name = data.name;\n\n\t\t\tif (data.matrix !== undefined) {\n\t\t\t\tobject.matrix.fromArray(data.matrix);\n\t\t\t\tif (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\t\tif (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n\t\t\t} else {\n\t\t\t\tif (data.position !== undefined) object.position.fromArray(data.position);\n\t\t\t\tif (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n\t\t\t\tif (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n\t\t\t\tif (data.scale !== undefined) object.scale.fromArray(data.scale);\n\t\t\t}\n\n\t\t\tif (data.castShadow !== undefined) object.castShadow = data.castShadow;\n\t\t\tif (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif (data.shadow) {\n\t\t\t\tif (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n\t\t\t\tif (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\t\tif (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n\t\t\t\tif (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n\t\t\t\tif (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n\t\t\t}\n\n\t\t\tif (data.visible !== undefined) object.visible = data.visible;\n\t\t\tif (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n\t\t\tif (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n\t\t\tif (data.userData !== undefined) object.userData = data.userData;\n\t\t\tif (data.layers !== undefined) object.layers.mask = data.layers;\n\n\t\t\tif (data.children !== undefined) {\n\t\t\t\tconst children = data.children;\n\n\t\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\t\tobject.add(this.parseObject(children[i], geometries, materials, textures, animations));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.animations !== undefined) {\n\t\t\t\tconst objectAnimations = data.animations;\n\n\t\t\t\tfor (let i = 0; i < objectAnimations.length; i++) {\n\t\t\t\t\tconst uuid = objectAnimations[i];\n\t\t\t\t\tobject.animations.push(animations[uuid]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.type === 'LOD') {\n\t\t\t\tif (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n\t\t\t\tconst levels = data.levels;\n\n\t\t\t\tfor (let l = 0; l < levels.length; l++) {\n\t\t\t\t\tconst level = levels[l];\n\t\t\t\t\tconst child = object.getObjectByProperty('uuid', level.object);\n\n\t\t\t\t\tif (child !== undefined) {\n\t\t\t\t\t\tobject.addLevel(child, level.distance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn object;\n\t\t}\n\n\t\tbindSkeletons(object, skeletons) {\n\t\t\tif (Object.keys(skeletons).length === 0) return;\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isSkinnedMesh === true && child.skeleton !== undefined) {\n\t\t\t\t\tconst skeleton = skeletons[child.skeleton];\n\n\t\t\t\t\tif (skeleton === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchild.bind(skeleton, child.bindMatrix);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/* DEPRECATED */\n\n\n\t\tsetTexturePath(value) {\n\t\t\tconsole.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\n\t\t\treturn this.setResourcePath(value);\n\t\t}\n\n\t}\n\n\tconst TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\tconst TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\tconst TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n\t};\n\n\tclass ImageBitmapLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\n\t\t\tif (typeof createImageBitmap === 'undefined') {\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n\t\t\t}\n\n\t\t\tif (typeof fetch === 'undefined') {\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n\t\t\t}\n\n\t\t\tthis.options = {\n\t\t\t\tpremultiplyAlpha: 'none'\n\t\t\t};\n\t\t}\n\n\t\tsetOptions(options) {\n\t\t\tthis.options = options;\n\t\t\treturn this;\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tconst fetchOptions = {};\n\t\t\tfetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\n\t\t\tfetchOptions.headers = this.requestHeader;\n\t\t\tfetch(url, fetchOptions).then(function (res) {\n\t\t\t\treturn res.blob();\n\t\t\t}).then(function (blob) {\n\t\t\t\treturn createImageBitmap(blob, Object.assign(scope.options, {\n\t\t\t\t\tcolorSpaceConversion: 'none'\n\t\t\t\t}));\n\t\t\t}).then(function (imageBitmap) {\n\t\t\t\tCache.add(url, imageBitmap);\n\t\t\t\tif (onLoad) onLoad(imageBitmap);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}).catch(function (e) {\n\t\t\t\tif (onError) onError(e);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t});\n\t\t\tscope.manager.itemStart(url);\n\t\t}\n\n\t}\n\n\tImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\n\tclass ShapePath {\n\t\tconstructor() {\n\t\t\tthis.type = 'ShapePath';\n\t\t\tthis.color = new Color();\n\t\t\tthis.subPaths = [];\n\t\t\tthis.currentPath = null;\n\t\t}\n\n\t\tmoveTo(x, y) {\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push(this.currentPath);\n\t\t\tthis.currentPath.moveTo(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tlineTo(x, y) {\n\t\t\tthis.currentPath.lineTo(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tthis.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tthis.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tsplineThru(pts) {\n\t\t\tthis.currentPath.splineThru(pts);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoShapes(isCCW, noHoles) {\n\t\t\tfunction toShapesNoHoles(inSubpaths) {\n\t\t\t\tconst shapes = [];\n\n\t\t\t\tfor (let i = 0, l = inSubpaths.length; i < l; i++) {\n\t\t\t\t\tconst tmpPath = inSubpaths[i];\n\t\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\t\tshapes.push(tmpShape);\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon(inPt, inPolygon) {\n\t\t\t\tconst polyLen = inPolygon.length; // inPt on polygon contour => immediate success\t\tor\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//\twith the horizontal line through inPt, left of inPt\n\t\t\t\t//\tnot counting lowerY endpoints of edges and whole edges on that line\n\n\t\t\t\tlet inside = false;\n\n\t\t\t\tfor (let p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n\t\t\t\t\tlet edgeLowPt = inPolygon[p];\n\t\t\t\t\tlet edgeHighPt = inPolygon[q];\n\t\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif (Math.abs(edgeDy) > Number.EPSILON) {\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif (edgeDy < 0) {\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[q];\n\t\t\t\t\t\t\tedgeDx = -edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[p];\n\t\t\t\t\t\t\tedgeDy = -edgeDy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n\t\t\t\t\t\tif (inPt.y === edgeLowPt.y) {\n\t\t\t\t\t\t\tif (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n\t\t\t\t\t\t\tif (perpEdge === 0) return true; // inPt is on contour ?\n\n\t\t\t\t\t\t\tif (perpEdge < 0) continue;\n\t\t\t\t\t\t\tinside = !inside; // true intersection left of inPt\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif (inPt.y !== edgeLowPt.y) continue; // parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\n\t\t\t\t\t\tif (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn inside;\n\t\t\t}\n\n\t\t\tconst isClockWise = ShapeUtils.isClockWise;\n\t\t\tconst subPaths = this.subPaths;\n\t\t\tif (subPaths.length === 0) return [];\n\t\t\tif (noHoles === true) return toShapesNoHoles(subPaths);\n\t\t\tlet solid, tmpPath, tmpShape;\n\t\t\tconst shapes = [];\n\n\t\t\tif (subPaths.length === 1) {\n\t\t\t\ttmpPath = subPaths[0];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tlet holesFirst = !isClockWise(subPaths[0].getPoints());\n\t\t\tholesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n\t\t\tconst betterShapeHoles = [];\n\t\t\tconst newShapes = [];\n\t\t\tlet newShapeHoles = [];\n\t\t\tlet mainIdx = 0;\n\t\t\tlet tmpPoints;\n\t\t\tnewShapes[mainIdx] = undefined;\n\t\t\tnewShapeHoles[mainIdx] = [];\n\n\t\t\tfor (let i = 0, l = subPaths.length; i < l; i++) {\n\t\t\t\ttmpPath = subPaths[i];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise(tmpPoints);\n\t\t\t\tsolid = isCCW ? !solid : solid;\n\n\t\t\t\tif (solid) {\n\t\t\t\t\tif (!holesFirst && newShapes[mainIdx]) mainIdx++;\n\t\t\t\t\tnewShapes[mainIdx] = {\n\t\t\t\t\t\ts: new Shape(),\n\t\t\t\t\t\tp: tmpPoints\n\t\t\t\t\t};\n\t\t\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\n\t\t\t\t\tif (holesFirst) mainIdx++;\n\t\t\t\t\tnewShapeHoles[mainIdx] = []; //console.log('cw', i);\n\t\t\t\t} else {\n\t\t\t\t\tnewShapeHoles[mainIdx].push({\n\t\t\t\t\t\th: tmpPath,\n\t\t\t\t\t\tp: tmpPoints[0]\n\t\t\t\t\t}); //console.log('ccw', i);\n\t\t\t\t}\n\t\t\t} // only Holes? -> probably all Shapes with wrong orientation\n\n\n\t\t\tif (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n\t\t\tif (newShapes.length > 1) {\n\t\t\t\tlet ambiguous = false;\n\t\t\t\tconst toChange = [];\n\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n\t\t\t\t\tbetterShapeHoles[sIdx] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n\t\t\t\t\tconst sho = newShapeHoles[sIdx];\n\n\t\t\t\t\tfor (let hIdx = 0; hIdx < sho.length; hIdx++) {\n\t\t\t\t\t\tconst ho = sho[hIdx];\n\t\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\t\tfor (let s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n\t\t\t\t\t\t\tif (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n\t\t\t\t\t\t\t\tif (sIdx !== s2Idx) toChange.push({\n\t\t\t\t\t\t\t\t\tfroms: sIdx,\n\t\t\t\t\t\t\t\t\ttos: s2Idx,\n\t\t\t\t\t\t\t\t\thole: hIdx\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push(ho);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\tbetterShapeHoles[sIdx].push(ho);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // console.log(\"ambiguous: \", ambiguous);\n\n\n\t\t\t\tif (toChange.length > 0) {\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif (!ambiguous) newShapeHoles = betterShapeHoles;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet tmpHoles;\n\n\t\t\tfor (let i = 0, il = newShapes.length; i < il; i++) {\n\t\t\t\ttmpShape = newShapes[i].s;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\ttmpHoles = newShapeHoles[i];\n\n\t\t\t\tfor (let j = 0, jl = tmpHoles.length; j < jl; j++) {\n\t\t\t\t\ttmpShape.holes.push(tmpHoles[j].h);\n\t\t\t\t}\n\t\t\t} //console.log(\"shape\", shapes);\n\n\n\t\t\treturn shapes;\n\t\t}\n\n\t}\n\n\tclass Font {\n\t\tconstructor(data) {\n\t\t\tthis.type = 'Font';\n\t\t\tthis.data = data;\n\t\t}\n\n\t\tgenerateShapes(text, size = 100) {\n\t\t\tconst shapes = [];\n\t\t\tconst paths = createPaths(text, size, this.data);\n\n\t\t\tfor (let p = 0, pl = paths.length; p < pl; p++) {\n\t\t\t\tArray.prototype.push.apply(shapes, paths[p].toShapes());\n\t\t\t}\n\n\t\t\treturn shapes;\n\t\t}\n\n\t}\n\n\tfunction createPaths(text, size, data) {\n\t\tconst chars = Array.from(text);\n\t\tconst scale = size / data.resolution;\n\t\tconst line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n\t\tconst paths = [];\n\t\tlet offsetX = 0,\n\t\t\t\toffsetY = 0;\n\n\t\tfor (let i = 0; i < chars.length; i++) {\n\t\t\tconst char = chars[i];\n\n\t\t\tif (char === '\\n') {\n\t\t\t\toffsetX = 0;\n\t\t\t\toffsetY -= line_height;\n\t\t\t} else {\n\t\t\t\tconst ret = createPath(char, scale, offsetX, offsetY, data);\n\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\tpaths.push(ret.path);\n\t\t\t}\n\t\t}\n\n\t\treturn paths;\n\t}\n\n\tfunction createPath(char, scale, offsetX, offsetY, data) {\n\t\tconst glyph = data.glyphs[char] || data.glyphs['?'];\n\n\t\tif (!glyph) {\n\t\t\tconsole.error('THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst path = new ShapePath();\n\t\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\t\tif (glyph.o) {\n\t\t\tconst outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n\t\t\tfor (let i = 0, l = outline.length; i < l;) {\n\t\t\t\tconst action = outline[i++];\n\n\t\t\t\tswitch (action) {\n\t\t\t\t\tcase 'm':\n\t\t\t\t\t\t// moveTo\n\t\t\t\t\t\tx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\ty = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.moveTo(x, y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t// lineTo\n\t\t\t\t\t\tx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\ty = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.lineTo(x, y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\t// quadraticCurveTo\n\t\t\t\t\t\tcpx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t// bezierCurveTo\n\t\t\t\t\t\tcpx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tcpx2 = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy2 = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\toffsetX: glyph.ha * scale,\n\t\t\tpath: path\n\t\t};\n\t}\n\n\tFont.prototype.isFont = true;\n\n\tclass FontLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\tlet json;\n\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(text);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n\t\t\t\t\tjson = JSON.parse(text.substring(65, text.length - 2));\n\t\t\t\t}\n\n\t\t\t\tconst font = scope.parse(json);\n\t\t\t\tif (onLoad) onLoad(font);\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\treturn new Font(json);\n\t\t}\n\n\t}\n\n\tlet _context;\n\n\tconst AudioContext = {\n\t\tgetContext: function () {\n\t\t\tif (_context === undefined) {\n\t\t\t\t_context = new (window.AudioContext || window.webkitAudioContext)();\n\t\t\t}\n\n\t\t\treturn _context;\n\t\t},\n\t\tsetContext: function (value) {\n\t\t\t_context = value;\n\t\t}\n\t};\n\n\tclass AudioLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\ttry {\n\t\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\t\tconst bufferCopy = buffer.slice(0);\n\t\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\t\tcontext.decodeAudioData(bufferCopy, function (audioBuffer) {\n\t\t\t\t\t\tonLoad(audioBuffer);\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t}\n\n\tclass HemisphereLightProbe extends LightProbe {\n\t\tconstructor(skyColor, groundColor, intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tconst color1 = new Color().set(skyColor);\n\t\t\tconst color2 = new Color().set(groundColor);\n\t\t\tconst sky = new Vector3(color1.r, color1.g, color1.b);\n\t\t\tconst ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n\t\t\tconst c0 = Math.sqrt(Math.PI);\n\t\t\tconst c1 = c0 * Math.sqrt(0.75);\n\t\t\tthis.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n\t\t\tthis.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n\t\t}\n\n\t}\n\n\tHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\n\tclass AmbientLightProbe extends LightProbe {\n\t\tconstructor(color, intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tconst color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\n\t\t\tthis.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\n\t\t}\n\n\t}\n\n\tAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\n\tconst _eyeRight = /*@__PURE__*/new Matrix4();\n\n\tconst _eyeLeft = /*@__PURE__*/new Matrix4();\n\n\tclass StereoCamera {\n\t\tconstructor() {\n\t\t\tthis.type = 'StereoCamera';\n\t\t\tthis.aspect = 1;\n\t\t\tthis.eyeSep = 0.064;\n\t\t\tthis.cameraL = new PerspectiveCamera();\n\t\t\tthis.cameraL.layers.enable(1);\n\t\t\tthis.cameraL.matrixAutoUpdate = false;\n\t\t\tthis.cameraR = new PerspectiveCamera();\n\t\t\tthis.cameraR.layers.enable(2);\n\t\t\tthis.cameraR.matrixAutoUpdate = false;\n\t\t\tthis._cache = {\n\t\t\t\tfocus: null,\n\t\t\t\tfov: null,\n\t\t\t\taspect: null,\n\t\t\t\tnear: null,\n\t\t\t\tfar: null,\n\t\t\t\tzoom: null,\n\t\t\t\teyeSep: null\n\t\t\t};\n\t\t}\n\n\t\tupdate(camera) {\n\t\t\tconst cache = this._cache;\n\t\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\t\tif (needsUpdate) {\n\t\t\t\tcache.focus = camera.focus;\n\t\t\t\tcache.fov = camera.fov;\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\t\tcache.near = camera.near;\n\t\t\t\tcache.far = camera.far;\n\t\t\t\tcache.zoom = camera.zoom;\n\t\t\t\tcache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t\tconst ymax = cache.near * Math.tan(DEG2RAD * cache.fov * 0.5) / cache.zoom;\n\t\t\t\tlet xmin, xmax; // translate xOffset\n\n\t\t\t\t_eyeLeft.elements[12] = -eyeSepHalf;\n\t\t\t\t_eyeRight.elements[12] = eyeSepHalf; // for left eye\n\n\t\t\t\txmin = -ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n\t\t\t\txmin = -ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraR.projectionMatrix.copy(projectionMatrix);\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n\t\t\tthis.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n\t\t}\n\n\t}\n\n\tclass Clock {\n\t\tconstructor(autoStart = true) {\n\t\t\tthis.autoStart = autoStart;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.oldTime = 0;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = false;\n\t\t}\n\n\t\tstart() {\n\t\t\tthis.startTime = now();\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\t\t}\n\n\t\tstop() {\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\t\t}\n\n\t\tgetElapsedTime() {\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\t\t}\n\n\t\tgetDelta() {\n\t\t\tlet diff = 0;\n\n\t\t\tif (this.autoStart && !this.running) {\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (this.running) {\n\t\t\t\tconst newTime = now();\n\t\t\t\tdiff = (newTime - this.oldTime) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\t\t\t\tthis.elapsedTime += diff;\n\t\t\t}\n\n\t\t\treturn diff;\n\t\t}\n\n\t}\n\n\tfunction now() {\n\t\treturn (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n\t}\n\n\tconst _position$1 = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$1 = /*@__PURE__*/new Quaternion();\n\n\tconst _scale$1 = /*@__PURE__*/new Vector3();\n\n\tconst _orientation$1 = /*@__PURE__*/new Vector3();\n\n\tclass AudioListener extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'AudioListener';\n\t\t\tthis.context = AudioContext.getContext();\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect(this.context.destination);\n\t\t\tthis.filter = null;\n\t\t\tthis.timeDelta = 0; // private\n\n\t\t\tthis._clock = new Clock();\n\t\t}\n\n\t\tgetInput() {\n\t\t\treturn this.gain;\n\t\t}\n\n\t\tremoveFilter() {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t\tthis.gain.connect(this.context.destination);\n\t\t\t\tthis.filter = null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetFilter() {\n\t\t\treturn this.filter;\n\t\t}\n\n\t\tsetFilter(value) {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t} else {\n\t\t\t\tthis.gain.disconnect(this.context.destination);\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect(this.filter);\n\t\t\tthis.filter.connect(this.context.destination);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMasterVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t}\n\n\t\tsetMasterVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tconst listener = this.context.listener;\n\t\t\tconst up = this.up;\n\t\t\tthis.timeDelta = this._clock.getDelta();\n\t\t\tthis.matrixWorld.decompose(_position$1, _quaternion$1, _scale$1);\n\n\t\t\t_orientation$1.set(0, 0, -1).applyQuaternion(_quaternion$1);\n\n\t\t\tif (listener.positionX) {\n\t\t\t\t// code path for Chrome (see #14393)\n\t\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\t\t\t\tlistener.positionX.linearRampToValueAtTime(_position$1.x, endTime);\n\t\t\t\tlistener.positionY.linearRampToValueAtTime(_position$1.y, endTime);\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime(_position$1.z, endTime);\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime(_orientation$1.x, endTime);\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime(_orientation$1.y, endTime);\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime(_orientation$1.z, endTime);\n\t\t\t\tlistener.upX.linearRampToValueAtTime(up.x, endTime);\n\t\t\t\tlistener.upY.linearRampToValueAtTime(up.y, endTime);\n\t\t\t\tlistener.upZ.linearRampToValueAtTime(up.z, endTime);\n\t\t\t} else {\n\t\t\t\tlistener.setPosition(_position$1.x, _position$1.y, _position$1.z);\n\t\t\t\tlistener.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass Audio extends Object3D {\n\t\tconstructor(listener) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Audio';\n\t\t\tthis.listener = listener;\n\t\t\tthis.context = listener.context;\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect(listener.getInput());\n\t\t\tthis.autoplay = false;\n\t\t\tthis.buffer = null;\n\t\t\tthis.detune = 0;\n\t\t\tthis.loop = false;\n\t\t\tthis.loopStart = 0;\n\t\t\tthis.loopEnd = 0;\n\t\t\tthis.offset = 0;\n\t\t\tthis.duration = undefined;\n\t\t\tthis.playbackRate = 1;\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.hasPlaybackControl = true;\n\t\t\tthis.source = null;\n\t\t\tthis.sourceType = 'empty';\n\t\t\tthis._startedAt = 0;\n\t\t\tthis._progress = 0;\n\t\t\tthis._connected = false;\n\t\t\tthis.filters = [];\n\t\t}\n\n\t\tgetOutput() {\n\t\t\treturn this.gain;\n\t\t}\n\n\t\tsetNodeSource(audioNode) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMediaElementSource(mediaElement) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource(mediaElement);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMediaStreamSource(mediaStream) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaStreamNode';\n\t\t\tthis.source = this.context.createMediaStreamSource(mediaStream);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetBuffer(audioBuffer) {\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\t\t\tif (this.autoplay) this.play();\n\t\t\treturn this;\n\t\t}\n\n\t\tplay(delay = 0) {\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tconsole.warn('THREE.Audio: Audio is already playing.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._startedAt = this.context.currentTime + delay;\n\t\t\tconst source = this.context.createBufferSource();\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.loopStart = this.loopStart;\n\t\t\tsource.loopEnd = this.loopEnd;\n\t\t\tsource.onended = this.onEnded.bind(this);\n\t\t\tsource.start(this._startedAt, this._progress + this.offset, this.duration);\n\t\t\tthis.isPlaying = true;\n\t\t\tthis.source = source;\n\t\t\tthis.setDetune(this.detune);\n\t\t\tthis.setPlaybackRate(this.playbackRate);\n\t\t\treturn this.connect();\n\t\t}\n\n\t\tpause() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\t// update current progress\n\t\t\t\tthis._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\n\n\t\t\t\tif (this.loop === true) {\n\t\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\t\t\t\t\tthis._progress = this._progress % (this.duration || this.buffer.duration);\n\t\t\t\t}\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\t\t\t\tthis.isPlaying = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tstop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._progress = 0;\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.isPlaying = false;\n\t\t\treturn this;\n\t\t}\n\n\t\tconnect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.connect(this.filters[0]);\n\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].connect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].connect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.connect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = true;\n\t\t\treturn this;\n\t\t}\n\n\t\tdisconnect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.disconnect(this.filters[0]);\n\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].disconnect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].disconnect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.disconnect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = false;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetFilters() {\n\t\t\treturn this.filters;\n\t\t}\n\n\t\tsetFilters(value) {\n\t\t\tif (!value) value = [];\n\n\t\t\tif (this._connected === true) {\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value.slice();\n\t\t\t\tthis.connect();\n\t\t\t} else {\n\t\t\t\tthis.filters = value.slice();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetDetune(value) {\n\t\t\tthis.detune = value;\n\t\t\tif (this.source.detune === undefined) return; // only set detune when available\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetDetune() {\n\t\t\treturn this.detune;\n\t\t}\n\n\t\tgetFilter() {\n\t\t\treturn this.getFilters()[0];\n\t\t}\n\n\t\tsetFilter(filter) {\n\t\t\treturn this.setFilters(filter ? [filter] : []);\n\t\t}\n\n\t\tsetPlaybackRate(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetPlaybackRate() {\n\t\t\treturn this.playbackRate;\n\t\t}\n\n\t\tonEnded() {\n\t\t\tthis.isPlaying = false;\n\t\t}\n\n\t\tgetLoop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.loop;\n\t\t}\n\n\t\tsetLoop(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.loop = this.loop;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoopStart(value) {\n\t\t\tthis.loopStart = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoopEnd(value) {\n\t\t\tthis.loopEnd = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t}\n\n\t\tsetVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tconst _position = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion = /*@__PURE__*/new Quaternion();\n\n\tconst _scale = /*@__PURE__*/new Vector3();\n\n\tconst _orientation = /*@__PURE__*/new Vector3();\n\n\tclass PositionalAudio extends Audio {\n\t\tconstructor(listener) {\n\t\t\tsuper(listener);\n\t\t\tthis.panner = this.context.createPanner();\n\t\t\tthis.panner.panningModel = 'HRTF';\n\t\t\tthis.panner.connect(this.gain);\n\t\t}\n\n\t\tgetOutput() {\n\t\t\treturn this.panner;\n\t\t}\n\n\t\tgetRefDistance() {\n\t\t\treturn this.panner.refDistance;\n\t\t}\n\n\t\tsetRefDistance(value) {\n\t\t\tthis.panner.refDistance = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetRolloffFactor() {\n\t\t\treturn this.panner.rolloffFactor;\n\t\t}\n\n\t\tsetRolloffFactor(value) {\n\t\t\tthis.panner.rolloffFactor = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetDistanceModel() {\n\t\t\treturn this.panner.distanceModel;\n\t\t}\n\n\t\tsetDistanceModel(value) {\n\t\t\tthis.panner.distanceModel = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMaxDistance() {\n\t\t\treturn this.panner.maxDistance;\n\t\t}\n\n\t\tsetMaxDistance(value) {\n\t\t\tthis.panner.maxDistance = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tif (this.hasPlaybackControl === true && this.isPlaying === false) return;\n\t\t\tthis.matrixWorld.decompose(_position, _quaternion, _scale);\n\n\t\t\t_orientation.set(0, 0, 1).applyQuaternion(_quaternion);\n\n\t\t\tconst panner = this.panner;\n\n\t\t\tif (panner.positionX) {\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\t\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\t\t\t\tpanner.positionX.linearRampToValueAtTime(_position.x, endTime);\n\t\t\t\tpanner.positionY.linearRampToValueAtTime(_position.y, endTime);\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime(_position.z, endTime);\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\n\t\t\t} else {\n\t\t\t\tpanner.setPosition(_position.x, _position.y, _position.z);\n\t\t\t\tpanner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass AudioAnalyser {\n\t\tconstructor(audio, fftSize = 2048) {\n\t\t\tthis.analyser = audio.context.createAnalyser();\n\t\t\tthis.analyser.fftSize = fftSize;\n\t\t\tthis.data = new Uint8Array(this.analyser.frequencyBinCount);\n\t\t\taudio.getOutput().connect(this.analyser);\n\t\t}\n\n\t\tgetFrequencyData() {\n\t\t\tthis.analyser.getByteFrequencyData(this.data);\n\t\t\treturn this.data;\n\t\t}\n\n\t\tgetAverageFrequency() {\n\t\t\tlet value = 0;\n\t\t\tconst data = this.getFrequencyData();\n\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tvalue += data[i];\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\t\t}\n\n\t}\n\n\tclass PropertyMixer {\n\t\tconstructor(binding, typeName, valueSize) {\n\t\t\tthis.binding = binding;\n\t\t\tthis.valueSize = valueSize;\n\t\t\tlet mixFunction, mixFunctionAdditive, setIdentity; // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t\t//\n\t\t\t// interpolators can use .buffer as their .result\n\t\t\t// the data then goes to 'incoming'\n\t\t\t//\n\t\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t\t// the cumulative result and are compared to detect\n\t\t\t// changes\n\t\t\t//\n\t\t\t// 'orig' stores the original state of the property\n\t\t\t//\n\t\t\t// 'add' is used for additive cumulative results\n\t\t\t//\n\t\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t\t// to store intermediate quaternion multiplication results\n\n\t\t\tswitch (typeName) {\n\t\t\t\tcase 'quaternion':\n\t\t\t\t\tmixFunction = this._slerp;\n\t\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 6);\n\t\t\t\t\tthis._workIndex = 5;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'string':\n\t\t\t\tcase 'bool':\n\t\t\t\t\tmixFunction = this._select; // Use the regular mix function and for additive on these types,\n\t\t\t\t\t// additive is not relevant for non-numeric types\n\n\t\t\t\t\tmixFunctionAdditive = this._select;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\t\t\t\t\tthis.buffer = new Array(valueSize * 5);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmixFunction = this._lerp;\n\t\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 5);\n\t\t\t}\n\n\t\t\tthis._mixBufferRegion = mixFunction;\n\t\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\t\tthis._setIdentity = setIdentity;\n\t\t\tthis._origIndex = 3;\n\t\t\tthis._addIndex = 4;\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\t\t\tthis.useCount = 0;\n\t\t\tthis.referenceCount = 0;\n\t\t} // accumulate data in the 'incoming' region into 'accu<i>'\n\n\n\t\taccumulate(accuIndex, weight) {\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = accuIndex * stride + stride;\n\t\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\t\tif (currentWeight === 0) {\n\t\t\t\t// accuN := incoming * weight\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[offset + i] = buffer[i];\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\t\t\t} else {\n\t\t\t\t// accuN := accuN + incoming * weight\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tconst mix = weight / currentWeight;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, 0, mix, stride);\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\t\t} // accumulate data in the 'incoming' region into 'add'\n\n\n\t\taccumulateAdditive(weight) {\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = stride * this._addIndex;\n\n\t\t\tif (this.cumulativeWeightAdditive === 0) {\n\t\t\t\t// add = identity\n\t\t\t\tthis._setIdentity();\n\t\t\t} // add := add + incoming * weight\n\n\n\t\t\tthis._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\n\n\t\t\tthis.cumulativeWeightAdditive += weight;\n\t\t} // apply the state of 'accu<i>' to the binding when accus differ\n\n\n\t\tapply(accuIndex) {\n\t\t\tconst stride = this.valueSize,\n\t\t\t\t\t\tbuffer = this.buffer,\n\t\t\t\t\t\toffset = accuIndex * stride + stride,\n\t\t\t\t\t\tweight = this.cumulativeWeight,\n\t\t\t\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\t\t\t\t\t\tbinding = this.binding;\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t\tif (weight < 1) {\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\t\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n\t\t\t}\n\n\t\t\tif (weightAdditive > 0) {\n\t\t\t\t// accuN := accuN + additive accuN\n\t\t\t\tthis._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\n\t\t\t}\n\n\t\t\tfor (let i = stride, e = stride + stride; i !== e; ++i) {\n\t\t\t\tif (buffer[i] !== buffer[i + stride]) {\n\t\t\t\t\t// value has changed -> update scene graph\n\t\t\t\t\tbinding.setValue(buffer, offset);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} // remember the state of the bound property and copy it to both accus\n\n\n\t\tsaveOriginalState() {\n\t\t\tconst binding = this.binding;\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toriginalValueOffset = stride * this._origIndex;\n\t\t\tbinding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n\t\t\tfor (let i = stride, e = originalValueOffset; i !== e; ++i) {\n\t\t\t\tbuffer[i] = buffer[originalValueOffset + i % stride];\n\t\t\t} // Add to identity for additive\n\n\n\t\t\tthis._setIdentity();\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\t\t} // apply the state previously taken via 'saveOriginalState' to the binding\n\n\n\t\trestoreOriginalState() {\n\t\t\tconst originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue(this.buffer, originalValueOffset);\n\t\t}\n\n\t\t_setAdditiveIdentityNumeric() {\n\t\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tthis.buffer[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t_setAdditiveIdentityQuaternion() {\n\t\t\tthis._setAdditiveIdentityNumeric();\n\n\t\t\tthis.buffer[this._addIndex * this.valueSize + 3] = 1;\n\t\t}\n\n\t\t_setAdditiveIdentityOther() {\n\t\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\t\tfor (let i = 0; i < this.valueSize; i++) {\n\t\t\t\tthis.buffer[targetIndex + i] = this.buffer[startIndex + i];\n\t\t\t}\n\t\t} // mix functions\n\n\n\t\t_select(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tif (t >= 0.5) {\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[dstOffset + i] = buffer[srcOffset + i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_slerp(buffer, dstOffset, srcOffset, t) {\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n\t\t}\n\n\t\t_slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tconst workOffset = this._workIndex * stride; // Store result in intermediate buffer offset\n\n\t\t\tQuaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset); // Slerp to the intermediate result\n\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\n\t\t}\n\n\t\t_lerp(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tconst s = 1 - t;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tconst j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t}\n\n\t\t_lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tconst j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\n\tconst _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t// instead, we exclude reserved characters and match everything else.\n\n\n\tconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\n\tconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t// be matched to parse the rest of the track name.\n\n\n\tconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n\n\tconst _nodeRe = /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n\t// characters. Accessor may contain any character except closing bracket.\n\n\n\tconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n\t// contain any non-bracket characters.\n\n\n\tconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\n\n\tconst _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\n\n\tconst _supportedObjectNames = ['material', 'materials', 'bones'];\n\n\tclass Composite {\n\t\tconstructor(targetGroup, path, optionalParsedPath) {\n\t\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n\t\t\tthis._targetGroup = targetGroup;\n\t\t\tthis._bindings = targetGroup.subscribe_(path, parsedPath);\n\t\t}\n\n\t\tgetValue(array, offset) {\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t\tbinding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n\t\t\tif (binding !== undefined) binding.getValue(array, offset);\n\t\t}\n\n\t\tsetValue(array, offset) {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].setValue(array, offset);\n\t\t\t}\n\t\t}\n\n\t\tbind() {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].bind();\n\t\t\t}\n\t\t}\n\n\t\tunbind() {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].unbind();\n\t\t\t}\n\t\t}\n\n\t} // Note: This class uses a State pattern on a per-method basis:\n\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t// prototype version of these methods with one that represents\n\t// the bound state. When the property is not found, the methods\n\t// become no-ops.\n\n\n\tclass PropertyBinding {\n\t\tconstructor(rootNode, path, parsedPath) {\n\t\t\tthis.path = path;\n\t\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n\t\t\tthis.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n\t\t\tthis.rootNode = rootNode; // initial state of these methods that calls 'bind'\n\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\t\t}\n\n\t\tstatic create(root, path, parsedPath) {\n\t\t\tif (!(root && root.isAnimationObjectGroup)) {\n\t\t\t\treturn new PropertyBinding(root, path, parsedPath);\n\t\t\t} else {\n\t\t\t\treturn new PropertyBinding.Composite(root, path, parsedPath);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\n\n\t\tstatic sanitizeNodeName(name) {\n\t\t\treturn name.replace(/\\s/g, '_').replace(_reservedRe, '');\n\t\t}\n\n\t\tstatic parseTrackName(trackName) {\n\t\t\tconst matches = _trackRe.exec(trackName);\n\n\t\t\tif (!matches) {\n\t\t\t\tthrow new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n\t\t\t}\n\n\t\t\tconst results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[2],\n\t\t\t\tobjectName: matches[3],\n\t\t\t\tobjectIndex: matches[4],\n\t\t\t\tpropertyName: matches[5],\n\t\t\t\t// required\n\t\t\t\tpropertyIndex: matches[6]\n\t\t\t};\n\t\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n\t\t\tif (lastDot !== undefined && lastDot !== -1) {\n\t\t\t\tconst objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against an allowlist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\n\t\t\t\tif (_supportedObjectNames.indexOf(objectName) !== -1) {\n\t\t\t\t\tresults.nodeName = results.nodeName.substring(0, lastDot);\n\t\t\t\t\tresults.objectName = objectName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (results.propertyName === null || results.propertyName.length === 0) {\n\t\t\t\tthrow new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n\t\t\t}\n\n\t\t\treturn results;\n\t\t}\n\n\t\tstatic findNode(root, nodeName) {\n\t\t\tif (!nodeName || nodeName === '' || nodeName === '.' || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n\t\t\t\treturn root;\n\t\t\t} // search into skeleton bones.\n\n\n\t\t\tif (root.skeleton) {\n\t\t\t\tconst bone = root.skeleton.getBoneByName(nodeName);\n\n\t\t\t\tif (bone !== undefined) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t} // search into node subtree.\n\n\n\t\t\tif (root.children) {\n\t\t\t\tconst searchNodeSubtree = function (children) {\n\t\t\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\t\t\tconst childNode = children[i];\n\n\t\t\t\t\t\tif (childNode.name === nodeName || childNode.uuid === nodeName) {\n\t\t\t\t\t\t\treturn childNode;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = searchNodeSubtree(childNode.children);\n\t\t\t\t\t\tif (result) return result;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t};\n\n\t\t\t\tconst subTreeNode = searchNodeSubtree(root.children);\n\n\t\t\t\tif (subTreeNode) {\n\t\t\t\t\treturn subTreeNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} // these are used to \"bind\" a nonexistent property\n\n\n\t\t_getValue_unavailable() {}\n\n\t\t_setValue_unavailable() {} // Getters\n\n\n\t\t_getValue_direct(buffer, offset) {\n\t\t\tbuffer[offset] = this.node[this.propertyName];\n\t\t}\n\n\t\t_getValue_array(buffer, offset) {\n\t\t\tconst source = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = source.length; i !== n; ++i) {\n\t\t\t\tbuffer[offset++] = source[i];\n\t\t\t}\n\t\t}\n\n\t\t_getValue_arrayElement(buffer, offset) {\n\t\t\tbuffer[offset] = this.resolvedProperty[this.propertyIndex];\n\t\t}\n\n\t\t_getValue_toArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.toArray(buffer, offset);\n\t\t} // Direct\n\n\n\t\t_setValue_direct(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t}\n\n\t\t_setValue_direct_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // EntireArray\n\n\n\t\t_setValue_array(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\t\t}\n\n\t\t_setValue_array_setNeedsUpdate(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // ArrayElement\n\n\n\t\t_setValue_arrayElement(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t}\n\n\t\t_setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // HasToFromArray\n\n\n\t\t_setValue_fromArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t}\n\n\t\t_setValue_fromArray_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t}\n\n\t\t_getValue_unbound(targetArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.getValue(targetArray, offset);\n\t\t}\n\n\t\t_setValue_unbound(sourceArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.setValue(sourceArray, offset);\n\t\t} // create getter / setter pair for a property in the scene graph\n\n\n\t\tbind() {\n\t\t\tlet targetObject = this.node;\n\t\t\tconst parsedPath = this.parsedPath;\n\t\t\tconst objectName = parsedPath.objectName;\n\t\t\tconst propertyName = parsedPath.propertyName;\n\t\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif (!targetObject) {\n\t\t\t\ttargetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n\t\t\t\tthis.node = targetObject;\n\t\t\t} // set fail state so we can just 'return' on error\n\n\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable; // ensure there is a value node\n\n\t\t\tif (!targetObject) {\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (objectName) {\n\t\t\t\tlet objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n\t\t\t\tswitch (objectName) {\n\t\t\t\t\tcase 'materials':\n\t\t\t\t\t\tif (!targetObject.material) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!targetObject.material.materials) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\t\t\t\t\t\tif (!targetObject.skeleton) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} // potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n\t\t\t\t\t\tfor (let i = 0; i < targetObject.length; i++) {\n\t\t\t\t\t\t\tif (targetObject[i].name === objectIndex) {\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (targetObject[objectName] === undefined) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[objectName];\n\t\t\t\t}\n\n\t\t\t\tif (objectIndex !== undefined) {\n\t\t\t\t\tif (targetObject[objectIndex] === undefined) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[objectIndex];\n\t\t\t\t}\n\t\t\t} // resolve property\n\n\n\t\t\tconst nodeProperty = targetObject[propertyName];\n\n\t\t\tif (nodeProperty === undefined) {\n\t\t\t\tconst nodeName = parsedPath.nodeName;\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n\t\t\t\treturn;\n\t\t\t} // determine versioning scheme\n\n\n\t\t\tlet versioning = this.Versioning.None;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif (targetObject.needsUpdate !== undefined) {\n\t\t\t\t// material\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t} else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n\t\t\t\t// node transform\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t} // determine how the property gets bound\n\n\n\t\t\tlet bindingType = this.BindingType.Direct;\n\n\t\t\tif (propertyIndex !== undefined) {\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\t\t\t\tif (propertyName === 'morphTargetInfluences') {\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif (!targetObject.geometry) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (targetObject.geometry.isBufferGeometry) {\n\t\t\t\t\t\tif (!targetObject.geometry.morphAttributes) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\n\t\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[propertyIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\t\t\t} else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else if (Array.isArray(nodeProperty)) {\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else {\n\t\t\t\tthis.propertyName = propertyName;\n\t\t\t} // select getter / setter\n\n\n\t\t\tthis.getValue = this.GetterByBindingType[bindingType];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n\t\t}\n\n\t\tunbind() {\n\t\t\tthis.node = null; // back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\t\t}\n\n\t}\n\n\tPropertyBinding.Composite = Composite;\n\tPropertyBinding.prototype.BindingType = {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t};\n\tPropertyBinding.prototype.Versioning = {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t};\n\tPropertyBinding.prototype.GetterByBindingType = [PropertyBinding.prototype._getValue_direct, PropertyBinding.prototype._getValue_array, PropertyBinding.prototype._getValue_arrayElement, PropertyBinding.prototype._getValue_toArray];\n\tPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [[// Direct\n\tPropertyBinding.prototype._setValue_direct, PropertyBinding.prototype._setValue_direct_setNeedsUpdate, PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate], [// EntireArray\n\tPropertyBinding.prototype._setValue_array, PropertyBinding.prototype._setValue_array_setNeedsUpdate, PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate], [// ArrayElement\n\tPropertyBinding.prototype._setValue_arrayElement, PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate, PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate], [// HasToFromArray\n\tPropertyBinding.prototype._setValue_fromArray, PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate, PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *\t- Add objects you would otherwise pass as 'root' to the\n\t *\t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t *\t- Instead pass this object as 'root'.\n\t *\n\t *\t- You can also add and remove objects later when the mixer\n\t *\t\tis running.\n\t *\n\t * Note:\n\t *\n\t *\t\tObjects of this class appear as one object to the mixer,\n\t *\t\tso cache control of the individual objects must be done\n\t *\t\ton the group.\n\t *\n\t * Limitation:\n\t *\n\t *\t- The animated properties must be compatible among the\n\t *\t\tall objects in the group.\n\t *\n\t *\t- A single property can either be controlled through a\n\t *\t\ttarget group or directly, but not both.\n\t */\n\n\tclass AnimationObjectGroup {\n\t\tconstructor() {\n\t\t\tthis.uuid = generateUUID(); // cached objects followed by the active ones\n\n\t\t\tthis._objects = Array.prototype.slice.call(arguments);\n\t\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t\t// note: read by PropertyBinding.Composite\n\n\t\t\tconst indices = {};\n\t\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tindices[arguments[i].uuid] = i;\n\t\t\t}\n\n\t\t\tthis._paths = []; // inside: string\n\n\t\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\n\t\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\n\t\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\t\tconst scope = this;\n\t\t\tthis.stats = {\n\t\t\t\tobjects: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._objects.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tget bindingsPerObject() {\n\t\t\t\t\treturn scope._bindings.length;\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n\n\t\tadd() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tpaths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet knownObject = undefined,\n\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid;\n\t\t\t\tlet index = indicesByUUID[uuid];\n\n\t\t\t\tif (index === undefined) {\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\t\t\t\t\tindex = nObjects++;\n\t\t\t\t\tindicesByUUID[uuid] = index;\n\t\t\t\t\tobjects.push(object); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tbindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n\t\t\t\t\t}\n\t\t\t\t} else if (index < nCachedObjects) {\n\t\t\t\t\tknownObject = objects[index]; // move existing object to the ACTIVE region\n\n\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex];\n\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\tobjects[index] = lastCachedObject;\n\t\t\t\t\tindicesByUUID[uuid] = firstActiveIndex;\n\t\t\t\t\tobjects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex];\n\t\t\t\t\t\tlet binding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\n\t\t\t\t\t\tif (binding === undefined) {\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\t\t\t\t\t\t\tbinding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t} else if (objects[index] !== knownObject) {\n\t\t\t\t\tconsole.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t}\n\n\t\tremove() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined && index >= nCachedObjects) {\n\t\t\t\t\t// move existing object into the CACHED region\n\t\t\t\t\tconst lastCachedIndex = nCachedObjects++,\n\t\t\t\t\t\t\t\tfirstActiveObject = objects[lastCachedIndex];\n\t\t\t\t\tindicesByUUID[firstActiveObject.uuid] = index;\n\t\t\t\t\tobjects[index] = firstActiveObject;\n\t\t\t\t\tindicesByUUID[uuid] = lastCachedIndex;\n\t\t\t\t\tobjects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\tfirstActive = bindingsForPath[lastCachedIndex],\n\t\t\t\t\t\t\t\t\tbinding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = firstActive;\n\t\t\t\t\t\tbindingsForPath[lastCachedIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t} // remove & forget\n\n\n\t\tuncache() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\t\t\tnObjects = objects.length;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined) {\n\t\t\t\t\tdelete indicesByUUID[uuid];\n\n\t\t\t\t\tif (index < nCachedObjects) {\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\t\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex],\n\t\t\t\t\t\t\t\t\tlastIndex = --nObjects,\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex]; // last cached object takes this object's place\n\n\t\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\t\tobjects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = firstActiveIndex;\n\t\t\t\t\t\tobjects[firstActiveIndex] = lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex],\n\t\t\t\t\t\t\t\t\t\tlast = bindingsForPath[lastIndex];\n\t\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\t\t\t\t\t\tconst lastIndex = --nObjects,\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex];\n\n\t\t\t\t\t\tif (lastIndex > 0) {\n\t\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = index;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobjects[index] = lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j];\n\t\t\t\t\t\t\tbindingsForPath[index] = bindingsForPath[lastIndex];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t} // Internal interface used by befriended PropertyBinding.Composite:\n\n\n\t\tsubscribe_(path, parsedPath) {\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\t\tlet index = indicesByPath[path];\n\t\t\tconst bindings = this._bindings;\n\t\t\tif (index !== undefined) return bindings[index];\n\t\t\tconst paths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tobjects = this._objects,\n\t\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\t\t\tbindingsForPath = new Array(nObjects);\n\t\t\tindex = bindings.length;\n\t\t\tindicesByPath[path] = index;\n\t\t\tpaths.push(path);\n\t\t\tparsedPaths.push(parsedPath);\n\t\t\tbindings.push(bindingsForPath);\n\n\t\t\tfor (let i = nCachedObjects, n = objects.length; i !== n; ++i) {\n\t\t\t\tconst object = objects[i];\n\t\t\t\tbindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\t\t}\n\n\t\tunsubscribe_(path) {\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\t\t\tindex = indicesByPath[path];\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tconst paths = this._paths,\n\t\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\t\t\tlastBindings = bindings[lastBindingsIndex],\n\t\t\t\t\t\t\tlastBindingsPath = path[lastBindingsIndex];\n\t\t\t\tindicesByPath[lastBindingsPath] = index;\n\t\t\t\tbindings[index] = lastBindings;\n\t\t\t\tbindings.pop();\n\t\t\t\tparsedPaths[index] = parsedPaths[lastBindingsIndex];\n\t\t\t\tparsedPaths.pop();\n\t\t\t\tpaths[index] = paths[lastBindingsIndex];\n\t\t\t\tpaths.pop();\n\t\t\t}\n\t\t}\n\n\t}\n\n\tAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\n\tclass AnimationAction {\n\t\tconstructor(mixer, clip, localRoot = null, blendMode = clip.blendMode) {\n\t\t\tthis._mixer = mixer;\n\t\t\tthis._clip = clip;\n\t\t\tthis._localRoot = localRoot;\n\t\t\tthis.blendMode = blendMode;\n\t\t\tconst tracks = clip.tracks,\n\t\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\t\tinterpolants = new Array(nTracks);\n\t\t\tconst interpolantSettings = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\n\t\t\t\tconst interpolant = tracks[i].createInterpolant(null);\n\t\t\t\tinterpolants[i] = interpolant;\n\t\t\t\tinterpolant.settings = interpolantSettings;\n\t\t\t}\n\n\t\t\tthis._interpolantSettings = interpolantSettings;\n\t\t\tthis._interpolants = interpolants; // bound by the mixer\n\t\t\t// inside: PropertyMixer (managed by the mixer)\n\n\t\t\tthis._propertyBindings = new Array(nTracks);\n\t\t\tthis._cacheIndex = null; // for the memory manager\n\n\t\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis.loop = LoopRepeat;\n\t\t\tthis._loopCount = -1; // global mixer time when the action is to be started\n\t\t\t// it's set back to 'null' upon start of the action\n\n\t\t\tthis._startTime = null; // scaled local time of the action\n\t\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1;\n\t\t\tthis._effectiveTimeScale = 1;\n\t\t\tthis.weight = 1;\n\t\t\tthis._effectiveWeight = 1;\n\t\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\t\tthis.paused = false; // true -> zero effective time scale\n\n\t\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\t\tthis.clampWhenFinished = false; // keep feeding the last frame?\n\n\t\t\tthis.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n\t\t\tthis.zeroSlopeAtEnd = true; // clips for start, loop and end\n\t\t} // State & Scheduling\n\n\n\t\tplay() {\n\t\t\tthis._mixer._activateAction(this);\n\n\t\t\treturn this;\n\t\t}\n\n\t\tstop() {\n\t\t\tthis._mixer._deactivateAction(this);\n\n\t\t\treturn this.reset();\n\t\t}\n\n\t\treset() {\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\t\t\tthis.time = 0; // restart clip\n\n\t\t\tthis._loopCount = -1; // forget previous loops\n\n\t\t\tthis._startTime = null; // forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\t\t}\n\n\t\tisRunning() {\n\t\t\treturn this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n\t\t} // return true when play has been called\n\n\n\t\tisScheduled() {\n\t\t\treturn this._mixer._isActiveAction(this);\n\t\t}\n\n\t\tstartAt(time) {\n\t\t\tthis._startTime = time;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoop(mode, repetitions) {\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\t\t\treturn this;\n\t\t} // Weight\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\n\n\t\tsetEffectiveWeight(weight) {\n\t\t\tthis.weight = weight; // note: same logic as when updated at runtime\n\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\t\t\treturn this.stopFading();\n\t\t} // return the weight considering fading and .enabled\n\n\n\t\tgetEffectiveWeight() {\n\t\t\treturn this._effectiveWeight;\n\t\t}\n\n\t\tfadeIn(duration) {\n\t\t\treturn this._scheduleFading(duration, 0, 1);\n\t\t}\n\n\t\tfadeOut(duration) {\n\t\t\treturn this._scheduleFading(duration, 1, 0);\n\t\t}\n\n\t\tcrossFadeFrom(fadeOutAction, duration, warp) {\n\t\t\tfadeOutAction.fadeOut(duration);\n\t\t\tthis.fadeIn(duration);\n\n\t\t\tif (warp) {\n\t\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\t\t\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\t\t\t\tfadeOutAction.warp(1.0, startEndRatio, duration);\n\t\t\t\tthis.warp(endStartRatio, 1.0, duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcrossFadeTo(fadeInAction, duration, warp) {\n\t\t\treturn fadeInAction.crossFadeFrom(this, duration, warp);\n\t\t}\n\n\t\tstopFading() {\n\t\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\t\tif (weightInterpolant !== null) {\n\t\t\t\tthis._weightInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(weightInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Time Scale Control\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\n\n\t\tsetEffectiveTimeScale(timeScale) {\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\t\t\treturn this.stopWarping();\n\t\t} // return the time scale considering warping and .paused\n\n\n\t\tgetEffectiveTimeScale() {\n\t\t\treturn this._effectiveTimeScale;\n\t\t}\n\n\t\tsetDuration(duration) {\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\t\t\treturn this.stopWarping();\n\t\t}\n\n\t\tsyncWith(action) {\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\t\t\treturn this.stopWarping();\n\t\t}\n\n\t\thalt(duration) {\n\t\t\treturn this.warp(this._effectiveTimeScale, 0, duration);\n\t\t}\n\n\t\twarp(startTimeScale, endTimeScale, duration) {\n\t\t\tconst mixer = this._mixer,\n\t\t\t\t\t\tnow = mixer.time,\n\t\t\t\t\t\ttimeScale = this.timeScale;\n\t\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[0] = startTimeScale / timeScale;\n\t\t\tvalues[1] = endTimeScale / timeScale;\n\t\t\treturn this;\n\t\t}\n\n\t\tstopWarping() {\n\t\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif (timeScaleInterpolant !== null) {\n\t\t\t\tthis._timeScaleInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Object Accessors\n\n\n\t\tgetMixer() {\n\t\t\treturn this._mixer;\n\t\t}\n\n\t\tgetClip() {\n\t\t\treturn this._clip;\n\t\t}\n\n\t\tgetRoot() {\n\t\t\treturn this._localRoot || this._mixer._root;\n\t\t} // Interna\n\n\n\t\t_update(time, deltaTime, timeDirection, accuIndex) {\n\t\t\t// called by the mixer\n\t\t\tif (!this.enabled) {\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\t\t\t\tthis._updateWeight(time);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst startTime = this._startTime;\n\n\t\t\tif (startTime !== null) {\n\t\t\t\t// check for scheduled start of action\n\t\t\t\tconst timeRunning = (time - startTime) * timeDirection;\n\n\t\t\t\tif (timeRunning < 0 || timeDirection === 0) {\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\t\t\t\t} // start\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\t\t\t} // apply time scale and advance time\n\n\n\t\t\tdeltaTime *= this._updateTimeScale(time);\n\n\t\t\tconst clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\n\t\t\tconst weight = this._updateWeight(time);\n\n\t\t\tif (weight > 0) {\n\t\t\t\tconst interpolants = this._interpolants;\n\t\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\t\tswitch (this.blendMode) {\n\t\t\t\t\tcase AdditiveAnimationBlendMode:\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\n\t\t\t\t\t\t\tpropertyMixers[j].accumulateAdditive(weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\n\t\t\t\t\t\t\tpropertyMixers[j].accumulate(accuIndex, weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_updateWeight(time) {\n\t\t\tlet weight = 0;\n\n\t\t\tif (this.enabled) {\n\t\t\t\tweight = this.weight;\n\t\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif (interpolantValue === 0) {\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\t\t}\n\n\t\t_updateTimeScale(time) {\n\t\t\tlet timeScale = 0;\n\n\t\t\tif (!this.paused) {\n\t\t\t\ttimeScale = this.timeScale;\n\t\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif (timeScale === 0) {\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\t\t}\n\n\t\t_updateTime(deltaTime) {\n\t\t\tconst duration = this._clip.duration;\n\t\t\tconst loop = this.loop;\n\t\t\tlet time = this.time + deltaTime;\n\t\t\tlet loopCount = this._loopCount;\n\t\t\tconst pingPong = loop === LoopPingPong;\n\n\t\t\tif (deltaTime === 0) {\n\t\t\t\tif (loopCount === -1) return time;\n\t\t\t\treturn pingPong && (loopCount & 1) === 1 ? duration - time : time;\n\t\t\t}\n\n\t\t\tif (loop === LoopOnce) {\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tthis._loopCount = 0;\n\n\t\t\t\t\tthis._setEndings(true, true, false);\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\t\t\t\t\tif (time >= duration) {\n\t\t\t\t\t\ttime = duration;\n\t\t\t\t\t} else if (time < 0) {\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.time = time;\n\t\t\t\t\t\tbreak handle_stop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\taction: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// repetitive Repeat or PingPong\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tif (deltaTime >= 0) {\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(true, this.repetitions === 0, pingPong);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\t\t\t\t\t\tthis._setEndings(this.repetitions === 0, true, pingPong);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (time >= duration || time < 0) {\n\t\t\t\t\t// wrap around\n\t\t\t\t\tconst loopDelta = Math.floor(time / duration); // signed\n\n\t\t\t\t\ttime -= duration * loopDelta;\n\t\t\t\t\tloopCount += Math.abs(loopDelta);\n\t\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif (pending <= 0) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\t\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\t\t\t\t\t\tif (pending === 1) {\n\t\t\t\t\t\t\t// entering the last round\n\t\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\n\t\t\t\t\t\t\tthis._setEndings(atStart, !atStart, pingPong);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._setEndings(false, false, pingPong);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'loop',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tloopDelta: loopDelta\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.time = time;\n\t\t\t\t}\n\n\t\t\t\tif (pingPong && (loopCount & 1) === 1) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\t\t\t\t\treturn duration - time;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn time;\n\t\t}\n\n\t\t_setEndings(atStart, atEnd, pingPong) {\n\t\t\tconst settings = this._interpolantSettings;\n\n\t\t\tif (pingPong) {\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\t\t\t} else {\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\t\t\t\tif (atStart) {\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\t\t\t\t}\n\n\t\t\t\tif (atEnd) {\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingEnd = WrapAroundEnding;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_scheduleFading(duration, weightNow, weightThen) {\n\t\t\tconst mixer = this._mixer,\n\t\t\t\t\t\tnow = mixer.time;\n\t\t\tlet interpolant = this._weightInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\tvalues[0] = weightNow;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[1] = weightThen;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AnimationMixer extends EventDispatcher {\n\t\tconstructor(root) {\n\t\t\tsuper();\n\t\t\tthis._root = root;\n\n\t\t\tthis._initMemoryManager();\n\n\t\t\tthis._accuIndex = 0;\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1.0;\n\t\t}\n\n\t\t_bindAction(action, prototypeAction) {\n\t\t\tconst root = action._localRoot || this._root,\n\t\t\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\t\t\tlet bindingsByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingsByName === undefined) {\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingsByName;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\n\t\t\t\tconst track = tracks[i],\n\t\t\t\t\t\t\ttrackName = track.name;\n\t\t\t\tlet binding = bindingsByName[trackName];\n\n\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t} else {\n\t\t\t\t\tbinding = bindings[i];\n\n\t\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\t\t\t\t\t\tif (binding._cacheIndex === null) {\n\t\t\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n\t\t\t\t\tbinding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t}\n\n\t\t\t\tinterpolants[i].resultBuffer = binding.buffer;\n\t\t\t}\n\t\t}\n\n\t\t_activateAction(action) {\n\t\t\tif (!this._isActiveAction(action)) {\n\t\t\t\tif (action._cacheIndex === null) {\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\t\t\t\t\tconst rootUuid = (action._localRoot || this._root).uuid,\n\t\t\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\t\t\tthis._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n\t\t\t\t\tthis._addInactiveAction(action, clipUuid, rootUuid);\n\t\t\t\t}\n\n\t\t\t\tconst bindings = action._propertyBindings; // increment reference counts / sort out state\n\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\t\tif (binding.useCount++ === 0) {\n\t\t\t\t\t\tthis._lendBinding(binding);\n\n\t\t\t\t\t\tbinding.saveOriginalState();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction(action);\n\t\t\t}\n\t\t}\n\n\t\t_deactivateAction(action) {\n\t\t\tif (this._isActiveAction(action)) {\n\t\t\t\tconst bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\t\tif (--binding.useCount === 0) {\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\t\tthis._takeBackBinding(binding);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction(action);\n\t\t\t}\n\t\t} // Memory manager\n\n\n\t\t_initMemoryManager() {\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._actionsByClip = {}; // inside:\n\t\t\t// {\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t\t// }\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n\t\t\tthis._nActiveBindings = 0;\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\n\t\t\tthis._nActiveControlInterpolants = 0;\n\t\t\tconst scope = this;\n\t\t\tthis.stats = {\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._actions.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveActions;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._bindings.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t};\n\t\t} // Memory management for AnimationAction objects\n\n\n\t\t_isActiveAction(action) {\n\t\t\tconst index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\t\t}\n\n\t\t_addInactiveAction(action, clipUuid, rootUuid) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\n\t\t\tlet actionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip === undefined) {\n\t\t\t\tactionsForClip = {\n\t\t\t\t\tknownActions: [action],\n\t\t\t\t\tactionByRoot: {}\n\t\t\t\t};\n\t\t\t\taction._byClipCacheIndex = 0;\n\t\t\t\tactionsByClip[clipUuid] = actionsForClip;\n\t\t\t} else {\n\t\t\t\tconst knownActions = actionsForClip.knownActions;\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push(action);\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push(action);\n\t\t\tactionsForClip.actionByRoot[rootUuid] = action;\n\t\t}\n\n\t\t_removeInactiveAction(action) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1],\n\t\t\t\t\t\tcacheIndex = action._cacheIndex;\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\tactions.pop();\n\t\t\taction._cacheIndex = null;\n\t\t\tconst clipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid],\n\t\t\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\t\t\t\t\t\tlastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n\t\t\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[byClipCacheIndex] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\t\t\taction._byClipCacheIndex = null;\n\t\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\t\t\trootUuid = (action._localRoot || this._root).uuid;\n\t\t\tdelete actionByRoot[rootUuid];\n\n\t\t\tif (knownActionsForClip.length === 0) {\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t}\n\n\t\t_removeInactiveBindingsForAction(action) {\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\tif (--binding.referenceCount === 0) {\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_lendAction(action) {\n\t\t\t// [ active actions |\tinactive actions\t]\n\t\t\t// [\tactive actions >| inactive actions ]\n\t\t\t//\t\t\t\t\t\t\t\t s\t\t\t\ta\n\t\t\t//\t\t\t\t\t\t\t\t\t<-swap->\n\t\t\t//\t\t\t\t\t\t\t\t a\t\t\t\ts\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveActions++,\n\t\t\t\t\t\tfirstInactiveAction = actions[lastActiveIndex];\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[lastActiveIndex] = action;\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = firstInactiveAction;\n\t\t}\n\n\t\t_takeBackAction(action) {\n\t\t\t// [\tactive actions\t| inactive actions ]\n\t\t\t// [ active actions |< inactive actions\t]\n\t\t\t//\t\t\t\ta\t\t\t\ts\n\t\t\t//\t\t\t\t <-swap->\n\t\t\t//\t\t\t\ts\t\t\t\ta\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveActions,\n\t\t\t\t\t\tlastActiveAction = actions[firstInactiveIndex];\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[firstInactiveIndex] = action;\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = lastActiveAction;\n\t\t} // Memory management for PropertyMixer objects\n\n\n\t\t_addInactiveBinding(binding, rootUuid, trackName) {\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindings = this._bindings;\n\t\t\tlet bindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName === undefined) {\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingByName;\n\t\t\t}\n\n\t\t\tbindingByName[trackName] = binding;\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push(binding);\n\t\t}\n\n\t\t_removeInactiveBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tpropBinding = binding.binding,\n\t\t\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\t\t\ttrackName = propBinding.path,\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid],\n\t\t\t\t\t\tlastInactiveBinding = bindings[bindings.length - 1],\n\t\t\t\t\t\tcacheIndex = binding._cacheIndex;\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[cacheIndex] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\t\t\tdelete bindingByName[trackName];\n\n\t\t\tif (Object.keys(bindingByName).length === 0) {\n\t\t\t\tdelete bindingsByRoot[rootUuid];\n\t\t\t}\n\t\t}\n\n\t\t_lendBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveBindings++,\n\t\t\t\t\t\tfirstInactiveBinding = bindings[lastActiveIndex];\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[lastActiveIndex] = binding;\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = firstInactiveBinding;\n\t\t}\n\n\t\t_takeBackBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveBindings,\n\t\t\t\t\t\tlastActiveBinding = bindings[firstInactiveIndex];\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[firstInactiveIndex] = binding;\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = lastActiveBinding;\n\t\t} // Memory management of Interpolants for weight and time scale\n\n\n\t\t_lendControlInterpolant() {\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants++;\n\t\t\tlet interpolant = interpolants[lastActiveIndex];\n\n\t\t\tif (interpolant === undefined) {\n\t\t\t\tinterpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[lastActiveIndex] = interpolant;\n\t\t\t}\n\n\t\t\treturn interpolant;\n\t\t}\n\n\t\t_takeBackControlInterpolant(interpolant) {\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveControlInterpolants,\n\t\t\t\t\t\tlastActiveInterpolant = interpolants[firstInactiveIndex];\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[firstInactiveIndex] = interpolant;\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[prevIndex] = lastActiveInterpolant;\n\t\t} // return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\n\n\t\tclipAction(clip, optionalRoot, blendMode) {\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\t\t\trootUuid = root.uuid;\n\t\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\n\t\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\t\t\tconst actionsForClip = this._actionsByClip[clipUuid];\n\t\t\tlet prototypeAction = null;\n\n\t\t\tif (blendMode === undefined) {\n\t\t\t\tif (clipObject !== null) {\n\t\t\t\t\tblendMode = clipObject.blendMode;\n\t\t\t\t} else {\n\t\t\t\t\tblendMode = NormalAnimationBlendMode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\tconst existingAction = actionsForClip.actionByRoot[rootUuid];\n\n\t\t\t\tif (existingAction !== undefined && existingAction.blendMode === blendMode) {\n\t\t\t\t\treturn existingAction;\n\t\t\t\t} // we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\n\n\t\t\t\tprototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n\t\t\t\tif (clipObject === null) clipObject = prototypeAction._clip;\n\t\t\t} // clip must be known when specified via string\n\n\n\t\t\tif (clipObject === null) return null; // allocate all resources required to run it\n\n\t\t\tconst newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\n\n\t\t\tthis._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n\t\t\tthis._addInactiveAction(newAction, clipUuid, rootUuid);\n\n\t\t\treturn newAction;\n\t\t} // get an existing action\n\n\n\t\texistingAction(clip, optionalRoot) {\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\t\tclipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n\t\t\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\treturn actionsForClip.actionByRoot[rootUuid] || null;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} // deactivates all previously scheduled actions\n\n\n\t\tstopAllAction() {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tnActions = this._nActiveActions;\n\n\t\t\tfor (let i = nActions - 1; i >= 0; --i) {\n\t\t\t\tactions[i].stop();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // advance the time and update apply the animation\n\n\n\t\tupdate(deltaTime) {\n\t\t\tdeltaTime *= this.timeScale;\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\t\t\ttimeDirection = Math.sign(deltaTime),\n\t\t\t\t\t\taccuIndex = this._accuIndex ^= 1; // run active actions\n\n\t\t\tfor (let i = 0; i !== nActions; ++i) {\n\t\t\t\tconst action = actions[i];\n\n\t\t\t\taction._update(time, deltaTime, timeDirection, accuIndex);\n\t\t\t} // update scene graph\n\n\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor (let i = 0; i !== nBindings; ++i) {\n\t\t\t\tbindings[i].apply(accuIndex);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Allows you to seek to a specific time in an animation.\n\n\n\t\tsetTime(timeInSeconds) {\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\n\t\t\tfor (let i = 0; i < this._actions.length; i++) {\n\t\t\t\tthis._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\t\t\t}\n\n\t\t\treturn this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\t\t} // return this mixer's root target object\n\n\n\t\tgetRoot() {\n\t\t\treturn this._root;\n\t\t} // free all resources specific to a particular clip\n\n\n\t\tuncacheClip(clip) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\t\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor (let i = 0, n = actionsToRemove.length; i !== n; ++i) {\n\t\t\t\t\tconst action = actionsToRemove[i];\n\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1];\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\t\t} // free all resources specific to a particular root target object\n\n\n\t\tuncacheRoot(root) {\n\t\t\tconst rootUuid = root.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor (const clipUuid in actionsByClip) {\n\t\t\t\tconst actionByRoot = actionsByClip[clipUuid].actionByRoot,\n\t\t\t\t\t\t\taction = actionByRoot[rootUuid];\n\n\t\t\t\tif (action !== undefined) {\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName !== undefined) {\n\t\t\t\tfor (const trackName in bindingByName) {\n\t\t\t\t\tconst binding = bindingByName[trackName];\n\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t} // remove a targeted clip from the cache\n\n\n\t\tuncacheAction(clip, optionalRoot) {\n\t\t\tconst action = this.existingAction(clip, optionalRoot);\n\n\t\t\tif (action !== null) {\n\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array(1);\n\n\tclass Uniform {\n\t\tconstructor(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tconsole.warn('THREE.Uniform: Type parameter is no longer needed.');\n\t\t\t\tvalue = arguments[1];\n\t\t\t}\n\n\t\t\tthis.value = value;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n\t\t}\n\n\t}\n\n\tclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\t\tconstructor(array, stride, meshPerAttribute = 1) {\n\t\t\tsuper(array, stride);\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tconst ib = super.clone(data);\n\t\t\tib.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn ib;\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tconst json = super.toJSON(data);\n\t\t\tjson.isInstancedInterleavedBuffer = true;\n\t\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn json;\n\t\t}\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\n\tclass GLBufferAttribute {\n\t\tconstructor(buffer, type, itemSize, elementSize, count) {\n\t\t\tthis.buffer = buffer;\n\t\t\tthis.type = type;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.elementSize = elementSize;\n\t\t\tthis.count = count;\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetBuffer(buffer) {\n\t\t\tthis.buffer = buffer;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetType(type, elementSize) {\n\t\t\tthis.type = type;\n\t\t\tthis.elementSize = elementSize;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetItemSize(itemSize) {\n\t\t\tthis.itemSize = itemSize;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetCount(count) {\n\t\t\tthis.count = count;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tGLBufferAttribute.prototype.isGLBufferAttribute = true;\n\n\tclass Raycaster {\n\t\tconstructor(origin, direction, near = 0, far = Infinity) {\n\t\t\tthis.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.camera = null;\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.params = {\n\t\t\t\tMesh: {},\n\t\t\t\tLine: {\n\t\t\t\t\tthreshold: 1\n\t\t\t\t},\n\t\t\t\tLOD: {},\n\t\t\t\tPoints: {\n\t\t\t\t\tthreshold: 1\n\t\t\t\t},\n\t\t\t\tSprite: {}\n\t\t\t};\n\t\t}\n\n\t\tset(origin, direction) {\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\t\t\tthis.ray.set(origin, direction);\n\t\t}\n\n\t\tsetFromCamera(coords, camera) {\n\t\t\tif (camera && camera.isPerspectiveCamera) {\n\t\t\t\tthis.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n\t\t\t\tthis.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n\t\t\t\tthis.camera = camera;\n\t\t\t} else if (camera && camera.isOrthographicCamera) {\n\t\t\t\tthis.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n\t\t\t\tthis.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n\t\t\t\tthis.camera = camera;\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\n\t\t\t}\n\t\t}\n\n\t\tintersectObject(object, recursive = false, intersects = []) {\n\t\t\tintersectObject(object, this, intersects, recursive);\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t}\n\n\t\tintersectObjects(objects, recursive = false, intersects = []) {\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\t\tintersectObject(objects[i], this, intersects, recursive);\n\t\t\t}\n\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t}\n\n\t}\n\n\tfunction ascSort(a, b) {\n\t\treturn a.distance - b.distance;\n\t}\n\n\tfunction intersectObject(object, raycaster, intersects, recursive) {\n\t\tif (object.layers.test(raycaster.layers)) {\n\t\t\tobject.raycast(raycaster, intersects);\n\t\t}\n\n\t\tif (recursive === true) {\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tintersectObject(children[i], raycaster, intersects, true);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\n\t */\n\n\tclass Spherical {\n\t\tconstructor(radius = 1, phi = 0, theta = 0) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi; // polar angle\n\n\t\t\tthis.theta = theta; // azimuthal angle\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(radius, phi, theta) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\t\t\treturn this;\n\t\t} // restrict phi to be betwee EPS and PI-EPS\n\n\n\t\tmakeSafe() {\n\t\t\tconst EPS = 0.000001;\n\t\t\tthis.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t}\n\n\t\tsetFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + y * y + z * z);\n\n\t\t\tif (this.radius === 0) {\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\t\t\t} else {\n\t\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\t\tthis.phi = Math.acos(clamp(y / this.radius, -1, 1));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t */\n\tclass Cylindrical {\n\t\tconstructor(radius = 1, theta = 0, y = 0) {\n\t\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\n\t\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n\t\t\tthis.y = y; // height above the x-z plane\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(radius, theta, y) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t}\n\n\t\tsetFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + z * z);\n\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$4 = /*@__PURE__*/new Vector2();\n\n\tclass Box2 {\n\t\tconstructor(min = new Vector2(+Infinity, +Infinity), max = new Vector2(-Infinity, -Infinity)) {\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\t\t}\n\n\t\tset(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCenterAndSize(center, size) {\n\t\t\tconst halfSize = _vector$4.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.min.x = this.min.y = +Infinity;\n\t\t\tthis.max.x = this.max.y = -Infinity;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t}\n\n\t\tgetSize(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n\t\t}\n\n\t\tcontainsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n\t\t}\n\n\t\tgetParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\t// using 4 splitting planes to rule out intersections\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\tconst clampedPoint = _vector$4.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t}\n\n\t\tintersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t}\n\n\t}\n\n\tBox2.prototype.isBox2 = true;\n\n\tconst _startP = /*@__PURE__*/new Vector3();\n\n\tconst _startEnd = /*@__PURE__*/new Vector3();\n\n\tclass Line3 {\n\t\tconstructor(start = new Vector3(), end = new Vector3()) {\n\t\t\tthis.start = start;\n\t\t\tthis.end = end;\n\t\t}\n\n\t\tset(start, end) {\n\t\t\tthis.start.copy(start);\n\t\t\tthis.end.copy(end);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(line) {\n\t\t\tthis.start.copy(line.start);\n\t\t\tthis.end.copy(line.end);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn target.addVectors(this.start, this.end).multiplyScalar(0.5);\n\t\t}\n\n\t\tdelta(target) {\n\t\t\treturn target.subVectors(this.end, this.start);\n\t\t}\n\n\t\tdistanceSq() {\n\t\t\treturn this.start.distanceToSquared(this.end);\n\t\t}\n\n\t\tdistance() {\n\t\t\treturn this.start.distanceTo(this.end);\n\t\t}\n\n\t\tat(t, target) {\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t}\n\n\t\tclosestPointToPointParameter(point, clampToLine) {\n\t\t\t_startP.subVectors(point, this.start);\n\n\t\t\t_startEnd.subVectors(this.end, this.start);\n\n\t\t\tconst startEnd2 = _startEnd.dot(_startEnd);\n\n\t\t\tconst startEnd_startP = _startEnd.dot(_startP);\n\n\t\t\tlet t = startEnd_startP / startEnd2;\n\n\t\t\tif (clampToLine) {\n\t\t\t\tt = clamp(t, 0, 1);\n\t\t\t}\n\n\t\t\treturn t;\n\t\t}\n\n\t\tclosestPointToPoint(point, clampToLine, target) {\n\t\t\tconst t = this.closestPointToPointParameter(point, clampToLine);\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tthis.start.applyMatrix4(matrix);\n\t\t\tthis.end.applyMatrix4(matrix);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(line) {\n\t\t\treturn line.start.equals(this.start) && line.end.equals(this.end);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tclass ImmediateRenderObject extends Object3D {\n\t\tconstructor(material) {\n\t\t\tsuper();\n\t\t\tthis.material = material;\n\n\t\t\tthis.render = function ()\n\t\t\t/* renderCallback */\n\t\t\t{};\n\n\t\t\tthis.hasPositions = false;\n\t\t\tthis.hasNormals = false;\n\t\t\tthis.hasColors = false;\n\t\t\tthis.hasUvs = false;\n\t\t\tthis.positionArray = null;\n\t\t\tthis.normalArray = null;\n\t\t\tthis.colorArray = null;\n\t\t\tthis.uvArray = null;\n\t\t\tthis.count = 0;\n\t\t}\n\n\t}\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\tconst _vector$3 = /*@__PURE__*/new Vector3();\n\n\tclass SpotLightHelper extends Object3D {\n\t\tconstructor(light, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n\t\t\tfor (let i = 0, j = 1, l = 32; i < l; i++, j++) {\n\t\t\t\tconst p1 = i / l * Math.PI * 2;\n\t\t\t\tconst p2 = j / l * Math.PI * 2;\n\t\t\t\tpositions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tthis.cone = new LineSegments(geometry, material);\n\t\t\tthis.add(this.cone);\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.cone.geometry.dispose();\n\t\t\tthis.cone.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tconst coneWidth = coneLength * Math.tan(this.light.angle);\n\t\t\tthis.cone.scale.set(coneWidth, coneWidth, coneLength);\n\n\t\t\t_vector$3.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\tthis.cone.lookAt(_vector$3);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.cone.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.cone.material.color.copy(this.light.color);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst _vector$2 = /*@__PURE__*/new Vector3();\n\n\tconst _boneMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _matrixWorldInv = /*@__PURE__*/new Matrix4();\n\n\tclass SkeletonHelper extends LineSegments {\n\t\tconstructor(object) {\n\t\t\tconst bones = getBoneList(object);\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\t\t\tconst color1 = new Color(0, 0, 1);\n\t\t\tconst color2 = new Color(0, 1, 0);\n\n\t\t\tfor (let i = 0; i < bones.length; i++) {\n\t\t\t\tconst bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tcolors.push(color1.r, color1.g, color1.b);\n\t\t\t\t\tcolors.push(color2.r, color2.g, color2.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false,\n\t\t\t\ttransparent: true\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'SkeletonHelper';\n\t\t\tthis.isSkeletonHelper = true;\n\t\t\tthis.root = object;\n\t\t\tthis.bones = bones;\n\t\t\tthis.matrix = object.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tconst bones = this.bones;\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst position = geometry.getAttribute('position');\n\n\t\t\t_matrixWorldInv.copy(this.root.matrixWorld).invert();\n\n\t\t\tfor (let i = 0, j = 0; i < bones.length; i++) {\n\t\t\t\tconst bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j, _vector$2.x, _vector$2.y, _vector$2.z);\n\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j + 1, _vector$2.x, _vector$2.y, _vector$2.z);\n\t\t\t\t\tj += 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tfunction getBoneList(object) {\n\t\tconst boneList = [];\n\n\t\tif (object && object.isBone) {\n\t\t\tboneList.push(object);\n\t\t}\n\n\t\tfor (let i = 0; i < object.children.length; i++) {\n\t\t\tboneList.push.apply(boneList, getBoneList(object.children[i]));\n\t\t}\n\n\t\treturn boneList;\n\t}\n\n\tclass PointLightHelper extends Mesh {\n\t\tconstructor(light, sphereSize, color) {\n\t\t\tconst geometry = new SphereGeometry(sphereSize, 4, 2);\n\t\t\tconst material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.color = color;\n\t\t\tthis.type = 'PointLightHelper';\n\t\t\tthis.matrix = this.light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.update();\n\t\t\t/*\n\t\t\t// TODO: delete this comment?\n\t\t\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\t\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\t\t\tconst d = light.distance;\n\t\t\tif ( d === 0.0 ) {\n\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t} else {\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t}\n\t\t\tthis.add( this.lightDistance );\n\t\t\t*/\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.material.color.copy(this.light.color);\n\t\t\t}\n\t\t\t/*\n\t\t\tconst d = this.light.distance;\n\t\t\t\tif ( d === 0.0 ) {\n\t\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.lightDistance.visible = true;\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t\t}\n\t\t\t*/\n\n\t\t}\n\n\t}\n\n\tconst _vector$1 = /*@__PURE__*/new Vector3();\n\n\tconst _color1 = /*@__PURE__*/new Color();\n\n\tconst _color2 = /*@__PURE__*/new Color();\n\n\tclass HemisphereLightHelper extends Object3D {\n\t\tconstructor(light, size, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tconst geometry = new OctahedronGeometry(size);\n\t\t\tgeometry.rotateY(Math.PI * 0.5);\n\t\t\tthis.material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tif (this.color === undefined) this.material.vertexColors = true;\n\t\t\tconst position = geometry.getAttribute('position');\n\t\t\tconst colors = new Float32Array(position.count * 3);\n\t\t\tgeometry.setAttribute('color', new BufferAttribute(colors, 3));\n\t\t\tthis.add(new Mesh(geometry, this.material));\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.children[0].geometry.dispose();\n\t\t\tthis.children[0].material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst mesh = this.children[0];\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tconst colors = mesh.geometry.getAttribute('color');\n\n\t\t\t\t_color1.copy(this.light.color);\n\n\t\t\t\t_color2.copy(this.light.groundColor);\n\n\t\t\t\tfor (let i = 0, l = colors.count; i < l; i++) {\n\t\t\t\t\tconst color = i < l / 2 ? _color1 : _color2;\n\t\t\t\t\tcolors.setXYZ(i, color.r, color.g, color.b);\n\t\t\t\t}\n\n\t\t\t\tcolors.needsUpdate = true;\n\t\t\t}\n\n\t\t\tmesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());\n\t\t}\n\n\t}\n\n\tclass GridHelper extends LineSegments {\n\t\tconstructor(size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888) {\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tconst center = divisions / 2;\n\t\t\tconst step = size / divisions;\n\t\t\tconst halfSize = size / 2;\n\t\t\tconst vertices = [],\n\t\t\t\t\t\tcolors = [];\n\n\t\t\tfor (let i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n\t\t\t\tvertices.push(-halfSize, 0, k, halfSize, 0, k);\n\t\t\t\tvertices.push(k, 0, -halfSize, k, 0, halfSize);\n\t\t\t\tconst color = i === center ? color1 : color2;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'GridHelper';\n\t\t}\n\n\t}\n\n\tclass PolarGridHelper extends LineSegments {\n\t\tconstructor(radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888) {\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tconst vertices = [];\n\t\t\tconst colors = []; // create the radials\n\n\t\t\tfor (let i = 0; i <= radials; i++) {\n\t\t\t\tconst v = i / radials * (Math.PI * 2);\n\t\t\t\tconst x = Math.sin(v) * radius;\n\t\t\t\tconst z = Math.cos(v) * radius;\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\tconst color = i & 1 ? color1 : color2;\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t} // create the circles\n\n\n\t\t\tfor (let i = 0; i <= circles; i++) {\n\t\t\t\tconst color = i & 1 ? color1 : color2;\n\t\t\t\tconst r = radius - radius / circles * i;\n\n\t\t\t\tfor (let j = 0; j < divisions; j++) {\n\t\t\t\t\t// first vertex\n\t\t\t\t\tlet v = j / divisions * (Math.PI * 2);\n\t\t\t\t\tlet x = Math.sin(v) * r;\n\t\t\t\t\tlet z = Math.cos(v) * r;\n\t\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\t\tcolors.push(color.r, color.g, color.b); // second vertex\n\n\t\t\t\t\tv = (j + 1) / divisions * (Math.PI * 2);\n\t\t\t\t\tx = Math.sin(v) * r;\n\t\t\t\t\tz = Math.cos(v) * r;\n\t\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'PolarGridHelper';\n\t\t}\n\n\t}\n\n\tconst _v1 = /*@__PURE__*/new Vector3();\n\n\tconst _v2 = /*@__PURE__*/new Vector3();\n\n\tconst _v3 = /*@__PURE__*/new Vector3();\n\n\tclass DirectionalLightHelper extends Object3D {\n\t\tconstructor(light, size, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tif (size === undefined) size = 1;\n\t\t\tlet geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tthis.lightPlane = new Line(geometry, material);\n\t\t\tthis.add(this.lightPlane);\n\t\t\tgeometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n\t\t\tthis.targetLine = new Line(geometry, material);\n\t\t\tthis.add(this.targetLine);\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.lightPlane.geometry.dispose();\n\t\t\tthis.lightPlane.material.dispose();\n\t\t\tthis.targetLine.geometry.dispose();\n\t\t\tthis.targetLine.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\t_v1.setFromMatrixPosition(this.light.matrixWorld);\n\n\t\t\t_v2.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\t_v3.subVectors(_v2, _v1);\n\n\t\t\tthis.lightPlane.lookAt(_v2);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.lightPlane.material.color.set(this.color);\n\t\t\t\tthis.targetLine.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.lightPlane.material.color.copy(this.light.color);\n\t\t\t\tthis.targetLine.material.color.copy(this.light.color);\n\t\t\t}\n\n\t\t\tthis.targetLine.lookAt(_v2);\n\t\t\tthis.targetLine.scale.z = _v3.length();\n\t\t}\n\n\t}\n\n\tconst _vector = /*@__PURE__*/new Vector3();\n\n\tconst _camera = /*@__PURE__*/new Camera();\n\t/**\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\n\tclass CameraHelper extends LineSegments {\n\t\tconstructor(camera) {\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tcolor: 0xffffff,\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\t\t\tconst pointMap = {}; // colors\n\n\t\t\tconst colorFrustum = new Color(0xffaa00);\n\t\t\tconst colorCone = new Color(0xff0000);\n\t\t\tconst colorUp = new Color(0x00aaff);\n\t\t\tconst colorTarget = new Color(0xffffff);\n\t\t\tconst colorCross = new Color(0x333333); // near\n\n\t\t\taddLine('n1', 'n2', colorFrustum);\n\t\t\taddLine('n2', 'n4', colorFrustum);\n\t\t\taddLine('n4', 'n3', colorFrustum);\n\t\t\taddLine('n3', 'n1', colorFrustum); // far\n\n\t\t\taddLine('f1', 'f2', colorFrustum);\n\t\t\taddLine('f2', 'f4', colorFrustum);\n\t\t\taddLine('f4', 'f3', colorFrustum);\n\t\t\taddLine('f3', 'f1', colorFrustum); // sides\n\n\t\t\taddLine('n1', 'f1', colorFrustum);\n\t\t\taddLine('n2', 'f2', colorFrustum);\n\t\t\taddLine('n3', 'f3', colorFrustum);\n\t\t\taddLine('n4', 'f4', colorFrustum); // cone\n\n\t\t\taddLine('p', 'n1', colorCone);\n\t\t\taddLine('p', 'n2', colorCone);\n\t\t\taddLine('p', 'n3', colorCone);\n\t\t\taddLine('p', 'n4', colorCone); // up\n\n\t\t\taddLine('u1', 'u2', colorUp);\n\t\t\taddLine('u2', 'u3', colorUp);\n\t\t\taddLine('u3', 'u1', colorUp); // target\n\n\t\t\taddLine('c', 't', colorTarget);\n\t\t\taddLine('p', 'c', colorCross); // cross\n\n\t\t\taddLine('cn1', 'cn2', colorCross);\n\t\t\taddLine('cn3', 'cn4', colorCross);\n\t\t\taddLine('cf1', 'cf2', colorCross);\n\t\t\taddLine('cf3', 'cf4', colorCross);\n\n\t\t\tfunction addLine(a, b, color) {\n\t\t\t\taddPoint(a, color);\n\t\t\t\taddPoint(b, color);\n\t\t\t}\n\n\t\t\tfunction addPoint(id, color) {\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\n\t\t\t\tif (pointMap[id] === undefined) {\n\t\t\t\t\tpointMap[id] = [];\n\t\t\t\t}\n\n\t\t\t\tpointMap[id].push(vertices.length / 3 - 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'CameraHelper';\n\t\t\tthis.camera = camera;\n\t\t\tif (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n\t\t\tthis.matrix = camera.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.pointMap = pointMap;\n\t\t\tthis.update();\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst pointMap = this.pointMap;\n\t\t\tconst w = 1,\n\t\t\t\t\t\th = 1; // we need just camera projection matrix inverse\n\t\t\t// world matrix must be identity\n\n\t\t\t_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\n\n\n\t\t\tsetPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n\t\t\tsetPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\n\n\t\t\tsetPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n\t\t\tsetPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n\t\t\tsetPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n\t\t\tsetPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\n\n\t\t\tsetPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n\t\t\tsetPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n\t\t\tsetPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n\t\t\tsetPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\n\n\t\t\tsetPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\n\n\t\t\tsetPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n\t\t\tsetPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n\t\t\tsetPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n\t\t\tsetPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n\t\t\tsetPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n\t\t\tsetPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n\t\t\tsetPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n\t\t\tsetPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t}\n\n\tfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n\t\t_vector.set(x, y, z).unproject(camera);\n\n\t\tconst points = pointMap[point];\n\n\t\tif (points !== undefined) {\n\t\t\tconst position = geometry.getAttribute('position');\n\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\n\t\t\t\tposition.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst _box = /*@__PURE__*/new Box3();\n\n\tclass BoxHelper extends LineSegments {\n\t\tconstructor(object, color = 0xffff00) {\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tconst positions = new Float32Array(8 * 3);\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new BufferAttribute(positions, 3));\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.object = object;\n\t\t\tthis.type = 'BoxHelper';\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.update();\n\t\t}\n\n\t\tupdate(object) {\n\t\t\tif (object !== undefined) {\n\t\t\t\tconsole.warn('THREE.BoxHelper: .update() has no longer arguments.');\n\t\t\t}\n\n\t\t\tif (this.object !== undefined) {\n\t\t\t\t_box.setFromObject(this.object);\n\t\t\t}\n\n\t\t\tif (_box.isEmpty()) return;\n\t\t\tconst min = _box.min;\n\t\t\tconst max = _box.max;\n\t\t\t/*\n\t\t\t\t5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\t\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tconst position = this.geometry.attributes.position;\n\t\t\tconst array = position.array;\n\t\t\tarray[0] = max.x;\n\t\t\tarray[1] = max.y;\n\t\t\tarray[2] = max.z;\n\t\t\tarray[3] = min.x;\n\t\t\tarray[4] = max.y;\n\t\t\tarray[5] = max.z;\n\t\t\tarray[6] = min.x;\n\t\t\tarray[7] = min.y;\n\t\t\tarray[8] = max.z;\n\t\t\tarray[9] = max.x;\n\t\t\tarray[10] = min.y;\n\t\t\tarray[11] = max.z;\n\t\t\tarray[12] = max.x;\n\t\t\tarray[13] = max.y;\n\t\t\tarray[14] = min.z;\n\t\t\tarray[15] = min.x;\n\t\t\tarray[16] = max.y;\n\t\t\tarray[17] = min.z;\n\t\t\tarray[18] = min.x;\n\t\t\tarray[19] = min.y;\n\t\t\tarray[20] = min.z;\n\t\t\tarray[21] = max.x;\n\t\t\tarray[22] = min.y;\n\t\t\tarray[23] = min.z;\n\t\t\tposition.needsUpdate = true;\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\t}\n\n\t\tsetFromObject(object) {\n\t\t\tthis.object = object;\n\t\t\tthis.update();\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tLineSegments.prototype.copy.call(this, source);\n\t\t\tthis.object = source.object;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Box3Helper extends LineSegments {\n\t\tconstructor(box, color = 0xffff00) {\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tconst positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.box = box;\n\t\t\tthis.type = 'Box3Helper';\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tconst box = this.box;\n\t\t\tif (box.isEmpty()) return;\n\t\t\tbox.getCenter(this.position);\n\t\t\tbox.getSize(this.scale);\n\t\t\tthis.scale.multiplyScalar(0.5);\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tclass PlaneHelper extends Line {\n\t\tconstructor(plane, size = 1, hex = 0xffff00) {\n\t\t\tconst color = hex;\n\t\t\tconst positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tgeometry.computeBoundingSphere();\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.type = 'PlaneHelper';\n\t\t\tthis.plane = plane;\n\t\t\tthis.size = size;\n\t\t\tconst positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n\t\t\tconst geometry2 = new BufferGeometry();\n\t\t\tgeometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n\t\t\tgeometry2.computeBoundingSphere();\n\t\t\tthis.add(new Mesh(geometry2, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\topacity: 0.2,\n\t\t\t\ttransparent: true,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false\n\t\t\t})));\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tlet scale = -this.plane.constant;\n\t\t\tif (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n\t\t\tthis.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n\t\t\tthis.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\t\tthis.lookAt(this.plane.normal);\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tconst _axis = /*@__PURE__*/new Vector3();\n\n\tlet _lineGeometry, _coneGeometry;\n\n\tclass ArrowHelper extends Object3D {\n\t\t// dir is assumed to be normalized\n\t\tconstructor(dir = new Vector3(0, 0, 1), origin = new Vector3(0, 0, 0), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ArrowHelper';\n\n\t\t\tif (_lineGeometry === undefined) {\n\t\t\t\t_lineGeometry = new BufferGeometry();\n\n\t\t\t\t_lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n\t\t\t\t_coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\n\n\t\t\t\t_coneGeometry.translate(0, -0.5, 0);\n\t\t\t}\n\n\t\t\tthis.position.copy(origin);\n\t\t\tthis.line = new Line(_lineGeometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.line.matrixAutoUpdate = false;\n\t\t\tthis.add(this.line);\n\t\t\tthis.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.cone.matrixAutoUpdate = false;\n\t\t\tthis.add(this.cone);\n\t\t\tthis.setDirection(dir);\n\t\t\tthis.setLength(length, headLength, headWidth);\n\t\t}\n\n\t\tsetDirection(dir) {\n\t\t\t// dir is assumed to be normalized\n\t\t\tif (dir.y > 0.99999) {\n\t\t\t\tthis.quaternion.set(0, 0, 0, 1);\n\t\t\t} else if (dir.y < -0.99999) {\n\t\t\t\tthis.quaternion.set(1, 0, 0, 0);\n\t\t\t} else {\n\t\t\t\t_axis.set(dir.z, 0, -dir.x).normalize();\n\n\t\t\t\tconst radians = Math.acos(dir.y);\n\t\t\t\tthis.quaternion.setFromAxisAngle(_axis, radians);\n\t\t\t}\n\t\t}\n\n\t\tsetLength(length, headLength = length * 0.2, headWidth = headLength * 0.2) {\n\t\t\tthis.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\n\n\t\t\tthis.line.updateMatrix();\n\t\t\tthis.cone.scale.set(headWidth, headLength, headWidth);\n\t\t\tthis.cone.position.y = length;\n\t\t\tthis.cone.updateMatrix();\n\t\t}\n\n\t\tsetColor(color) {\n\t\t\tthis.line.material.color.set(color);\n\t\t\tthis.cone.material.color.set(color);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source, false);\n\t\t\tthis.line.copy(source.line);\n\t\t\tthis.cone.copy(source.cone);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AxesHelper extends LineSegments {\n\t\tconstructor(size = 1) {\n\t\t\tconst vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n\t\t\tconst colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'AxesHelper';\n\t\t}\n\n\t\tsetColors(xAxisColor, yAxisColor, zAxisColor) {\n\t\t\tconst color = new Color();\n\t\t\tconst array = this.geometry.attributes.color.array;\n\t\t\tcolor.set(xAxisColor);\n\t\t\tcolor.toArray(array, 0);\n\t\t\tcolor.toArray(array, 3);\n\t\t\tcolor.set(yAxisColor);\n\t\t\tcolor.toArray(array, 6);\n\t\t\tcolor.toArray(array, 9);\n\t\t\tcolor.set(zAxisColor);\n\t\t\tcolor.toArray(array, 12);\n\t\t\tcolor.toArray(array, 15);\n\t\t\tthis.geometry.attributes.color.needsUpdate = true;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t}\n\n\tconst _floatView = new Float32Array(1);\n\n\tconst _int32View = new Int32Array(_floatView.buffer);\n\n\tclass DataUtils {\n\t\t// Converts float32 to float16 (stored as uint16 value).\n\t\tstatic toHalfFloat(val) {\n\t\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t\t* by James Tursa?s half-precision code. */\n\t\t\t_floatView[0] = val;\n\t\t\tconst x = _int32View[0];\n\t\t\tlet bits = x >> 16 & 0x8000;\n\t\t\t/* Get the sign */\n\n\t\t\tlet m = x >> 12 & 0x07ff;\n\t\t\t/* Keep one extra bit for rounding */\n\n\t\t\tconst e = x >> 23 & 0xff;\n\t\t\t/* Using int is faster here */\n\n\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t\t* half, return signed zero. */\n\n\t\t\tif (e < 103) return bits;\n\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\n\t\t\tif (e > 142) {\n\t\t\t\tbits |= 0x7c00;\n\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\n\t\t\t\tbits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\n\t\t\t\treturn bits;\n\t\t\t}\n\t\t\t/* If exponent underflows but not too much, return a denormal */\n\n\n\t\t\tif (e < 113) {\n\t\t\t\tm |= 0x0800;\n\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t\t* to 1, which is OK. */\n\n\t\t\t\tbits |= (m >> 114 - e) + (m >> 113 - e & 1);\n\t\t\t\treturn bits;\n\t\t\t}\n\n\t\t\tbits |= e - 112 << 10 | m >> 1;\n\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t\t* the exponent, which is OK. */\n\n\t\t\tbits += m & 1;\n\t\t\treturn bits;\n\t\t}\n\n\t}\n\n\tconst LOD_MIN = 4;\n\tconst LOD_MAX = 8;\n\tconst SIZE_MAX = Math.pow(2, LOD_MAX); // The standard deviations (radians) associated with the extra mips. These are\n\t// chosen to approximate a Trowbridge-Reitz distribution function times the\n\t// geometric shadowing function. These sigma values squared must match the\n\t// variance #defines in cube_uv_reflection_fragment.glsl.js.\n\n\tconst EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];\n\tconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length; // The maximum length of the blur for loop. Smaller sigmas will use fewer\n\t// samples and exit early, but not recompile the shader.\n\n\tconst MAX_SAMPLES = 20;\n\tconst ENCODINGS = {\n\t\t[LinearEncoding]: 0,\n\t\t[sRGBEncoding]: 1,\n\t\t[RGBEEncoding]: 2,\n\t\t[RGBM7Encoding]: 3,\n\t\t[RGBM16Encoding]: 4,\n\t\t[RGBDEncoding]: 5,\n\t\t[GammaEncoding]: 6\n\t};\n\tconst backgroundMaterial = new MeshBasicMaterial({\n\t\tside: BackSide,\n\t\tdepthWrite: false,\n\t\tdepthTest: false\n\t});\n\tconst backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\n\n\tconst _flatCamera = /*@__PURE__*/new OrthographicCamera();\n\n\tconst {\n\t\t_lodPlanes,\n\t\t_sizeLods,\n\t\t_sigmas\n\t} = /*@__PURE__*/_createPlanes();\n\n\tconst _clearColor = /*@__PURE__*/new Color();\n\n\tlet _oldTarget = null; // Golden Ratio\n\n\tconst PHI = (1 + Math.sqrt(5)) / 2;\n\tconst INV_PHI = 1 / PHI; // Vertices of a dodecahedron (except the opposites, which represent the\n\t// same axis), used as axis directions evenly spread on a sphere.\n\n\tconst _axisDirections = [/*@__PURE__*/new Vector3(1, 1, 1), /*@__PURE__*/new Vector3(-1, 1, 1), /*@__PURE__*/new Vector3(1, 1, -1), /*@__PURE__*/new Vector3(-1, 1, -1), /*@__PURE__*/new Vector3(0, PHI, INV_PHI), /*@__PURE__*/new Vector3(0, PHI, -INV_PHI), /*@__PURE__*/new Vector3(INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(-INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(PHI, INV_PHI, 0), /*@__PURE__*/new Vector3(-PHI, INV_PHI, 0)];\n\t/**\n\t * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n\t * (PMREM) from a cubeMap environment texture. This allows different levels of\n\t * blur to be quickly accessed based on material roughness. It is packed into a\n\t * special CubeUV format that allows us to perform custom interpolation so that\n\t * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n\t * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n\t * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n\t * higher roughness levels. In this way we maintain resolution to smoothly\n\t * interpolate diffuse lighting while limiting sampling computation.\n\t *\n\t * Paper: Fast, Accurate Image-Based Lighting\n\t * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n\t*/\n\n\tfunction convertLinearToRGBE(color) {\n\t\tconst maxComponent = Math.max(color.r, color.g, color.b);\n\t\tconst fExp = Math.min(Math.max(Math.ceil(Math.log2(maxComponent)), -128.0), 127.0);\n\t\tcolor.multiplyScalar(Math.pow(2.0, -fExp));\n\t\tconst alpha = (fExp + 128.0) / 255.0;\n\t\treturn alpha;\n\t}\n\n\tclass PMREMGenerator {\n\t\tconstructor(renderer) {\n\t\t\tthis._renderer = renderer;\n\t\t\tthis._pingPongRenderTarget = null;\n\t\t\tthis._blurMaterial = _getBlurShader(MAX_SAMPLES);\n\t\t\tthis._equirectShader = null;\n\t\t\tthis._cubemapShader = null;\n\n\t\t\tthis._compileMaterial(this._blurMaterial);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t\t * is placed at the origin).\n\t\t */\n\n\n\t\tfromScene(scene, sigma = 0, near = 0.1, far = 100) {\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\n\t\t\tthis._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\n\n\t\t\tif (sigma > 0) {\n\t\t\t\tthis._blur(cubeUVRenderTarget, 0, 0, sigma);\n\t\t\t}\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\n\n\t\tfromEquirectangular(equirectangular) {\n\t\t\treturn this._fromTexture(equirectangular);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\n\n\t\tfromCubemap(cubemap) {\n\t\t\treturn this._fromTexture(cubemap);\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\n\n\t\tcompileCubemapShader() {\n\t\t\tif (this._cubemapShader === null) {\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t\tthis._compileMaterial(this._cubemapShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\n\n\t\tcompileEquirectangularShader() {\n\t\t\tif (this._equirectShader === null) {\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t\tthis._compileMaterial(this._equirectShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t\t * one of them will cause any others to also become unusable.\n\t\t */\n\n\n\t\tdispose() {\n\t\t\tthis._blurMaterial.dispose();\n\n\t\t\tif (this._cubemapShader !== null) this._cubemapShader.dispose();\n\t\t\tif (this._equirectShader !== null) this._equirectShader.dispose();\n\n\t\t\tfor (let i = 0; i < _lodPlanes.length; i++) {\n\t\t\t\t_lodPlanes[i].dispose();\n\t\t\t}\n\t\t} // private interface\n\n\n\t\t_cleanup(outputTarget) {\n\t\t\tthis._pingPongRenderTarget.dispose();\n\n\t\t\tthis._renderer.setRenderTarget(_oldTarget);\n\n\t\t\toutputTarget.scissorTest = false;\n\n\t\t\t_setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\n\t\t}\n\n\t\t_fromTexture(texture) {\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets(texture);\n\n\t\t\tthis._textureToCubeUV(texture, cubeUVRenderTarget);\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\n\t\t_allocateTargets(texture) {\n\t\t\t// warning: null texture is valid\n\t\t\tconst params = {\n\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\tminFilter: NearestFilter,\n\t\t\t\tgenerateMipmaps: false,\n\t\t\t\ttype: UnsignedByteType,\n\t\t\t\tformat: RGBEFormat,\n\t\t\t\tencoding: _isLDR(texture) ? texture.encoding : RGBEEncoding,\n\t\t\t\tdepthBuffer: false\n\t\t\t};\n\n\t\t\tconst cubeUVRenderTarget = _createRenderTarget(params);\n\n\t\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget(params);\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\n\t\t_compileMaterial(material) {\n\t\t\tconst tmpMesh = new Mesh(_lodPlanes[0], material);\n\n\t\t\tthis._renderer.compile(tmpMesh, _flatCamera);\n\t\t}\n\n\t\t_sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\n\t\t\tconst fov = 90;\n\t\t\tconst aspect = 1;\n\t\t\tconst cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tconst upSign = [1, -1, 1, 1, 1, 1];\n\t\t\tconst forwardSign = [1, 1, 1, -1, -1, -1];\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst originalAutoClear = renderer.autoClear;\n\t\t\tconst outputEncoding = renderer.outputEncoding;\n\t\t\tconst toneMapping = renderer.toneMapping;\n\t\t\trenderer.getClearColor(_clearColor);\n\t\t\trenderer.toneMapping = NoToneMapping;\n\t\t\trenderer.outputEncoding = LinearEncoding;\n\t\t\trenderer.autoClear = false;\n\t\t\tlet useSolidColor = false;\n\t\t\tconst background = scene.background;\n\n\t\t\tif (background) {\n\t\t\t\tif (background.isColor) {\n\t\t\t\t\tbackgroundMaterial.color.copy(background).convertSRGBToLinear();\n\t\t\t\t\tscene.background = null;\n\t\t\t\t\tconst alpha = convertLinearToRGBE(backgroundMaterial.color);\n\t\t\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\t\t\tuseSolidColor = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbackgroundMaterial.color.copy(_clearColor).convertSRGBToLinear();\n\t\t\t\tconst alpha = convertLinearToRGBE(backgroundMaterial.color);\n\t\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\t\tuseSolidColor = true;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst col = i % 3;\n\n\t\t\t\tif (col == 0) {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(forwardSign[i], 0, 0);\n\t\t\t\t} else if (col == 1) {\n\t\t\t\t\tcubeCamera.up.set(0, 0, upSign[i]);\n\t\t\t\t\tcubeCamera.lookAt(0, forwardSign[i], 0);\n\t\t\t\t} else {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(0, 0, forwardSign[i]);\n\t\t\t\t}\n\n\t\t\t\t_setViewport(cubeUVRenderTarget, col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX);\n\n\t\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\n\t\t\t\tif (useSolidColor) {\n\t\t\t\t\trenderer.render(backgroundBox, cubeCamera);\n\t\t\t\t}\n\n\t\t\t\trenderer.render(scene, cubeCamera);\n\t\t\t}\n\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.outputEncoding = outputEncoding;\n\t\t\trenderer.autoClear = originalAutoClear;\n\t\t}\n\n\t\t_textureToCubeUV(texture, cubeUVRenderTarget) {\n\t\t\tconst renderer = this._renderer;\n\n\t\t\tif (texture.isCubeTexture) {\n\t\t\t\tif (this._cubemapShader == null) {\n\t\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._equirectShader == null) {\n\t\t\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\t\tconst mesh = new Mesh(_lodPlanes[0], material);\n\t\t\tconst uniforms = material.uniforms;\n\t\t\tuniforms['envMap'].value = texture;\n\n\t\t\tif (!texture.isCubeTexture) {\n\t\t\t\tuniforms['texelSize'].value.set(1.0 / texture.image.width, 1.0 / texture.image.height);\n\t\t\t}\n\n\t\t\tuniforms['inputEncoding'].value = ENCODINGS[texture.encoding];\n\t\t\tuniforms['outputEncoding'].value = ENCODINGS[cubeUVRenderTarget.texture.encoding];\n\n\t\t\t_setViewport(cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX);\n\n\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\t\t\trenderer.render(mesh, _flatCamera);\n\t\t}\n\n\t\t_applyPMREM(cubeUVRenderTarget) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst autoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\n\t\t\tfor (let i = 1; i < TOTAL_LODS; i++) {\n\t\t\t\tconst sigma = Math.sqrt(_sigmas[i] * _sigmas[i] - _sigmas[i - 1] * _sigmas[i - 1]);\n\t\t\t\tconst poleAxis = _axisDirections[(i - 1) % _axisDirections.length];\n\n\t\t\t\tthis._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\n\t\t\t}\n\n\t\t\trenderer.autoClear = autoClear;\n\t\t}\n\t\t/**\n\t\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t\t * accurate at the poles, but still does a decent job.\n\t\t */\n\n\n\t\t_blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\n\t\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\t\tthis._halfBlur(cubeUVRenderTarget, pingPongRenderTarget, lodIn, lodOut, sigma, 'latitudinal', poleAxis);\n\n\t\t\tthis._halfBlur(pingPongRenderTarget, cubeUVRenderTarget, lodOut, lodOut, sigma, 'longitudinal', poleAxis);\n\t\t}\n\n\t\t_halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst blurMaterial = this._blurMaterial;\n\n\t\t\tif (direction !== 'latitudinal' && direction !== 'longitudinal') {\n\t\t\t\tconsole.error('blur direction must be either latitudinal or longitudinal!');\n\t\t\t} // Number of standard deviations at which to cut off the discrete approximation.\n\n\n\t\t\tconst STANDARD_DEVIATIONS = 3;\n\t\t\tconst blurMesh = new Mesh(_lodPlanes[lodOut], blurMaterial);\n\t\t\tconst blurUniforms = blurMaterial.uniforms;\n\t\t\tconst pixels = _sizeLods[lodIn] - 1;\n\t\t\tconst radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);\n\t\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\t\tconst samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;\n\n\t\t\tif (samples > MAX_SAMPLES) {\n\t\t\t\tconsole.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);\n\t\t\t}\n\n\t\t\tconst weights = [];\n\t\t\tlet sum = 0;\n\n\t\t\tfor (let i = 0; i < MAX_SAMPLES; ++i) {\n\t\t\t\tconst x = i / sigmaPixels;\n\t\t\t\tconst weight = Math.exp(-x * x / 2);\n\t\t\t\tweights.push(weight);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tsum += weight;\n\t\t\t\t} else if (i < samples) {\n\t\t\t\t\tsum += 2 * weight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < weights.length; i++) {\n\t\t\t\tweights[i] = weights[i] / sum;\n\t\t\t}\n\n\t\t\tblurUniforms['envMap'].value = targetIn.texture;\n\t\t\tblurUniforms['samples'].value = samples;\n\t\t\tblurUniforms['weights'].value = weights;\n\t\t\tblurUniforms['latitudinal'].value = direction === 'latitudinal';\n\n\t\t\tif (poleAxis) {\n\t\t\t\tblurUniforms['poleAxis'].value = poleAxis;\n\t\t\t}\n\n\t\t\tblurUniforms['dTheta'].value = radiansPerPixel;\n\t\t\tblurUniforms['mipInt'].value = LOD_MAX - lodIn;\n\t\t\tblurUniforms['inputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\n\t\t\tblurUniforms['outputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\n\t\t\tconst outputSize = _sizeLods[lodOut];\n\t\t\tconst x = 3 * Math.max(0, SIZE_MAX - 2 * outputSize);\n\t\t\tconst y = (lodOut === 0 ? 0 : 2 * SIZE_MAX) + 2 * outputSize * (lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0);\n\n\t\t\t_setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\n\n\t\t\trenderer.setRenderTarget(targetOut);\n\t\t\trenderer.render(blurMesh, _flatCamera);\n\t\t}\n\n\t}\n\n\tfunction _isLDR(texture) {\n\t\tif (texture === undefined || texture.type !== UnsignedByteType) return false;\n\t\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\t}\n\n\tfunction _createPlanes() {\n\t\tconst _lodPlanes = [];\n\t\tconst _sizeLods = [];\n\t\tconst _sigmas = [];\n\t\tlet lod = LOD_MAX;\n\n\t\tfor (let i = 0; i < TOTAL_LODS; i++) {\n\t\t\tconst sizeLod = Math.pow(2, lod);\n\n\t\t\t_sizeLods.push(sizeLod);\n\n\t\t\tlet sigma = 1.0 / sizeLod;\n\n\t\t\tif (i > LOD_MAX - LOD_MIN) {\n\t\t\t\tsigma = EXTRA_LOD_SIGMA[i - LOD_MAX + LOD_MIN - 1];\n\t\t\t} else if (i == 0) {\n\t\t\t\tsigma = 0;\n\t\t\t}\n\n\t\t\t_sigmas.push(sigma);\n\n\t\t\tconst texelSize = 1.0 / (sizeLod - 1);\n\t\t\tconst min = -texelSize / 2;\n\t\t\tconst max = 1 + texelSize / 2;\n\t\t\tconst uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\n\t\t\tconst cubeFaces = 6;\n\t\t\tconst vertices = 6;\n\t\t\tconst positionSize = 3;\n\t\t\tconst uvSize = 2;\n\t\t\tconst faceIndexSize = 1;\n\t\t\tconst position = new Float32Array(positionSize * vertices * cubeFaces);\n\t\t\tconst uv = new Float32Array(uvSize * vertices * cubeFaces);\n\t\t\tconst faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\n\n\t\t\tfor (let face = 0; face < cubeFaces; face++) {\n\t\t\t\tconst x = face % 3 * 2 / 3 - 1;\n\t\t\t\tconst y = face > 2 ? 0 : -1;\n\t\t\t\tconst coordinates = [x, y, 0, x + 2 / 3, y, 0, x + 2 / 3, y + 1, 0, x, y, 0, x + 2 / 3, y + 1, 0, x, y + 1, 0];\n\t\t\t\tposition.set(coordinates, positionSize * vertices * face);\n\t\t\t\tuv.set(uv1, uvSize * vertices * face);\n\t\t\t\tconst fill = [face, face, face, face, face, face];\n\t\t\t\tfaceIndex.set(fill, faceIndexSize * vertices * face);\n\t\t\t}\n\n\t\t\tconst planes = new BufferGeometry();\n\t\t\tplanes.setAttribute('position', new BufferAttribute(position, positionSize));\n\t\t\tplanes.setAttribute('uv', new BufferAttribute(uv, uvSize));\n\t\t\tplanes.setAttribute('faceIndex', new BufferAttribute(faceIndex, faceIndexSize));\n\n\t\t\t_lodPlanes.push(planes);\n\n\t\t\tif (lod > LOD_MIN) {\n\t\t\t\tlod--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t_lodPlanes,\n\t\t\t_sizeLods,\n\t\t\t_sigmas\n\t\t};\n\t}\n\n\tfunction _createRenderTarget(params) {\n\t\tconst cubeUVRenderTarget = new WebGLRenderTarget(3 * SIZE_MAX, 3 * SIZE_MAX, params);\n\t\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\t\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\t\tcubeUVRenderTarget.scissorTest = true;\n\t\treturn cubeUVRenderTarget;\n\t}\n\n\tfunction _setViewport(target, x, y, width, height) {\n\t\ttarget.viewport.set(x, y, width, height);\n\t\ttarget.scissor.set(x, y, width, height);\n\t}\n\n\tfunction _getBlurShader(maxSamples) {\n\t\tconst weights = new Float32Array(maxSamples);\n\t\tconst poleAxis = new Vector3(0, 1, 0);\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'SphericalGaussianBlur',\n\t\t\tdefines: {\n\t\t\t\t'n': maxSamples\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'samples': {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\t'weights': {\n\t\t\t\t\tvalue: weights\n\t\t\t\t},\n\t\t\t\t'latitudinal': {\n\t\t\t\t\tvalue: false\n\t\t\t\t},\n\t\t\t\t'dTheta': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'mipInt': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'poleAxis': {\n\t\t\t\t\tvalue: poleAxis\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getEquirectShader() {\n\t\tconst texelSize = new Vector2(1, 1);\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'EquirectangularToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'texelSize': {\n\t\t\t\t\tvalue: texelSize\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCubemapShader() {\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'CubemapToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${_getEncodings()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCommonVertexShader() {\n\t\treturn (\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`\n\t\t);\n\t}\n\n\tfunction _getEncodings() {\n\t\treturn (\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`\n\t\t);\n\t}\n\n\tconst LineStrip = 0;\n\tconst LinePieces = 1;\n\tconst NoColors = 0;\n\tconst FaceColors = 1;\n\tconst VertexColors = 2;\n\tfunction MeshFaceMaterial(materials) {\n\t\tconsole.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n\t\treturn materials;\n\t}\n\tfunction MultiMaterial(materials = []) {\n\t\tconsole.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\n\t\tmaterials.clone = function () {\n\t\t\treturn materials.slice();\n\t\t};\n\n\t\treturn materials;\n\t}\n\tfunction PointCloud(geometry, material) {\n\t\tconsole.warn('THREE.PointCloud has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction Particle(material) {\n\t\tconsole.warn('THREE.Particle has been renamed to THREE.Sprite.');\n\t\treturn new Sprite(material);\n\t}\n\tfunction ParticleSystem(geometry, material) {\n\t\tconsole.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction PointCloudMaterial(parameters) {\n\t\tconsole.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleBasicMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleSystemMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction Vertex(x, y, z) {\n\t\tconsole.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n\t\treturn new Vector3(x, y, z);\n\t} //\n\n\tfunction DynamicBufferAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');\n\t\treturn new BufferAttribute(array, itemSize).setUsage(DynamicDrawUsage);\n\t}\n\tfunction Int8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n\t\treturn new Int8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n\t\treturn new Uint8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8ClampedAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n\t\treturn new Uint8ClampedBufferAttribute(array, itemSize);\n\t}\n\tfunction Int16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n\t\treturn new Int16BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n\t\treturn new Uint16BufferAttribute(array, itemSize);\n\t}\n\tfunction Int32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n\t\treturn new Int32BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n\t\treturn new Uint32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n\t\treturn new Float32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float64Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n\t\treturn new Float64BufferAttribute(array, itemSize);\n\t} //\n\n\tCurve.create = function (construct, getPoint) {\n\t\tconsole.log('THREE.Curve.create() has been deprecated');\n\t\tconstruct.prototype = Object.create(Curve.prototype);\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\t\treturn construct;\n\t}; //\n\n\n\tPath.prototype.fromPoints = function (points) {\n\t\tconsole.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\n\t\treturn this.setFromPoints(points);\n\t}; //\n\n\n\tfunction AxisHelper(size) {\n\t\tconsole.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\n\t\treturn new AxesHelper(size);\n\t}\n\tfunction BoundingBoxHelper(object, color) {\n\t\tconsole.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n\t\treturn new BoxHelper(object, color);\n\t}\n\tfunction EdgesHelper(object, hex) {\n\t\tconsole.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n\t\treturn new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\t\tconsole.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\t\tconsole.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n\t};\n\n\tfunction WireframeHelper(object, hex) {\n\t\tconsole.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n\t\treturn new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t} //\n\n\tLoader.prototype.extractUrlBase = function (url) {\n\t\tconsole.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\n\t\treturn LoaderUtils.extractUrlBase(url);\n\t};\n\n\tLoader.Handlers = {\n\t\tadd: function ()\n\t\t/* regex, loader */\n\t\t{\n\t\t\tconsole.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');\n\t\t},\n\t\tget: function ()\n\t\t/* file */\n\t\t{\n\t\t\tconsole.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');\n\t\t}\n\t};\n\tfunction XHRLoader(manager) {\n\t\tconsole.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n\t\treturn new FileLoader(manager);\n\t}\n\tfunction BinaryTextureLoader(manager) {\n\t\tconsole.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n\t\treturn new DataTextureLoader(manager);\n\t} //\n\n\tBox2.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t};\n\n\tBox2.prototype.empty = function () {\n\t\tconsole.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t};\n\n\tBox2.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tBox2.prototype.size = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box2: .size() has been renamed to .getSize().');\n\t\treturn this.getSize(optionalTarget);\n\t}; //\n\n\n\tBox3.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t};\n\n\tBox3.prototype.empty = function () {\n\t\tconsole.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t};\n\n\tBox3.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tBox3.prototype.isIntersectionSphere = function (sphere) {\n\t\tconsole.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\treturn this.intersectsSphere(sphere);\n\t};\n\n\tBox3.prototype.size = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box3: .size() has been renamed to .getSize().');\n\t\treturn this.getSize(optionalTarget);\n\t}; //\n\n\n\tSphere.prototype.empty = function () {\n\t\tconsole.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t}; //\n\n\n\tFrustum.prototype.setFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');\n\t\treturn this.setFromProjectionMatrix(m);\n\t}; //\n\n\n\tLine3.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t}; //\n\n\n\tMatrix3.prototype.flattenToArrayOffset = function (array, offset) {\n\t\tconsole.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\treturn this.toArray(array, offset);\n\t};\n\n\tMatrix3.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n\t\treturn vector.applyMatrix3(this);\n\t};\n\n\tMatrix3.prototype.multiplyVector3Array = function ()\n\t/* a */\n\t{\n\t\tconsole.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n\t};\n\n\tMatrix3.prototype.applyToBufferAttribute = function (attribute) {\n\t\tconsole.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');\n\t\treturn attribute.applyMatrix3(this);\n\t};\n\n\tMatrix3.prototype.applyToVector3Array = function ()\n\t/* array, offset, length */\n\t{\n\t\tconsole.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n\t};\n\n\tMatrix3.prototype.getInverse = function (matrix) {\n\t\tconsole.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\treturn this.copy(matrix).invert();\n\t}; //\n\n\n\tMatrix4.prototype.extractPosition = function (m) {\n\t\tconsole.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n\t\treturn this.copyPosition(m);\n\t};\n\n\tMatrix4.prototype.flattenToArrayOffset = function (array, offset) {\n\t\tconsole.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\treturn this.toArray(array, offset);\n\t};\n\n\tMatrix4.prototype.getPosition = function () {\n\t\tconsole.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n\t\treturn new Vector3().setFromMatrixColumn(this, 3);\n\t};\n\n\tMatrix4.prototype.setRotationFromQuaternion = function (q) {\n\t\tconsole.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n\t\treturn this.makeRotationFromQuaternion(q);\n\t};\n\n\tMatrix4.prototype.multiplyToArray = function () {\n\t\tconsole.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n\t};\n\n\tMatrix4.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.multiplyVector4 = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.multiplyVector3Array = function ()\n\t/* a */\n\t{\n\t\tconsole.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateAxis = function (v) {\n\t\tconsole.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n\t\tv.transformDirection(this);\n\t};\n\n\tMatrix4.prototype.crossVector = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.translate = function () {\n\t\tconsole.error('THREE.Matrix4: .translate() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateX = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateX() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateY = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateY() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateZ = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateZ() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateByAxis = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n\t};\n\n\tMatrix4.prototype.applyToBufferAttribute = function (attribute) {\n\t\tconsole.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');\n\t\treturn attribute.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.applyToVector3Array = function ()\n\t/* array, offset, length */\n\t{\n\t\tconsole.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n\t};\n\n\tMatrix4.prototype.makeFrustum = function (left, right, bottom, top, near, far) {\n\t\tconsole.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n\t\treturn this.makePerspective(left, right, top, bottom, near, far);\n\t};\n\n\tMatrix4.prototype.getInverse = function (matrix) {\n\t\tconsole.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\treturn this.copy(matrix).invert();\n\t}; //\n\n\n\tPlane.prototype.isIntersectionLine = function (line) {\n\t\tconsole.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n\t\treturn this.intersectsLine(line);\n\t}; //\n\n\n\tQuaternion.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n\t\treturn vector.applyQuaternion(this);\n\t};\n\n\tQuaternion.prototype.inverse = function () {\n\t\tconsole.warn('THREE.Quaternion: .inverse() has been renamed to invert().');\n\t\treturn this.invert();\n\t}; //\n\n\n\tRay.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tRay.prototype.isIntersectionPlane = function (plane) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n\t\treturn this.intersectsPlane(plane);\n\t};\n\n\tRay.prototype.isIntersectionSphere = function (sphere) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\treturn this.intersectsSphere(sphere);\n\t}; //\n\n\n\tTriangle.prototype.area = function () {\n\t\tconsole.warn('THREE.Triangle: .area() has been renamed to .getArea().');\n\t\treturn this.getArea();\n\t};\n\n\tTriangle.prototype.barycoordFromPoint = function (point, target) {\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\treturn this.getBarycoord(point, target);\n\t};\n\n\tTriangle.prototype.midpoint = function (target) {\n\t\tconsole.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\n\t\treturn this.getMidpoint(target);\n\t};\n\n\tTriangle.prototypenormal = function (target) {\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\treturn this.getNormal(target);\n\t};\n\n\tTriangle.prototype.plane = function (target) {\n\t\tconsole.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\n\t\treturn this.getPlane(target);\n\t};\n\n\tTriangle.barycoordFromPoint = function (point, a, b, c, target) {\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\treturn Triangle.getBarycoord(point, a, b, c, target);\n\t};\n\n\tTriangle.normal = function (a, b, c, target) {\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\treturn Triangle.getNormal(a, b, c, target);\n\t}; //\n\n\n\tShape.prototype.extractAllPoints = function (divisions) {\n\t\tconsole.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\n\t\treturn this.extractPoints(divisions);\n\t};\n\n\tShape.prototype.extrude = function (options) {\n\t\tconsole.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n\t\treturn new ExtrudeGeometry(this, options);\n\t};\n\n\tShape.prototype.makeGeometry = function (options) {\n\t\tconsole.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n\t\treturn new ShapeGeometry(this, options);\n\t}; //\n\n\n\tVector2.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector2.prototype.distanceToManhattan = function (v) {\n\t\tconsole.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\treturn this.manhattanDistanceTo(v);\n\t};\n\n\tVector2.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tVector3.prototype.setEulerFromRotationMatrix = function () {\n\t\tconsole.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n\t};\n\n\tVector3.prototype.setEulerFromQuaternion = function () {\n\t\tconsole.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n\t};\n\n\tVector3.prototype.getPositionFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n\t\treturn this.setFromMatrixPosition(m);\n\t};\n\n\tVector3.prototype.getScaleFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n\t\treturn this.setFromMatrixScale(m);\n\t};\n\n\tVector3.prototype.getColumnFromMatrix = function (index, matrix) {\n\t\tconsole.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n\t\treturn this.setFromMatrixColumn(matrix, index);\n\t};\n\n\tVector3.prototype.applyProjection = function (m) {\n\t\tconsole.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n\t\treturn this.applyMatrix4(m);\n\t};\n\n\tVector3.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector3.prototype.distanceToManhattan = function (v) {\n\t\tconsole.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\treturn this.manhattanDistanceTo(v);\n\t};\n\n\tVector3.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tVector4.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector4.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tObject3D.prototype.getChildByName = function (name) {\n\t\tconsole.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n\t\treturn this.getObjectByName(name);\n\t};\n\n\tObject3D.prototype.renderDepth = function () {\n\t\tconsole.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n\t};\n\n\tObject3D.prototype.translate = function (distance, axis) {\n\t\tconsole.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n\t\treturn this.translateOnAxis(axis, distance);\n\t};\n\n\tObject3D.prototype.getWorldRotation = function () {\n\t\tconsole.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\n\t};\n\n\tObject3D.prototype.applyMatrix = function (matrix) {\n\t\tconsole.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\treturn this.applyMatrix4(matrix);\n\t};\n\n\tObject.defineProperties(Object3D.prototype, {\n\t\teulerOrder: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\treturn this.rotation.order;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\tthis.rotation.order = value;\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t}\n\t\t}\n\t});\n\n\tMesh.prototype.setDrawMode = function () {\n\t\tconsole.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t};\n\n\tObject.defineProperties(Mesh.prototype, {\n\t\tdrawMode: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');\n\t\t\t\treturn TrianglesDrawMode;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t\t\t}\n\t\t}\n\t});\n\n\tSkinnedMesh.prototype.initBones = function () {\n\t\tconsole.error('THREE.SkinnedMesh: initBones() has been removed.');\n\t}; //\n\n\n\tPerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n\t\tconsole.warn('THREE.PerspectiveCamera.setLens is deprecated. ' + 'Use .setFocalLength and .filmGauge for a photographic setup.');\n\t\tif (filmGauge !== undefined) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength(focalLength);\n\t}; //\n\n\n\tObject.defineProperties(Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .onlyShadow has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n\t\t\t\tthis.shadow.camera.fov = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n\t\t\t\tthis.shadow.camera.left = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n\t\t\t\tthis.shadow.camera.right = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n\t\t\t\tthis.shadow.camera.top = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n\t\t\t\tthis.shadow.camera.bottom = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n\t\t\t\tthis.shadow.camera.near = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n\t\t\t\tthis.shadow.camera.far = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n\t\t\t\tthis.shadow.bias = value;\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .shadowDarkness has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n\t\t\t\tthis.shadow.mapSize.width = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n\t\t\t\tthis.shadow.mapSize.height = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tObject.defineProperties(BufferAttribute.prototype, {\n\t\tlength: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n\t\t\t\treturn this.array.length;\n\t\t\t}\n\t\t},\n\t\tdynamic: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\t\t\t},\n\t\t\tset: function ()\n\t\t\t/* value */\n\t\t\t{\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\tthis.setUsage(DynamicDrawUsage);\n\t\t\t}\n\t\t}\n\t});\n\n\tBufferAttribute.prototype.setDynamic = function (value) {\n\t\tconsole.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\treturn this;\n\t};\n\n\tBufferAttribute.prototype.copyIndicesArray = function ()\n\t/* indices */\n\t{\n\t\tconsole.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\n\t}, BufferAttribute.prototype.setArray = function ()\n\t/* array */\n\t{\n\t\tconsole.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t}; //\n\n\tBufferGeometry.prototype.addIndex = function (index) {\n\t\tconsole.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n\t\tthis.setIndex(index);\n\t};\n\n\tBufferGeometry.prototype.addAttribute = function (name, attribute) {\n\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');\n\n\t\tif (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n\t\t\treturn this.setAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n\t\t}\n\n\t\tif (name === 'index') {\n\t\t\tconsole.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n\t\t\tthis.setIndex(attribute);\n\t\t\treturn this;\n\t\t}\n\n\t\treturn this.setAttribute(name, attribute);\n\t};\n\n\tBufferGeometry.prototype.addDrawCall = function (start, count, indexOffset) {\n\t\tif (indexOffset !== undefined) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n\t\t}\n\n\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n\t\tthis.addGroup(start, count);\n\t};\n\n\tBufferGeometry.prototype.clearDrawCalls = function () {\n\t\tconsole.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n\t\tthis.clearGroups();\n\t};\n\n\tBufferGeometry.prototype.computeOffsets = function () {\n\t\tconsole.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n\t};\n\n\tBufferGeometry.prototype.removeAttribute = function (name) {\n\t\tconsole.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');\n\t\treturn this.deleteAttribute(name);\n\t};\n\n\tBufferGeometry.prototype.applyMatrix = function (matrix) {\n\t\tconsole.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\treturn this.applyMatrix4(matrix);\n\t};\n\n\tObject.defineProperties(BufferGeometry.prototype, {\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t}\n\t});\n\n\tInterleavedBuffer.prototype.setDynamic = function (value) {\n\t\tconsole.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\treturn this;\n\t};\n\n\tInterleavedBuffer.prototype.setArray = function ()\n\t/* array */\n\t{\n\t\tconsole.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t}; //\n\n\n\tExtrudeGeometry.prototype.getArrays = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');\n\t};\n\n\tExtrudeGeometry.prototype.addShapeList = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');\n\t};\n\n\tExtrudeGeometry.prototype.addShape = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShape() has been removed.');\n\t}; //\n\n\n\tScene.prototype.dispose = function () {\n\t\tconsole.error('THREE.Scene: .dispose() has been removed.');\n\t}; //\n\n\n\tUniform.prototype.onUpdate = function () {\n\t\tconsole.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n\t\treturn this;\n\t}; //\n\n\n\tObject.defineProperties(Material.prototype, {\n\t\twrapAround: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t}\n\t\t},\n\t\toverdraw: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapRGB has been removed.');\n\t\t\t\treturn new Color();\n\t\t\t}\n\t\t},\n\t\tshading: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\tthis.flatShading = value === FlatShading;\n\t\t\t}\n\t\t},\n\t\tstencilMask: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\treturn this.stencilFuncMask;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\tthis.stencilFuncMask = value;\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(ShaderMaterial.prototype, {\n\t\tderivatives: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\treturn this.extensions.derivatives;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\tthis.extensions.derivatives = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tWebGLRenderer.prototype.clearTarget = function (renderTarget, color, depth, stencil) {\n\t\tconsole.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\n\t\tthis.setRenderTarget(renderTarget);\n\t\tthis.clear(color, depth, stencil);\n\t};\n\n\tWebGLRenderer.prototype.animate = function (callback) {\n\t\tconsole.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\n\t\tthis.setAnimationLoop(callback);\n\t};\n\n\tWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n\t\treturn this.getRenderTarget();\n\t};\n\n\tWebGLRenderer.prototype.getMaxAnisotropy = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n\t\treturn this.capabilities.getMaxAnisotropy();\n\t};\n\n\tWebGLRenderer.prototype.getPrecision = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n\t\treturn this.capabilities.precision;\n\t};\n\n\tWebGLRenderer.prototype.resetGLState = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\n\t\treturn this.state.reset();\n\t};\n\n\tWebGLRenderer.prototype.supportsFloatTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n\t\treturn this.extensions.get('OES_texture_float');\n\t};\n\n\tWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n\t\treturn this.extensions.get('OES_texture_half_float');\n\t};\n\n\tWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n\t\treturn this.extensions.get('OES_standard_derivatives');\n\t};\n\n\tWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n\t\treturn this.extensions.get('WEBGL_compressed_texture_s3tc');\n\t};\n\n\tWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n\t\treturn this.extensions.get('WEBGL_compressed_texture_pvrtc');\n\t};\n\n\tWebGLRenderer.prototype.supportsBlendMinMax = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n\t\treturn this.extensions.get('EXT_blend_minmax');\n\t};\n\n\tWebGLRenderer.prototype.supportsVertexTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n\t\treturn this.capabilities.vertexTextures;\n\t};\n\n\tWebGLRenderer.prototype.supportsInstancedArrays = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n\t\treturn this.extensions.get('ANGLE_instanced_arrays');\n\t};\n\n\tWebGLRenderer.prototype.enableScissorTest = function (boolean) {\n\t\tconsole.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n\t\tthis.setScissorTest(boolean);\n\t};\n\n\tWebGLRenderer.prototype.initMaterial = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.addPrePlugin = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.addPostPlugin = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.updateShadowMap = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setFaceCulling = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.allocTextureUnit = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTexture = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTexture2D = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTextureCube = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');\n\t\treturn this.getActiveMipmapLevel();\n\t};\n\n\tObject.defineProperties(WebGLRenderer.prototype, {\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.enabled;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n\t\t\t\tthis.shadowMap.enabled = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.type;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n\t\t\t\tthis.shadowMap.type = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function ()\n\t\t\t/* value */\n\t\t\t{\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\tcontext: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');\n\t\t\t\treturn this.getContext();\n\t\t\t}\n\t\t},\n\t\tvr: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');\n\t\t\t\treturn this.xr;\n\t\t\t}\n\t\t},\n\t\tgammaInput: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t}\n\t\t},\n\t\tgammaOutput: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\tthis.outputEncoding = value === true ? sRGBEncoding : LinearEncoding;\n\t\t\t}\n\t\t},\n\t\ttoneMappingWhitePoint: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t\treturn 1.0;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(WebGLShadowMap.prototype, {\n\t\tcullFace: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function ()\n\t\t\t/* cullFace */\n\t\t\t{\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderReverseSided: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderSingleSided: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t}\n\t});\n\tfunction WebGLRenderTargetCube(width, height, options) {\n\t\tconsole.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');\n\t\treturn new WebGLCubeRenderTarget(width, options);\n\t} //\n\n\tObject.defineProperties(WebGLRenderTarget.prototype, {\n\t\twrapS: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\treturn this.texture.wrapS;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\tthis.texture.wrapS = value;\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\treturn this.texture.wrapT;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\tthis.texture.wrapT = value;\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\treturn this.texture.magFilter;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\tthis.texture.magFilter = value;\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\treturn this.texture.minFilter;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\tthis.texture.minFilter = value;\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\treturn this.texture.anisotropy;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\tthis.texture.anisotropy = value;\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\treturn this.texture.offset;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\tthis.texture.offset = value;\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\treturn this.texture.repeat;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\tthis.texture.repeat = value;\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\treturn this.texture.format;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\tthis.texture.format = value;\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\treturn this.texture.type;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\tthis.texture.type = value;\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\treturn this.texture.generateMipmaps;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\tthis.texture.generateMipmaps = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tAudio.prototype.load = function (file) {\n\t\tconsole.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n\t\tconst scope = this;\n\t\tconst audioLoader = new AudioLoader();\n\t\taudioLoader.load(file, function (buffer) {\n\t\t\tscope.setBuffer(buffer);\n\t\t});\n\t\treturn this;\n\t};\n\n\tAudioAnalyser.prototype.getData = function () {\n\t\tconsole.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n\t\treturn this.getFrequencyData();\n\t}; //\n\n\n\tCubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n\t\tconsole.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n\t\treturn this.update(renderer, scene);\n\t};\n\n\tCubeCamera.prototype.clear = function (renderer, color, depth, stencil) {\n\t\tconsole.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');\n\t\treturn this.renderTarget.clear(renderer, color, depth, stencil);\n\t};\n\n\tImageUtils.crossOrigin = undefined;\n\n\tImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n\t\tconst loader = new TextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tconst texture = loader.load(url, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n\t\tconst loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tconst texture = loader.load(urls, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadCompressedTexture = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n\t};\n\n\tImageUtils.loadCompressedTextureCube = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n\t}; //\n\n\n\tfunction CanvasRenderer() {\n\t\tconsole.error('THREE.CanvasRenderer has been removed');\n\t} //\n\n\tfunction JSONLoader() {\n\t\tconsole.error('THREE.JSONLoader has been removed.');\n\t} //\n\n\tconst SceneUtils = {\n\t\tcreateMultiMaterialObject: function ()\n\t\t/* geometry, materials */\n\t\t{\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tdetach: function ()\n\t\t/* child, parent, scene */\n\t\t{\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tattach: function ()\n\t\t/* child, scene, parent */\n\t\t{\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t}\n\t}; //\n\n\tfunction LensFlare() {\n\t\tconsole.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');\n\t}\n\n\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t/* eslint-disable no-undef */\n\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\n\t\t\tdetail: {\n\t\t\t\trevision: REVISION\n\t\t\t}\n\t\t}));\n\t\t/* eslint-enable no-undef */\n\n\t}\n\n\tif (typeof window !== 'undefined') {\n\t\tif (window.__THREE__) {\n\t\t\tconsole.warn('WARNING: Multiple instances of Three.js being imported.');\n\t\t} else {\n\t\t\twindow.__THREE__ = REVISION;\n\t\t}\n\t}\n\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.AddEquation = AddEquation;\n\texports.AddOperation = AddOperation;\n\texports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.AlphaFormat = AlphaFormat;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\n\texports.AmbientLight = AmbientLight;\n\texports.AmbientLightProbe = AmbientLightProbe;\n\texports.AnimationClip = AnimationClip;\n\texports.AnimationLoader = AnimationLoader;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationUtils = AnimationUtils;\n\texports.ArcCurve = ArcCurve;\n\texports.ArrayCamera = ArrayCamera;\n\texports.ArrowHelper = ArrowHelper;\n\texports.Audio = Audio;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.AudioContext = AudioContext;\n\texports.AudioListener = AudioListener;\n\texports.AudioLoader = AudioLoader;\n\texports.AxesHelper = AxesHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.BackSide = BackSide;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.Bone = Bone;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.Box2 = Box2;\n\texports.Box3 = Box3;\n\texports.Box3Helper = Box3Helper;\n\texports.BoxBufferGeometry = BoxGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxHelper = BoxHelper;\n\texports.BufferAttribute = BufferAttribute;\n\texports.BufferGeometry = BufferGeometry;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.ByteType = ByteType;\n\texports.Cache = Cache;\n\texports.Camera = Camera;\n\texports.CameraHelper = CameraHelper;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.CanvasTexture = CanvasTexture;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.CircleBufferGeometry = CircleGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.Clock = Clock;\n\texports.Color = Color;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.ConeBufferGeometry = ConeGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.CubeCamera = CubeCamera;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.CubeTexture = CubeTexture;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.CullFaceNone = CullFaceNone;\n\texports.Curve = Curve;\n\texports.CurvePath = CurvePath;\n\texports.CustomBlending = CustomBlending;\n\texports.CustomToneMapping = CustomToneMapping;\n\texports.CylinderBufferGeometry = CylinderGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.Cylindrical = Cylindrical;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture2DArray = DataTexture2DArray;\n\texports.DataTexture3D = DataTexture3D;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.DataUtils = DataUtils;\n\texports.DecrementStencilOp = DecrementStencilOp;\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.DepthTexture = DepthTexture;\n\texports.DirectionalLight = DirectionalLight;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.DodecahedronBufferGeometry = DodecahedronGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DoubleSide = DoubleSide;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.DynamicCopyUsage = DynamicCopyUsage;\n\texports.DynamicDrawUsage = DynamicDrawUsage;\n\texports.DynamicReadUsage = DynamicReadUsage;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.EdgesHelper = EdgesHelper;\n\texports.EllipseCurve = EllipseCurve;\n\texports.EqualDepth = EqualDepth;\n\texports.EqualStencilFunc = EqualStencilFunc;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.Euler = Euler;\n\texports.EventDispatcher = EventDispatcher;\n\texports.ExtrudeBufferGeometry = ExtrudeGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.FaceColors = FaceColors;\n\texports.FileLoader = FileLoader;\n\texports.FlatShading = FlatShading;\n\texports.Float16BufferAttribute = Float16BufferAttribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.FloatType = FloatType;\n\texports.Fog = Fog;\n\texports.FogExp2 = FogExp2;\n\texports.Font = Font;\n\texports.FontLoader = FontLoader;\n\texports.FrontSide = FrontSide;\n\texports.Frustum = Frustum;\n\texports.GLBufferAttribute = GLBufferAttribute;\n\texports.GLSL1 = GLSL1;\n\texports.GLSL3 = GLSL3;\n\texports.GammaEncoding = GammaEncoding;\n\texports.GreaterDepth = GreaterDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n\texports.GreaterStencilFunc = GreaterStencilFunc;\n\texports.GridHelper = GridHelper;\n\texports.Group = Group;\n\texports.HalfFloatType = HalfFloatType;\n\texports.HemisphereLight = HemisphereLight;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.HemisphereLightProbe = HemisphereLightProbe;\n\texports.IcosahedronBufferGeometry = IcosahedronGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageUtils = ImageUtils;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.IncrementStencilOp = IncrementStencilOp;\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InstancedMesh = InstancedMesh;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.IntType = IntType;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.Interpolant = Interpolant;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.InvertStencilOp = InvertStencilOp;\n\texports.JSONLoader = JSONLoader;\n\texports.KeepStencilOp = KeepStencilOp;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.LOD = LOD;\n\texports.LatheBufferGeometry = LatheGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.Layers = Layers;\n\texports.LensFlare = LensFlare;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\n\texports.LessStencilFunc = LessStencilFunc;\n\texports.Light = Light;\n\texports.LightProbe = LightProbe;\n\texports.Line = Line;\n\texports.Line3 = Line3;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineLoop = LineLoop;\n\texports.LinePieces = LinePieces;\n\texports.LineSegments = LineSegments;\n\texports.LineStrip = LineStrip;\n\texports.LinearEncoding = LinearEncoding;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.LoadingManager = LoadingManager;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopPingPong = LoopPingPong;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.MOUSE = MOUSE;\n\texports.Material = Material;\n\texports.MaterialLoader = MaterialLoader;\n\texports.Math = MathUtils;\n\texports.MathUtils = MathUtils;\n\texports.Matrix3 = Matrix3;\n\texports.Matrix4 = Matrix4;\n\texports.MaxEquation = MaxEquation;\n\texports.Mesh = Mesh;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MinEquation = MinEquation;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.MixOperation = MixOperation;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n\texports.NeverDepth = NeverDepth;\n\texports.NeverStencilFunc = NeverStencilFunc;\n\texports.NoBlending = NoBlending;\n\texports.NoColors = NoColors;\n\texports.NoToneMapping = NoToneMapping;\n\texports.NormalAnimationBlendMode = NormalAnimationBlendMode;\n\texports.NormalBlending = NormalBlending;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.Object3D = Object3D;\n\texports.ObjectLoader = ObjectLoader;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.OctahedronBufferGeometry = OctahedronGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OneFactor = OneFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.PMREMGenerator = PMREMGenerator;\n\texports.ParametricBufferGeometry = ParametricGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.Particle = Particle;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystem = ParticleSystem;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Path = Path;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.Plane = Plane;\n\texports.PlaneBufferGeometry = PlaneGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneHelper = PlaneHelper;\n\texports.PointCloud = PointCloud;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.PointLight = PointLight;\n\texports.PointLightHelper = PointLightHelper;\n\texports.Points = Points;\n\texports.PointsMaterial = PointsMaterial;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PolyhedronBufferGeometry = PolyhedronGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PositionalAudio = PositionalAudio;\n\texports.PropertyBinding = PropertyBinding;\n\texports.PropertyMixer = PropertyMixer;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.Quaternion = Quaternion;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.REVISION = REVISION;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.RGBAFormat = RGBAFormat;\n\texports.RGBAIntegerFormat = RGBAIntegerFormat;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_BPTC_Format = RGBA_BPTC_Format;\n\texports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.RGBEFormat = RGBEFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBIntegerFormat = RGBIntegerFormat;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGB_ETC2_Format = RGB_ETC2_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGFormat = RGFormat;\n\texports.RGIntegerFormat = RGIntegerFormat;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.Ray = Ray;\n\texports.Raycaster = Raycaster;\n\texports.RectAreaLight = RectAreaLight;\n\texports.RedFormat = RedFormat;\n\texports.RedIntegerFormat = RedIntegerFormat;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ReplaceStencilOp = ReplaceStencilOp;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.RingBufferGeometry = RingGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\n\texports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\n\texports.Scene = Scene;\n\texports.SceneUtils = SceneUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.ShaderLib = ShaderLib;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.Shape = Shape;\n\texports.ShapeBufferGeometry = ShapeGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapePath = ShapePath;\n\texports.ShapeUtils = ShapeUtils;\n\texports.ShortType = ShortType;\n\texports.Skeleton = Skeleton;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.SmoothShading = SmoothShading;\n\texports.Sphere = Sphere;\n\texports.SphereBufferGeometry = SphereGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.Spherical = Spherical;\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\n\texports.SplineCurve = SplineCurve;\n\texports.SpotLight = SpotLight;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.Sprite = Sprite;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.StaticCopyUsage = StaticCopyUsage;\n\texports.StaticDrawUsage = StaticDrawUsage;\n\texports.StaticReadUsage = StaticReadUsage;\n\texports.StereoCamera = StereoCamera;\n\texports.StreamCopyUsage = StreamCopyUsage;\n\texports.StreamDrawUsage = StreamDrawUsage;\n\texports.StreamReadUsage = StreamReadUsage;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.SubtractEquation = SubtractEquation;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.TOUCH = TOUCH;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.TetrahedronBufferGeometry = TetrahedronGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TextBufferGeometry = TextGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.Texture = Texture;\n\texports.TextureLoader = TextureLoader;\n\texports.TorusBufferGeometry = TorusGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.Triangle = Triangle;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TubeBufferGeometry = TubeGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.UVMapping = UVMapping;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uniform = Uniform;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.VSMShadowMap = VSMShadowMap;\n\texports.Vector2 = Vector2;\n\texports.Vector3 = Vector3;\n\texports.Vector4 = Vector4;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.Vertex = Vertex;\n\texports.VertexColors = VertexColors;\n\texports.VideoTexture = VideoTexture;\n\texports.WebGL1Renderer = WebGL1Renderer;\n\texports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\n\texports.WebGLMultipleRenderTargets = WebGLMultipleRenderTargets;\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.WireframeHelper = WireframeHelper;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.XHRLoader = XHRLoader;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroFactor = ZeroFactor;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.ZeroStencilOp = ZeroStencilOp;\n\texports.sRGBEncoding = sRGBEncoding;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"],"names":["global","factory","exports","module","globalThis","self","THREE","this","REVISION","AddEquation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","UnsignedByteType","UnsignedShortType","UnsignedIntType","FloatType","HalfFloatType","UnsignedInt248Type","RGBFormat","RGBAFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","KeepStencilOp","StaticDrawUsage","DynamicDrawUsage","GLSL3","EventDispatcher","addEventListener","type","listener","undefined","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_lut","toString","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toUpperCase","clamp","value","min","max","euclideanModulo","n","m","lerp","x","y","t","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","floor","MathUtils","Object","freeze","__proto__","mapLinear","a1","a2","b1","b2","inverseLerp","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","seededRandom","s","degToRad","degrees","radToDeg","radians","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","Vector2","constructor","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","copy","v","add","w","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","rotate","theta","translate","matrix","_canvas","isMatrix3","ImageUtils","image","test","src","HTMLCanvasElement","canvas","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","super","defineProperty","uuid","name","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","updateMatrix","source","toJSON","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","Array","isArray","isDataTexture","serializeImage","dispose","transformUv","uv","HTMLImageElement","ImageBitmap","getDataURL","data","isTexture","Vector4","z","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","setTexture","setSize","isWebGLRenderTarget","WebGLMultipleRenderTargets","count","il","isWebGLMultipleRenderTargets","WebGLMultisampleRenderTarget","samples","isWebGLMultisampleRenderTarget","Quaternion","_x","_y","_z","_w","qa","qb","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","_onChangeCallback","quaternion","setFromEuler","euler","update","isEuler","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","angleTo","rotateTowards","step","slerp","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","_onChange","callback","isQuaternion","Vector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","isVector3","Box3","Infinity","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","expandByPoint","setFromCenterAndSize","size","halfSize","_vector$b","setFromObject","object","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box$3","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","RotationOrders","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","isObject3D","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","serialize","library","element","JSON","stringify","isInstancedMesh","instanceMatrix","instanceColor","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","parse","child","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","targetLengthSq","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","getBarycoord","p3","uv1","uv2","uv3","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getUV","isFrontFacing","d4","vc","d5","d6","vb","va","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","alphaToCoverage","premultipliedAlpha","toneMapped","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","flatShading","currentValue","isRoot","color","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","srcPlanes","dstPlanes","isMaterial","_colorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","charAt","setColorName","toLowerCase","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHexString","getHSL","hue","saturation","lightness","delta","getStyle","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","normalized","NAMES","MeshBasicMaterial","isMeshBasicMaterial","_vector$9","_vector2$1","BufferAttribute","itemSize","TypeError","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","isBufferAttribute","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","arrayMax","TYPED_ARRAYS","getTypedArray","buffer","_id","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","needsUpdate","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","isNaN","jl","computeFaceNormals","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","isBufferGeometry","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","keys","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","assign","ml","String","raycaster","intersects","intersection","morphPosition","groupMaterial","checkBufferGeometryIntersection","faceIndex","face","isGeometry","morphInfluences","influence","boneTransform","checkIntersection","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","_needsFlipEnvMap","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","end","coplanarPoint","optionalNormalMatrix","referencePoint","isPlane","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","get","deleteBuffer","delete","bufferType","cached","bytesPerElement","elementSize","createBuffer","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","BYTES_PER_ELEMENT","bufferSubData","subarray","updateBuffer","PlaneGeometry","width_half","height_half","segment_width","segment_height","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","cubemaps","state","objects","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","reset","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","saveCache","ELEMENT_ARRAY_BUFFER","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","has","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","setState","useCache","materialProperties","nGlobal","lGlobal","clippingState","WebGLCubeMaps","mapTextureMapping","onTextureDispose","cubemap","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","sort","MAX_SAFE_INTEGER","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","onInstancedMeshDispose","instancedMesh","buffergeometry","physical","transmissionSamplerSize","transmissionSamplerMap","DataTexture2DArray","wrapR","isDataTexture2DArray","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","safeSetTexture2D","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueT2DArray1","setTexture2DArray","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","trim","split","join","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","generateEnvMapBlendingDefine","gammaFactorDefine","customExtensions","chunks","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","generateExtensions","customDefines","generateDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","cachedUniforms","deleteShader","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","getParameters","shadows","isMeshStandardMaterial","bones","nVertexUniforms","nVertexMatrices","getMaxBones","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","transmissive","defaultProgram","getNextRenderItem","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","ShadowUniformsCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","WebGLShadowMap","_renderer","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","_maxTextureSize","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","renderObject","shadowCamera","k","kl","depthMaterial","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","VSMShadowMap","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","enabledCapabilities","xrFramebuffer","currentBoundFramebuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","BLEND","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","factor","POLYGON_OFFSET_FILL","activeTexture","webglSlot","TEXTURE0","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","bindXRFramebuffer","useProgram","setMaterial","frontFaceCW","SAMPLE_ALPHA_TO_COVERAGE","setLineWidth","lineWidth","SCISSOR_TEST","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","log2","getInternalFormat","internalFormatName","glFormat","glType","RED","R32F","R16F","R8","RGB","RGB32F","RGB16F","RGB8","RGBA32F","RGBA16F","RGBA8","filterFallback","LINEAR","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","isCompressed","isCompressedTexture","cubeImage","convert","glInternalFormat","setTextureParameters","mipmap","mipmapImage","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_3D","TEXTURE_2D_ARRAY","TEXTURE_WRAP_R","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","setupFrameBufferTexture","attachment","textureTarget","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","isMultipleRenderTargets","isRenderTarget3D","createFramebuffer","COLOR_ATTACHMENT0","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","WebGLUtils","UnsignedShort4444Type","UNSIGNED_SHORT_4_4_4_4","UnsignedShort5551Type","UNSIGNED_SHORT_5_5_5_1","UnsignedShort565Type","UNSIGNED_SHORT_5_6_5","ByteType","ShortType","IntType","HALF_FLOAT_OES","AlphaFormat","ALPHA","LuminanceFormat","LUMINANCE","LuminanceAlphaFormat","LUMINANCE_ALPHA","RedFormat","RedIntegerFormat","RED_INTEGER","RGFormat","RG","RGIntegerFormat","RG_INTEGER","RGBIntegerFormat","RGB_INTEGER","RGBAIntegerFormat","RGBA_INTEGER","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","disconnect","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","glBinding","glFramebuffer","glProjLayer","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","onSessionEnd","forEach","isPresenting","onInputSourcesChange","inputSources","removed","added","cameraAutoUpdate","getController","getControllerGrip","getHand","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","async","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","depthFormat","projectionlayerInit","colorFormat","scaleFactor","XRWebGLBinding","createProjectionLayer","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","depthNear","depthFar","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","getCamera","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","glSubImage","getViewSubImage","colorTexture","depthStencilTexture","WebGLMaterials","refreshUniformsCommon","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLRenderer","display","createCanvasElement","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_currentDrawBuffers","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","rangeMin","rangeMax","message","initGLContext","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","releaseMaterialProgramReferences","deallocateMaterial","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","DYNAMIC_DRAW","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","getProgram","projectObject","isLOD","isImmediateRenderObject","renderObjects","camera2","renderObjectImmediate","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","computeBoneTexture","boneTextureSize","window","opaqueObjects","transmissiveObjects","transparentObjects","needsAntialias","currentToneMapping","renderTransmissiveObjects","drawBuffersWEBGL","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","texSubImage3D","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","addLevel","getCurrentLevel","getObjectForDistance","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","bind","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","fromJSON","json","boneInverse","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","computeLineDistances","lineDistances","params","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","requestVideoFrameCallback","updateVideo","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","CircleGeometry","segments","thetaStart","thetaLength","vertex","segment","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","applyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","isArcCurve","px","py","pz","CatmullRomCurve3","curveType","intPoint","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","isCatmullRomCurve3","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","Earcut","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","again","area","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","leftmost","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","Node","an","bp","ShapeUtils","contour","pts","holes","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","extrudeByPath","shapePoints","extractPoints","isClockWise","reverse","hl","ahole","triangulateShape","concat","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","LatheGeometry","phiStart","phiLength","inverseSegments","base","n1","OctahedronGeometry","ParametricGeometry","func","slices","stacks","EPS","pu","pv","sliceCount","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TextGeometry","text","font","isFont","generateShapes","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateSegment","generateIndices","generateBufferData","WireframeGeometry","edge","edges","o","ol","edge1","edge2","Geometries","BoxBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","ParametricBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TextBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","RawShaderMaterial","STANDARD","PHYSICAL","ior","TOON","MATCAP","Materials","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","morphTarget","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","typeName","getTrackTypeForValueTypeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","urlModifier","isLoading","itemsLoaded","itemsTotal","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","Promise","resolve","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","FileLoader","setTimeout","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","send","setResponseType","setMimeType","ImageLoader","onImageLoad","onImageError","substr","CubeTextureLoader","urls","loaded","loadTexture","DataTextureLoader","texData","mipmapCount","TextureLoader","isJPEG","search","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","segmentLength","lens","cacheLengths","sums","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","getPointsHoles","holesPts","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","scaleW","scaleH","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","shBasis","isSphericalHarmonics3","LightProbe","MaterialLoader","getTexture","shading","setTextures","LoaderUtils","TextDecoder","decode","fromCharCode","escape","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","arrayBuffer","getArrayBuffer","typedArray","bufferAttribute","drawcalls","offsets","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","ImageBitmapLoader","createImageBitmap","fetch","setOptions","fetchOptions","credentials","headers","then","res","blob","colorSpaceConversion","imageBitmap","catch","isImageBitmapLoader","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","tmpPoints","tmpHoles","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","Font","paths","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","createPaths","glyph","glyphs","familyName","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","Audio","gain","createGain","connect","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","currentTime","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","setTargetAtTime","getDetune","getFilter","setFilter","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","PropertyBinding","rootNode","parsedPath","parseTrackName","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","root","isAnimationObjectGroup","Composite","matches","results","objectName","objectIndex","propertyIndex","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","targetObject","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","targetGroup","optionalParsedPath","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","LoopOnce","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","findByName","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","setType","setItemSize","setCount","ascSort","intersectObject","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","ImmediateRenderObject","_vector$3","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","_vector$1","_color1","_color2","GridHelper","_v1","_v2","_v3","_vector","_camera","setPoint","pointMap","_box","BoxHelper","_axis","_lineGeometry","_coneGeometry","AxesHelper","setColors","xAxisColor","yAxisColor","zAxisColor","_floatView","_int32View","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","LOD_MAX","ENCODINGS","backgroundMaterial","backgroundBox","_flatCamera","_lodPlanes","_sizeLods","_sigmas","_createPlanes","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","convertLinearToRGBE","maxComponent","fExp","_isLDR","lod","sizeLod","sigma","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","_createRenderTarget","cubeUVRenderTarget","_setViewport","_getEquirectShader","shaderMaterial","inputEncoding","_getCommonVertexShader","_getEncodings","_getCubemapShader","construct","fromPoints","extractUrlBase","Handlers","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","prototypenormal","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","audioLoader","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","SceneUtils","createMultiMaterialObject","detach","revision","__THREE__","ACESFilmicToneMapping","AddOperation","AdditiveBlending","AlwaysDepth","AlwaysStencilFunc","AnimationLoader","ArrowHelper","headLength","headWidth","cone","setDirection","setColor","AudioListener","destination","timeDelta","_clock","removeFilter","getMasterVolume","setMasterVolume","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","AxisHelper","BackSide","BasicDepthPacking","BasicShadowMap","BinaryTextureLoader","BoundingBoxHelper","Box3Helper","CameraHelper","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","CanvasRenderer","CineonToneMapping","CompressedTextureLoader","texDatas","isCubemap","CullFaceBack","CullFaceFront","CullFaceFrontBack","CullFaceNone","CustomBlending","CustomToneMapping","Cylindrical","other","setFromCartesianCoords","DataUtils","val","DecrementStencilOp","DecrementWrapStencilOp","DirectionalLightHelper","lightPlane","targetLine","DoubleSide","DstAlphaFactor","DstColorFactor","DynamicBufferAttribute","DynamicCopyUsage","DynamicReadUsage","EdgesHelper","EqualDepth","EqualStencilFunc","FaceColors","FlatShading","Float32Attribute","Float64Attribute","FontLoader","FrontSide","GLSL1","GreaterDepth","GreaterEqualDepth","GreaterEqualStencilFunc","GreaterStencilFunc","HemisphereLightHelper","IncrementStencilOp","IncrementWrapStencilOp","Int16Attribute","Int32Attribute","Int8Attribute","InvertStencilOp","JSONLoader","LensFlare","LessDepth","LessEqualDepth","LessEqualStencilFunc","LessStencilFunc","LinePieces","LineStrip","LinearMipMapLinearFilter","LinearMipMapNearestFilter","LinearToneMapping","LogLuvEncoding","LoopPingPong","LoopRepeat","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","MaxEquation","MeshFaceMaterial","MinEquation","MixOperation","MultiMaterial","isMultiMaterial","MultiplyBlending","MultiplyOperation","NearestMipMapLinearFilter","NearestMipMapNearestFilter","NeverDepth","NeverStencilFunc","NoBlending","NoColors","NoToneMapping","NormalBlending","NotEqualDepth","NotEqualStencilFunc","ObjectLoader","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","parseImagesAsync","bufferGeometryLoader","deserializeImage","loadImage","deserializedImage","currentUrl","parseConstant","getGeometry","getMaterial","objectAnimations","setTexturePath","ObjectSpaceNormalMap","OneFactor","OneMinusDstAlphaFactor","OneMinusDstColorFactor","OneMinusSrcAlphaFactor","OneMinusSrcColorFactor","PCFShadowMap","PCFSoftShadowMap","PMREMGenerator","_pingPongRenderTarget","_blurMaterial","weights","poleAxis","latitudinal","dTheta","mipInt","_getBlurShader","_equirectShader","_cubemapShader","_compileMaterial","fromScene","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","compileEquirectangularShader","outputTarget","_textureToCubeUV","tmpMesh","cubeCamera","upSign","forwardSign","originalAutoClear","useSolidColor","col","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","outputSize","Particle","ParticleBasicMaterial","ParticleSystem","ParticleSystemMaterial","PlaneHelper","positions2","PointCloud","PointCloudMaterial","PointLightHelper","sphereSize","PolarGridHelper","radials","circles","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","RGBADepthPacking","RGBA_ASTC_10x10_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_BPTC_Format","RGBEFormat","RGB_ETC1_Format","Raycaster","setFromCamera","coords","intersectObjects","ReinhardToneMapping","ReplaceStencilOp","ReverseSubtractEquation","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SmoothShading","Spherical","makeSafe","SpotLightHelper","coneLength","coneWidth","SrcAlphaFactor","SrcAlphaSaturateFactor","SrcColorFactor","StaticCopyUsage","StaticReadUsage","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","StreamCopyUsage","StreamDrawUsage","StreamReadUsage","SubtractEquation","SubtractiveBlending","TOUCH","DOLLY_PAN","DOLLY_ROTATE","TangentSpaceNormalMap","TriangleFanDrawMode","TriangleStripDrawMode","TrianglesDrawMode","Uint16Attribute","Uint32Attribute","Uint8Attribute","Uint8ClampedAttribute","Vertex","VertexColors","WebGLRenderTargetCube","WireframeHelper","XHRLoader","ZeroFactor","ZeroStencilOp"],"version":3,"file":"index.636f11d4.js.map"}